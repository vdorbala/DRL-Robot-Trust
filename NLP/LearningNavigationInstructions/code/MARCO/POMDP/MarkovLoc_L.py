#!/usr/bin/env python
import sys
import MarkovLoc_Antie_Periph as POMDP

#Commented out by David Chen
#if len(sys.argv)>1 and sys.argv[1]:
#    Start,Dest = sys.argv[:2]
#else:
Start,Dest = 4,5

pomdp = POMDP.POMDP('L')

pomdp.grid = [
    '#############',
    '#########.###',
    '#########.###',
    '#####.......#',
    '#######.#.###',
    '#######.#...#',
    '#########.###',
    '#########...#',
    '#########.#.#',
    '#########.#.#',
    '#########.#.#',
    '###.........#',
    '#####.###.#.#',
    '###.........#',
    '#####.#.#.#.#',
    '###.........#',
    '#.###.#.#.#.#',
    '#.....#.#...#',
    '#############',
    ]

pomdp.map_dir = 'Maps'
pomdp.map_image_file = 'MapDirection%s.png' % (pomdp.name)
pomdp.map_offsets = (20,10,300,450)

pomdp.locations = {
                                                      18 : ( 1,9),
                            15 : ( 3,5), 16 : ( 3,7), 19 : ( 3,9), 27 : ( 3,11),
                                         17 : ( 5,7), 20 : ( 5,9), 28 : ( 5,11),
                                                      21 : ( 7,9), 29 : ( 7,11),
                                                      22 : ( 9,9), 30 : ( 9,11),
                3 : (11,3),  7 : (11,5), 11 : (11,7), 23 : (11,9), 31 : (11,11),
                4 : (13,3),  8 : (13,5), 12 : (13,7), 24 : (13,9), 32 : (13,11),
    1 : (15,1), 5 : (15,3),  9 : (15,5), 13 : (15,7), 25 : (15,9), 33 : (15,11),
    2 : (17,1), 6 : (17,3), 10 : (17,5), 14 : (17,7), 26 : (17,9), 34 : (17,11),
    }

pomdp.plat_row_offset = 15
pomdp.plat_col_offset = 18
pomdp.plat_directions = {'N':0, 'E':90, 'S':180, 'W':270}
pomdp.plat_orientations = {0:0, 90:1, 180:2, 270:3}

pomdp.NumPlaces=35
pomdp.NumPoses=4

pomdp.Gateways = {
    (1,2) : (2,2),
    (2,1) : (6,1),
    (3,1) : (7,1),
    (4,1) : (8,1),
    (5,1) : (9,1),
    (6,1) : (10,1),
    (7,1) : (11,1),
    (7,2) : (8,2),
    (8,1) : (12,1),
    (8,2) : (9,2),
    (9,1) : (13,1),
    (9,2) : (10,2),
    (11,1) : (23,1),
    (12,1) : (24,1),
    (12,2) : (13,2),
    (13,1) : (25,1),
    (13,2) : (14,2),
    (15,1) : (16,1),
    (16,1) : (19,1),
    (16,2) : (17,2),
    (18,2) : (19,2),
    (19,1) : (27,1),
    (19,2) : (20,2),
    (20,1) : (28,1),
    (20,2) : (21,2),
    (21,1) : (29,1),
    (21,2) : (22,2),
    (22,2) : (23,2),
    (23,1) : (31,1),
    (23,2) : (24,2),
    (24,1) : (32,1),
    (24,2) : (25,2),
    (25,1) : (33,1),
    (25,2) : (26,2),
    (26,1) : (34,1),
    (29,2) : (30,2),
    (30,2) : (31,2),
    (31,2) : (32,2),
    (32,2) : (33,2),
    (33,2) : (34,2),
    }

pomdp.PositionSet = {}

pomdp.PositionSet[0] = {
    1 : 16,
    2 : 9,
    3 : 1,
    4 : 31,
    5 : 20,
    6 : 13,
    7 : 7,
    }

pomdp.PositionSet[1] = {
    1 : 10,
    2 : 29,
    3 : 11,
    4 : 4,
    5 : 18,
    6 : 16,
    7 : 33,
    }

pomdp.PosSet = 0
pomdp.Positions = pomdp.PositionSet[pomdp.PosSet]

pomdp.PathSpecs = {
    '2+' : [(15,1),(16,1),(19,1),(27,1)],
    '3+' : [(20,1),(28,1)],
    '4+' : [(21,1),(29,1)],
    '6+' : [(3,1),(7,1),(11,1),(23,1),(31,1)],
    '7+' : [(4,1),(8,1),(12,1),(24,1),(32,1)],
    '8+' : [(5,1),(9,1),(13,1),(25,1),(33,1)],
    '9A+' : [(2,1),(6,1),(10,1)],
    '9B+' : [(26,1),(34,1)],
    'A+' : [(1,2),(2,2)],
    'C+' : [(7,2),(8,2),(9,2),(10,2)],
    'D1+' : [(16,2),(17,2)],
    'D2+' : [(12,2),(13,2),(14,2)],
    'E+' : [(18,2),(19,2),(20,2),(21,2),(22,2),(23,2),(24,2),(25,2),(26,2)],
    'F+' : [(29,2),(30,2),(31,2),(32,2),(33,2),(34,2)],
    }

pomdp.TextureLocs = {
    (1,2) : 'c',
    (2,1) : 'c',
    (3,1) : 'r',
    (4,1) : 'g',
    (5,1) : 's',
    (6,1) : 'c',
    (7,1) : 'r',
    (7,2) : 'h',
    (8,1) : 'g',
    (8,2) : 'h',
    (9,1) : 's',
    (9,2) : 'h',
    (11,1) : 'r',
    (12,1) : 'g',
    (12,2) : 'c',
    (13,1) : 's',
    (13,2) : 'c',
    (15,1) : 'w',
    (16,1) : 'w',
    (16,2) : 'c',
    (18,2) : 'b',
    (19,1) : 'w',
    (19,2) : 'b',
    (20,1) : 'c',
    (20,2) : 'b',
    (21,1) : 'c',
    (21,2) : 'b',
    (22,2) : 'b',
    (23,1) : 'r',
    (23,2) : 'b',
    (24,1) : 'g',
    (24,2) : 'b',
    (25,1) : 's',
    (25,2) : 'b',
    (26,1) : 'c',
    (29,2) : 't',
    (30,2) : 't',
    (31,2) : 't',
    (32,2) : 't',
    (33,2) : 't',
    }

pomdp.PictureLocs = {
    (1,2) : '6',
    (2,1) : '6',
    (3,1) : '6',
    (4,1) : '6',
    (5,1) : '6',
    (6,1) : '6',
    (7,1) : '6',
    (7,2) : '6',
    (8,1) : '6',
    (8,2) : '6',
    (9,1) : '6',
    (9,2) : '6',
    (11,1) : '7',
    (12,1) : '6',
    (12,2) : '6',
    (13,1) : '6',
    (13,2) : '6',
    (15,1) : '8',
    (16,1) : '8',
    (16,2) : '8',
    (18,2) : '8',
    (19,1) : '8',
    (19,2) : '8',
    (20,1) : '8',
    (20,2) : '8',
    (21,1) : '7',
    (21,2) : '7',
    (22,2) : '7',
    (23,1) : '7',
    (23,2) : '7',
    (24,1) : '7',
    (24,2) : '7',
    (25,1) : '7',
    (25,2) : '7',
    (26,1) : '7',
    (29,2) : '7',
    (30,2) : '7',
    (31,2) : '7',
    (32,2) : '7',
    (33,2) : '7',
    }

pomdp.ObjectLocs = {
    2 : 'B',
    5 : 'E',
    6 : 'C',
    14 : 'S',
    15 : 'H',
    16 : 'S',
    21 : 'L',
    23 : 'H',
    29 : 'S',
    32 : 'C',
    33 : 'L',
    }

pomdp.initialize(Start,Dest)
#pomdp.writefile()


#Added by David Chen to return a fresh copy
#of the map
def getMapL():
  mapL = POMDP.POMDP('L')

  mapL.grid = [
    '#############',
    '#########.###',
    '#########.###',
    '#####.......#',
    '#######.#.###',
    '#######.#...#',
    '#########.###',
    '#########...#',
    '#########.#.#',
    '#########.#.#',
    '#########.#.#',
    '###.........#',
    '#####.###.#.#',
    '###.........#',
    '#####.#.#.#.#',
    '###.........#',
    '#.###.#.#.#.#',
    '#.....#.#...#',
    '#############',
    ]

  mapL.map_dir = 'Maps'
  mapL.map_image_file = 'MapDirection%s.png' % (mapL.name)
  mapL.map_offsets = (20,10,300,450)

  mapL.locations = {
                                                      18 : ( 1,9),
                            15 : ( 3,5), 16 : ( 3,7), 19 : ( 3,9), 27 : ( 3,11),
                                         17 : ( 5,7), 20 : ( 5,9), 28 : ( 5,11),
                                                      21 : ( 7,9), 29 : ( 7,11),
                                                      22 : ( 9,9), 30 : ( 9,11),
                3 : (11,3),  7 : (11,5), 11 : (11,7), 23 : (11,9), 31 : (11,11),
                4 : (13,3),  8 : (13,5), 12 : (13,7), 24 : (13,9), 32 : (13,11),
    1 : (15,1), 5 : (15,3),  9 : (15,5), 13 : (15,7), 25 : (15,9), 33 : (15,11),
    2 : (17,1), 6 : (17,3), 10 : (17,5), 14 : (17,7), 26 : (17,9), 34 : (17,11),
    }

  mapL.plat_row_offset = 15
  mapL.plat_col_offset = 18
  mapL.plat_directions = {'N':0, 'E':90, 'S':180, 'W':270}
  mapL.plat_orientations = {0:0, 90:1, 180:2, 270:3}

  mapL.NumPlaces=35
  mapL.NumPoses=4

  mapL.Gateways = {
    (1,2) : (2,2),
    (2,1) : (6,1),
    (3,1) : (7,1),
    (4,1) : (8,1),
    (5,1) : (9,1),
    (6,1) : (10,1),
    (7,1) : (11,1),
    (7,2) : (8,2),
    (8,1) : (12,1),
    (8,2) : (9,2),
    (9,1) : (13,1),
    (9,2) : (10,2),
    (11,1) : (23,1),
    (12,1) : (24,1),
    (12,2) : (13,2),
    (13,1) : (25,1),
    (13,2) : (14,2),
    (15,1) : (16,1),
    (16,1) : (19,1),
    (16,2) : (17,2),
    (18,2) : (19,2),
    (19,1) : (27,1),
    (19,2) : (20,2),
    (20,1) : (28,1),
    (20,2) : (21,2),
    (21,1) : (29,1),
    (21,2) : (22,2),
    (22,2) : (23,2),
    (23,1) : (31,1),
    (23,2) : (24,2),
    (24,1) : (32,1),
    (24,2) : (25,2),
    (25,1) : (33,1),
    (25,2) : (26,2),
    (26,1) : (34,1),
    (29,2) : (30,2),
    (30,2) : (31,2),
    (31,2) : (32,2),
    (32,2) : (33,2),
    (33,2) : (34,2),
    }

  mapL.PositionSet = {}

  mapL.PositionSet[0] = {
    1 : 16,
    2 : 9,
    3 : 1,
    4 : 31,
    5 : 20,
    6 : 13,
    7 : 7,
    }

  mapL.PositionSet[1] = {
    1 : 10,
    2 : 29,
    3 : 11,
    4 : 4,
    5 : 18,
    6 : 16,
    7 : 33,
    }

  mapL.PosSet = 0
  mapL.Positions = mapL.PositionSet[mapL.PosSet]

  mapL.PathSpecs = {
    '2+' : [(15,1),(16,1),(19,1),(27,1)],
    '3+' : [(20,1),(28,1)],
    '4+' : [(21,1),(29,1)],
    '6+' : [(3,1),(7,1),(11,1),(23,1),(31,1)],
    '7+' : [(4,1),(8,1),(12,1),(24,1),(32,1)],
    '8+' : [(5,1),(9,1),(13,1),(25,1),(33,1)],
    '9A+' : [(2,1),(6,1),(10,1)],
    '9B+' : [(26,1),(34,1)],
    'A+' : [(1,2),(2,2)],
    'C+' : [(7,2),(8,2),(9,2),(10,2)],
    'D1+' : [(16,2),(17,2)],
    'D2+' : [(12,2),(13,2),(14,2)],
    'E+' : [(18,2),(19,2),(20,2),(21,2),(22,2),(23,2),(24,2),(25,2),(26,2)],
    'F+' : [(29,2),(30,2),(31,2),(32,2),(33,2),(34,2)],
    }

  mapL.TextureLocs = {
    (1,2) : 'c',
    (2,1) : 'c',
    (3,1) : 'r',
    (4,1) : 'g',
    (5,1) : 's',
    (6,1) : 'c',
    (7,1) : 'r',
    (7,2) : 'h',
    (8,1) : 'g',
    (8,2) : 'h',
    (9,1) : 's',
    (9,2) : 'h',
    (11,1) : 'r',
    (12,1) : 'g',
    (12,2) : 'c',
    (13,1) : 's',
    (13,2) : 'c',
    (15,1) : 'w',
    (16,1) : 'w',
    (16,2) : 'c',
    (18,2) : 'b',
    (19,1) : 'w',
    (19,2) : 'b',
    (20,1) : 'c',
    (20,2) : 'b',
    (21,1) : 'c',
    (21,2) : 'b',
    (22,2) : 'b',
    (23,1) : 'r',
    (23,2) : 'b',
    (24,1) : 'g',
    (24,2) : 'b',
    (25,1) : 's',
    (25,2) : 'b',
    (26,1) : 'c',
    (29,2) : 't',
    (30,2) : 't',
    (31,2) : 't',
    (32,2) : 't',
    (33,2) : 't',
    }

  mapL.PictureLocs = {
    (1,2) : '6',
    (2,1) : '6',
    (3,1) : '6',
    (4,1) : '6',
    (5,1) : '6',
    (6,1) : '6',
    (7,1) : '6',
    (7,2) : '6',
    (8,1) : '6',
    (8,2) : '6',
    (9,1) : '6',
    (9,2) : '6',
    (11,1) : '7',
    (12,1) : '6',
    (12,2) : '6',
    (13,1) : '6',
    (13,2) : '6',
    (15,1) : '8',
    (16,1) : '8',
    (16,2) : '8',
    (18,2) : '8',
    (19,1) : '8',
    (19,2) : '8',
    (20,1) : '8',
    (20,2) : '8',
    (21,1) : '7',
    (21,2) : '7',
    (22,2) : '7',
    (23,1) : '7',
    (23,2) : '7',
    (24,1) : '7',
    (24,2) : '7',
    (25,1) : '7',
    (25,2) : '7',
    (26,1) : '7',
    (29,2) : '7',
    (30,2) : '7',
    (31,2) : '7',
    (32,2) : '7',
    (33,2) : '7',
    }

  mapL.ObjectLocs = {
    2 : 'B',
    5 : 'E',
    6 : 'C',
    14 : 'S',
    15 : 'H',
    16 : 'S',
    21 : 'L',
    23 : 'H',
    29 : 'S',
    32 : 'C',
    33 : 'L',
    }
  
  # Dummy start and dest because the original MARCO code requires them
  Start,Dest = 4,5
  mapL.initialize(Start,Dest)
  return mapL