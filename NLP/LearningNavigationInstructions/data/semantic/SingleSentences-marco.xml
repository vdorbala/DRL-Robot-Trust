<?xml version="1.0"?>
<examples>
    <example file="Cleaned-WLH_Grid0_4_7_Dirs_1.txt" id="2-1">
	<nl lang="en"> face the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_7_Dirs_1.txt" id="2-2">
	<nl lang="en"> move until you see red brick floor to your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_7_Dirs_1.txt" id="2-3">
	<nl lang="en"> turn and walk down the red brick until you get to an alley with grey floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_7_Dirs_1.txt" id="2-4">
	<nl lang="en"> you should be two alleys away from a lamp and then an easel beyond that </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_7_Dirs_1.txt" id="3-1">
	<nl lang="en"> position 7 is at the intersection of the yellow and grey floored halls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-1">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-3">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-5">
	<nl lang="en"> go forward about two segments to the intersection containing the chair </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-6">
	<nl lang="en"> to one side you will see an intersection with the stone hall containing a stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_7_Dirs_1.txt" id="8-7">
	<nl lang="en"> go forward one segment to this intersection </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_1_Dirs_1.txt" id="11-1">
	<nl lang="en"> go away from the lamp to the intersection of the red brick and wood </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_1_Dirs_1.txt" id="11-2">
	<nl lang="en"> take a left onto the wood </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_1_Dirs_1.txt" id="11-3">
	<nl lang="en"> position one is one section down at the bench </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-2">
	<nl lang="en"> move to the brick alley and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-3">
	<nl lang="en"> move forward past the lamp and hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-4">
	<nl lang="en"> turn right at the stone floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-5">
	<nl lang="en"> move forward two alleys </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_2_Dirs_1.txt" id="12-6">
	<nl lang="en"> to your left and right is green octagon flooring and an easel is in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_3_Dirs_1.txt" id="13-1">
	<nl lang="en"> from one turn until you see a corner of blue carpet in a side alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_3_Dirs_1.txt" id="13-2">
	<nl lang="en"> move there </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_3_Dirs_1.txt" id="13-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_3_Dirs_1.txt" id="13-4">
	<nl lang="en"> move to the second alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_3_Dirs_1.txt" id="13-5">
	<nl lang="en"> you should see gray floor to your right and a chair in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_3_Dirs_1.txt" id="14-1">
	<nl lang="en"> follow the yellow path towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_3_Dirs_1.txt" id="14-2">
	<nl lang="en"> when the hall ends, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_3_Dirs_1.txt" id="14-3">
	<nl lang="en"> go straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_3_Dirs_1.txt" id="14-4">
	<nl lang="en"> when the hall ends again, take another right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_3_Dirs_1.txt" id="14-5">
	<nl lang="en"> at the end of this hall is position 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_7_Dirs_1.txt" id="17-1">
	<nl lang="en"> go out of the dead end you are in </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_7_Dirs_1.txt" id="17-2">
	<nl lang="en"> go to the other end of the hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_7_Dirs_1.txt" id="17-3">
	<nl lang="en"> make a right at the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_7_Dirs_1.txt" id="17-4">
	<nl lang="en"> keep going till you get to a piece of furniture </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-1">
	<nl lang="en"> turn so the wall is on your right side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_6_Dirs_1.txt" id="19-10">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_2_Dirs_1.txt" id="20-1">
	<nl lang="en"> take the yellow path all the way to the end of the hall until you can only either go right or left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_2_Dirs_1.txt" id="20-2">
	<nl lang="en"> there will be black easel here </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-1">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-3">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-5">
	<nl lang="en"> go to the end of the hall, one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-7">
	<nl lang="en"> go forward, passing the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-8">
	<nl lang="en"> follow the bare concrete hall to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-9">
	<nl lang="en"> turn into the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_1_Dirs_1.txt" id="22-10">
	<nl lang="en"> go forward to the intersection which has butterfly pictures on one side and eiffel tower pictures on the other </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_1_Dirs_1.txt" id="25-1">
	<nl lang="en"> with your back to the easel and the chair to your right move one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_1_Dirs_1.txt" id="25-2">
	<nl lang="en"> turn left and move onto the brick floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_1_Dirs_1.txt" id="25-3">
	<nl lang="en"> walk past the hatrack and the lamp to the wooden flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_1_Dirs_1.txt" id="25-4">
	<nl lang="en"> turn left and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-1">
	<nl lang="en"> turn to face the black corridor with the towers on both sides of the walls </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_4_Dirs_1.txt" id="26-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_1_Dirs_1.txt" id="27-1">
	<nl lang="en"> go towards an intersection with a red brick road </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_1_Dirs_1.txt" id="27-2">
	<nl lang="en"> turn towards the direction on this path which leads to butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_1_Dirs_1.txt" id="27-3">
	<nl lang="en"> when you reach an intersection with a wood path, turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_1_Dirs_1.txt" id="27-4">
	<nl lang="en"> once you hit a intersection with a bench, you are at position 1 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_1_Dirs_1.txt" id="28-1">
	<nl lang="en"> turn to face the green hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_1_Dirs_1.txt" id="28-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_1_Dirs_1.txt" id="28-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_1_Dirs_1.txt" id="28-4">
	<nl lang="en"> you should be facing the red hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_1_Dirs_1.txt" id="28-5">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-1">
	<nl lang="en"> face and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-3">
	<nl lang="en"> move to this chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-4">
	<nl lang="en"> move along the stone floor to the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-6">
	<nl lang="en"> move to the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-7">
	<nl lang="en"> turn right and move to the next alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_3_Dirs_1.txt" id="30-8">
	<nl lang="en"> in front of you is a hatrack and to your left is grey floored alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-1">
	<nl lang="en"> face the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-2">
	<nl lang="en"> move forward one alley to the wooden flooring </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-4">
	<nl lang="en"> walk along the wooden floor until you see red brick floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-5">
	<nl lang="en"> at this intersection look for flowered carpet and an easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_1_Dirs_1.txt" id="31-6">
	<nl lang="en"> move to the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_7_Dirs_1.txt" id="33-1">
	<nl lang="en"> it's in the middle of a grey floored hall with a stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_6_Dirs_1.txt" id="35-1">
	<nl lang="en"> follow the yellow path until it crosses the black </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_6_Dirs_1.txt" id="35-2">
	<nl lang="en"> take a left onto the black path and the next intersection should be position 6 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_3_Dirs_1.txt" id="37-1">
	<nl lang="en"> go straight until you get to the grey floor </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_3_Dirs_1.txt" id="37-2">
	<nl lang="en"> then take a left and take the hall all the way down to the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_7_Dirs_1.txt" id="38-1">
	<nl lang="en"> take the green path to the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_7_Dirs_1.txt" id="38-2">
	<nl lang="en"> go right onto the red brick towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_7_Dirs_1.txt" id="38-3">
	<nl lang="en"> one intersection past the lamp is 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_1_Dirs_1.txt" id="40-1">
	<nl lang="en"> take the pink path to the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_1_Dirs_1.txt" id="40-2">
	<nl lang="en"> go right on red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_1_Dirs_1.txt" id="40-3">
	<nl lang="en"> go all the way to the wood intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_1_Dirs_1.txt" id="40-4">
	<nl lang="en"> go left on wood </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_1_Dirs_1.txt" id="40-5">
	<nl lang="en"> position one is where the bench is </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_1_Dirs_1.txt" id="41-1">
	<nl lang="en"> take a left down the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_1_Dirs_1.txt" id="41-2">
	<nl lang="en"> then turn onto the wood floor hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_1_Dirs_1.txt" id="41-3">
	<nl lang="en"> then 1 has a bench on its spot </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_1.txt" id="44-1">
	<nl lang="en"> at two face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_1.txt" id="44-2">
	<nl lang="en"> move forward and follow the alley around until you end up on blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_1.txt" id="44-3">
	<nl lang="en"> walk on the blue until you pass a chair w/ a four way intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_1.txt" id="44-4">
	<nl lang="en"> one block past the chair is p-3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_1.txt" id="44-5">
	<nl lang="en"> you see a hat rack in front of you and an alley to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_6_Dirs_1.txt" id="45-1">
	<nl lang="en"> take the yellow path towards the end of the hall that's farthest away </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_6_Dirs_1.txt" id="45-2">
	<nl lang="en"> one intersection down is 6 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_6_Dirs_1.txt" id="47-1">
	<nl lang="en"> face the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_6_Dirs_1.txt" id="47-2">
	<nl lang="en"> go forward two segments along the yellow-tiled hall to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_6_Dirs_1.txt" id="47-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_6_Dirs_1.txt" id="47-4">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_6_Dirs_1.txt" id="47-5">
	<nl lang="en"> there is a bench in the hall to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_1_Dirs_1.txt" id="51-1">
	<nl lang="en"> down the grey hall to the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_1_Dirs_1.txt" id="51-2">
	<nl lang="en"> a left at the red hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_1_Dirs_1.txt" id="51-3">
	<nl lang="en"> down the red hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_1_Dirs_1.txt" id="51-4">
	<nl lang="en"> then another left onto the wooden hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_1_Dirs_1.txt" id="51-5">
	<nl lang="en"> and then position 1 has a bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_6_Dirs_1.txt" id="56-1">
	<nl lang="en"> turn to face the honeycomb yellow floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_6_Dirs_1.txt" id="56-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_6_Dirs_1.txt" id="56-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_6_Dirs_1.txt" id="56-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_5_Dirs_1.txt" id="58-1">
	<nl lang="en"> go straight towards the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_5_Dirs_1.txt" id="58-2">
	<nl lang="en"> at this intersection, go left onto the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_5_Dirs_1.txt" id="58-3">
	<nl lang="en"> at the very next intersection, go right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_5_Dirs_1.txt" id="58-4">
	<nl lang="en"> at the end of this hall at the corner, go left towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_5_Dirs_1.txt" id="58-5">
	<nl lang="en"> take a right at the easel onto the wood path and the first section you come to will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_6_Dirs_1.txt" id="59-1">
	<nl lang="en"> go towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_6_Dirs_1.txt" id="59-2">
	<nl lang="en"> at the chair, go left onto the blue path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_6_Dirs_1.txt" id="59-3">
	<nl lang="en"> follow it until you come to the pink path inersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_6_Dirs_1.txt" id="59-4">
	<nl lang="en"> here, go right onto the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_6_Dirs_1.txt" id="59-5">
	<nl lang="en"> at the very next intersection, take a right onto the plain path and follow it to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_5_Dirs_1.txt" id="64-1">
	<nl lang="en"> go towards the intersection of the black path and the brick path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_5_Dirs_1.txt" id="64-2">
	<nl lang="en"> take a left onto the brick patch and go all the way down until you get to where there are butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_5_Dirs_1.txt" id="64-3">
	<nl lang="en"> position 5 is one stop before the intersection of the red brick and the wood </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_3_Dirs_1.txt" id="68-1">
	<nl lang="en"> face the longer end of the fish hallway with no pnk on the florr </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_3_Dirs_1.txt" id="68-2">
	<nl lang="en"> follow this all the way down </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_7_Dirs_1.txt" id="70-1">
	<nl lang="en"> follow the wood path towards red brick path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_7_Dirs_1.txt" id="70-2">
	<nl lang="en"> take a left onto the red brick towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_7_Dirs_1.txt" id="70-3">
	<nl lang="en"> on intersection past the lamp will be 7 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-1">
	<nl lang="en"> go forward one segment to the stool </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-3">
	<nl lang="en"> go forward two segments, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-5">
	<nl lang="en"> you will now be facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-6">
	<nl lang="en"> go forward three segments to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-7">
	<nl lang="en"> turn right toward the hatrack visible ahead </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-8">
	<nl lang="en"> go forward about two segments to the intersection containing the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-9">
	<nl lang="en"> the floor of this hall is brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-10">
	<nl lang="en"> turn left into this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-11">
	<nl lang="en"> go forward three segments, passing the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-12">
	<nl lang="en"> one section past the lamp, you will reach a 't' intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_5_Dirs_1.txt" id="71-13">
	<nl lang="en"> this hall will be empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_2_Dirs_1.txt" id="72-1">
	<nl lang="en"> turn to face the black corridor where you can see a painting easel at the end and pictures of butterflys on both sides of the walls </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_2_Dirs_1.txt" id="72-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_3_Dirs_1.txt" id="74-1">
	<nl lang="en"> take the wood path towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_3_Dirs_1.txt" id="74-2">
	<nl lang="en"> at the red brick intersection, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_3_Dirs_1.txt" id="74-3">
	<nl lang="en"> at the second intersection down, take a right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_3_Dirs_1.txt" id="74-4">
	<nl lang="en"> at the end of this hall, you can either only go right or left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_2_Dirs_1.txt" id="79-1">
	<nl lang="en"> move toward the longer end of the hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_2_Dirs_1.txt" id="79-2">
	<nl lang="en"> make the first rt </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_2_Dirs_1.txt" id="79-3">
	<nl lang="en"> go down make the first rt </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_2_Dirs_1.txt" id="79-4">
	<nl lang="en"> go down make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_2_Dirs_1.txt" id="79-5">
	<nl lang="en"> go till the aesal is on your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_2_Dirs_1.txt" id="80-1">
	<nl lang="en"> take the red hall to the grey hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_2_Dirs_1.txt" id="80-2">
	<nl lang="en"> and the grey hall to the yellow hall, at the intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_6_Dirs_1.txt" id="82-1">
	<nl lang="en"> go to blue </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_6_Dirs_1.txt" id="82-2">
	<nl lang="en"> then pink </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_6_Dirs_1.txt" id="82-3">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_6_Dirs_1.txt" id="82-4">
	<nl lang="en"> then anopther right </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-1">
	<nl lang="en"> face toward the longer end of the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-2">
	<nl lang="en"> the chair should be behind </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-3">
	<nl lang="en"> there should be butterfly pcitures on the walls to your left and eiffel tower pictures on the walls to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-4">
	<nl lang="en"> go forward four segments down the brick hallway, passing a lamp and an easel to the grassy hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-5">
	<nl lang="en"> turn right at the hatrack contained in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-6">
	<nl lang="en"> go forward two segments to the intersection of the grassy hall and the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_4_Dirs_1.txt" id="84-7">
	<nl lang="en"> this intersection should be empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-1">
	<nl lang="en"> with your back to the wall turn right and move into the corner </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-2">
	<nl lang="en"> turn right again and walk past the easel to the blue carpeted side alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-3">
	<nl lang="en"> turn right and move to the next side alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-4">
	<nl lang="en"> turning left you see flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-5">
	<nl lang="en"> move forward and turn right at the first alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_6_Dirs_1.txt" id="85-6">
	<nl lang="en"> move to the deadend </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-1">
	<nl lang="en"> move one block on the green octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-2">
	<nl lang="en"> the side alleys have blue flooring and in front of you </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-3">
	<nl lang="en"> you see grey stone </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-4">
	<nl lang="en"> turn right down the long blue alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-5">
	<nl lang="en"> move past the stool and the chair to the side alley with flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-6">
	<nl lang="en"> turn down this alley and turn right at the first alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_6_Dirs_1.txt" id="86-7">
	<nl lang="en"> move to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_1_Dirs_1.txt" id="87-1">
	<nl lang="en"> with your back to the sofa </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_1_Dirs_1.txt" id="87-2">
	<nl lang="en"> move past the stool and chair to the flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_1_Dirs_1.txt" id="87-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_1_Dirs_1.txt" id="87-4">
	<nl lang="en"> walk to the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-1">
	<nl lang="en"> with your back to the wall move along the flowered carpet one block </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-2">
	<nl lang="en"> turn left at the hatrack and move to the end of the aisle </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-3">
	<nl lang="en"> turn left at the gray stone carpet and move to the alley with octagon flooring on either side </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-4">
	<nl lang="en"> you are looking at an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-6">
	<nl lang="en"> move forward and turn right at the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-7">
	<nl lang="en"> move past the chair to the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_3_Dirs_1.txt" id="88-8">
	<nl lang="en"> turn right and go to the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-1">
	<nl lang="en"> go forward one segment to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-3">
	<nl lang="en"> go forward one segment ot the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-5">
	<nl lang="en"> go forward about two segments to an intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_3_Dirs_1.txt" id="93-6">
	<nl lang="en"> this intersection is empty but the one on either side in the blue-tiled hall contain furniture </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-1">
	<nl lang="en"> turn to face the pink hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-3">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_1_Dirs_1.txt" id="97-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-1">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-3">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-5">
	<nl lang="en"> go forward one segment to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-7">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-8">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_5_Dirs_1.txt" id="100-10">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_2_Dirs_1.txt" id="102-1">
	<nl lang="en"> go down the yellow hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_2_Dirs_1.txt" id="102-2">
	<nl lang="en"> then stop at the intersection of the yellow and the grey </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_2_Dirs_1.txt" id="106-1">
	<nl lang="en"> go straight until you get to the intersection of the grey and yellow halls with fish on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-1">
	<nl lang="en"> face the chair at 6 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-2">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-4">
	<nl lang="en"> you should see blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-5">
	<nl lang="en"> walk along the blue past a stool and a sofa </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-6">
	<nl lang="en"> stop at the hat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_5_Dirs_1.txt" id="107-8">
	<nl lang="en"> move straight into the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-1">
	<nl lang="en"> move to the other end of the alley and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-2">
	<nl lang="en"> move along the stone floor to the sofa chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-4">
	<nl lang="en"> move to this sofa chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-5">
	<nl lang="en"> move to the next alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_1_Dirs_1.txt" id="108-6">
	<nl lang="en"> to your left is grey flooring and in front of you is brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-1">
	<nl lang="en"> orient yourself along the yellow-tiled hall with the easel in the stone hall to your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-2">
	<nl lang="en"> go forward two segments to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-4">
	<nl lang="en"> go forward two segments to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-5">
	<nl lang="en"> this interesction contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-7">
	<nl lang="en"> go forward four segments to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-8">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-9">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete flor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_1_Dirs_1.txt" id="109-10">
	<nl lang="en"> there is a bench in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_3_Dirs_1.txt" id="110-1">
	<nl lang="en"> look at the pictures on all of the immediate walls </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_3_Dirs_1.txt" id="110-2">
	<nl lang="en"> turn so that the pics of towers are to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_3_Dirs_1.txt" id="110-3">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-1">
	<nl lang="en"> go straight unitl the end of the hall, here, take a left and go straight again until the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-2">
	<nl lang="en"> take another left here </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-3">
	<nl lang="en"> at the first intersection, go right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-4">
	<nl lang="en"> now, you will be looking for a pink flowered path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-5">
	<nl lang="en"> when you reach this path, take a left onto it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_4_Dirs_1.txt" id="113-6">
	<nl lang="en"> position 4 will be at the end of the path where the pink path is intersected by a blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-1">
	<nl lang="en"> turn so the wall is on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_7_Dirs_1.txt" id="114-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_1_Dirs_1.txt" id="115-1">
	<nl lang="en"> find the pink flowered floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_1_Dirs_1.txt" id="115-2">
	<nl lang="en"> pos 1 is on the aesal </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-1">
	<nl lang="en"> follow the hall with the yellow-tiled floor to the hall with pink-flowered carpet on the floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-2">
	<nl lang="en"> turn left into this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-3">
	<nl lang="en"> follow this hall until you reach the hall with a brown stone floor,one previous to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-5">
	<nl lang="en"> follow the hall until you reach a concrete hall with butterflies to the side the blue tile is on, the right side, and nothing in the intersection at that end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_7_Dirs_1.txt" id="117-6">
	<nl lang="en"> the intersection you are standing in should also be empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_7_Dirs_1.txt" id="118-1">
	<nl lang="en"> go straight on the plain cement path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_7_Dirs_1.txt" id="118-2">
	<nl lang="en"> the very first intersection will be position 7 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-1">
	<nl lang="en"> turn so that your back is to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-4">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-5">
	<nl lang="en"> turn left walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_5_Dirs_1.txt" id="121-6">
	<nl lang="en"> turn right walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_7_Dirs_1.txt" id="123-1">
	<nl lang="en"> face the hat rack and move to it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_7_Dirs_1.txt" id="123-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_7_Dirs_1.txt" id="123-3">
	<nl lang="en"> move one alley past the chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_7_Dirs_1.txt" id="123-4">
	<nl lang="en"> move one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_7_Dirs_1.txt" id="123-5">
	<nl lang="en"> to the left and right you should see flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-3">
	<nl lang="en"> go forward one segment to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-5">
	<nl lang="en"> go forward two segments to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-7">
	<nl lang="en"> go forward to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-8">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-9">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_4_Dirs_1.txt" id="125-10">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-1">
	<nl lang="en"> go all the way until the intersection of black road </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-2">
	<nl lang="en"> go right onto the black </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-3">
	<nl lang="en"> go to the intersection with black and yellow </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-4">
	<nl lang="en"> go left onto the yellow </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-5">
	<nl lang="en"> when hall ends, go right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-6">
	<nl lang="en"> when hall ends again, go right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_3_Dirs_1.txt" id="127-7">
	<nl lang="en"> the end of this hall is 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_7_Dirs_1.txt" id="129-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_7_Dirs_1.txt" id="129-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_7_Dirs_1.txt" id="129-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_7_Dirs_1.txt" id="129-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_4_Dirs_1.txt" id="130-1">
	<nl lang="en"> position 4 is at the dead end of a hall with yellow floors and fish on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_6_Dirs_1.txt" id="131-1">
	<nl lang="en"> go straight until hall ends </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_6_Dirs_1.txt" id="131-2">
	<nl lang="en"> take left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_6_Dirs_1.txt" id="131-3">
	<nl lang="en"> take another left when the hall ends again </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_6_Dirs_1.txt" id="131-4">
	<nl lang="en"> the first intersection at the black will be position 6 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_3_Dirs_1.txt" id="138-1">
	<nl lang="en"> take one movement towards the blue corridor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_3_Dirs_1.txt" id="138-2">
	<nl lang="en"> and stop </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_3_Dirs_1.txt" id="138-3">
	<nl lang="en"> that's it </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_3_Dirs_1.txt" id="142-1">
	<nl lang="en"> taek the brick path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_3_Dirs_1.txt" id="142-2">
	<nl lang="en"> take a right on the plain path two intersections after the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_3_Dirs_1.txt" id="142-3">
	<nl lang="en"> at the end where you can only go right or left onto a blue path, you are at 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_3_Dirs_1.txt" id="144-1">
	<nl lang="en"> go towards the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_3_Dirs_1.txt" id="144-2">
	<nl lang="en"> once at this intersection, go left onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_3_Dirs_1.txt" id="144-3">
	<nl lang="en"> at the very next intersection, take a left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_3_Dirs_1.txt" id="144-4">
	<nl lang="en"> follow the blue path towards the chair and one intersection after the chair will be 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_7_Dirs_1.txt" id="150-1">
	<nl lang="en"> face and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_7_Dirs_1.txt" id="150-2">
	<nl lang="en"> turn left and move to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_5_Dirs_1.txt" id="151-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_5_Dirs_1.txt" id="151-2">
	<nl lang="en"> walk along the flowered carpet to the red brick side alleys </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_5_Dirs_1.txt" id="151-3">
	<nl lang="en"> it is one block before the end </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_5_Dirs_1.txt" id="151-4">
	<nl lang="en"> turn left and walk one block past the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_5_Dirs_1.txt" id="151-5">
	<nl lang="en"> to your right you should see an alley with grey carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_2_Dirs_1.txt" id="152-1">
	<nl lang="en"> with your back to the wall move forward to the second alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_2_Dirs_1.txt" id="152-2">
	<nl lang="en"> the side alleys have stone flooring and there is an easel to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_5_Dirs_1.txt" id="153-1">
	<nl lang="en"> take the black path towards the end of the hall farthest away </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_5_Dirs_1.txt" id="153-2">
	<nl lang="en"> next, take a left onto the red brick at that intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_5_Dirs_1.txt" id="153-3">
	<nl lang="en"> go all the way down until you see butterflies on the wall and one section past the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_3_Dirs_1.txt" id="156-1">
	<nl lang="en"> follow the yellow road all the way to the other end where it ends and take a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_3_Dirs_1.txt" id="156-2">
	<nl lang="en"> go straight until the hall ends again and take another right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_3_Dirs_1.txt" id="156-3">
	<nl lang="en"> the end of this hall is position 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-1">
	<nl lang="en"> stand with your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-2">
	<nl lang="en"> turn to the left into the wooden-floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-3">
	<nl lang="en"> one segment down this hall, a brick -floored hallway intersects it </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-4">
	<nl lang="en"> turn left into this hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-5">
	<nl lang="en"> follow this hallway until you reach the bare concrete hall one segment away from the last intersection, which contains a chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-6">
	<nl lang="en"> the walls to you left should have pictures of the eiffel tower </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-7">
	<nl lang="en"> those to your right will have butterflies </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_7_Dirs_1.txt" id="157-8">
	<nl lang="en"> the intersection to your right will be vacant, though blue tile will be visible to each side </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_6_Dirs_1.txt" id="166-1">
	<nl lang="en"> go towards the red brick intersection </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_6_Dirs_1.txt" id="166-2">
	<nl lang="en"> take a right onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_6_Dirs_1.txt" id="166-3">
	<nl lang="en"> go all the way down until you reach the black intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_6_Dirs_1.txt" id="166-4">
	<nl lang="en"> take a right onto this </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_6_Dirs_1.txt" id="166-5">
	<nl lang="en"> when you reach an intersection with black and normal concrete, you are at 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Intersection ,  type= 'Struct' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_5_Dirs_1.txt" id="167-1">
	<nl lang="en"> take a right down the blue corridor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_5_Dirs_1.txt" id="167-2">
	<nl lang="en"> then go left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_5_Dirs_1.txt" id="167-3">
	<nl lang="en"> and then take another left once you see a coatrack in the middle of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_7_Dirs_1.txt" id="169-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_7_Dirs_1.txt" id="169-2">
	<nl lang="en"> walk to the end of the yellow hallway, 3 steps </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_7_Dirs_1.txt" id="169-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_7_Dirs_1.txt" id="169-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-2">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-3">
	<nl lang="en"> this interesction contains a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-5">
	<nl lang="en"> go forward to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-7">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-8">
	<nl lang="en"> this intersection conatains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-10">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-11">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-12">
	<nl lang="en"> go forward one segment to the intersection containing the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-13">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_2_Dirs_1.txt" id="170-14">
	<nl lang="en"> go forward one segment to the empty corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_7_Dirs_1.txt" id="173-1">
	<nl lang="en"> position 7 is in the middle of the grey floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-1">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-2">
	<nl lang="en"> turn and move past the chair to the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-3">
	<nl lang="en"> move along the octagon carpet to the stone floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-4">
	<nl lang="en"> there is an easel to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-5">
	<nl lang="en"> turn right so your back is at the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-6">
	<nl lang="en"> move along the stone floor two alleys to the brick floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-8">
	<nl lang="en"> move along the brick floor one alley past the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_5_Dirs_1.txt" id="174-9">
	<nl lang="en"> you see a lamp in front of you and grey carpeted alley to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_6_Dirs_1.txt" id="177-1">
	<nl lang="en"> go toward the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_6_Dirs_1.txt" id="177-2">
	<nl lang="en"> turn left at the hatrack into the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_6_Dirs_1.txt" id="177-3">
	<nl lang="en"> go forward until you reach an intersection with wooden flooring to your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_6_Dirs_1.txt" id="177-4">
	<nl lang="en"> turn right in this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_6_Dirs_1.txt" id="177-5">
	<nl lang="en"> postion 6 will be either one segment before or one segment after the segment with the lamp and will be empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_3_Dirs_1.txt" id="178-1">
	<nl lang="en"> go towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_3_Dirs_1.txt" id="178-2">
	<nl lang="en"> at the blue path intersection, hang a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_3_Dirs_1.txt" id="178-3">
	<nl lang="en"> the second intersection down will be position 2 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_3_Dirs_1.txt" id="178-4">
	<nl lang="en"> at this intersection, however, you can either only go straight or right onto a plain cement path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_2.txt" id="179-1">
	<nl lang="en"> face and move to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_2.txt" id="179-2">
	<nl lang="en"> turn left and move forward along the green octagon flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_2.txt" id="179-3">
	<nl lang="en"> p 4 is at the end of this alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_3_Dirs_1.txt" id="180-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_1_Dirs_1.txt" id="181-1">
	<nl lang="en"> move to the chair and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_1_Dirs_1.txt" id="181-2">
	<nl lang="en"> move forward to the stool and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_1_Dirs_1.txt" id="181-3">
	<nl lang="en"> turn left at the chair and face another chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_1_Dirs_1.txt" id="181-4">
	<nl lang="en"> turn right at this second chair and move along brick to the next alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_1_Dirs_1.txt" id="181-5">
	<nl lang="en"> to your left is grey flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_6_Dirs_1.txt" id="184-1">
	<nl lang="en"> continue until you get to the grey floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_6_Dirs_1.txt" id="184-2">
	<nl lang="en"> continue down the grey floor until you get to the intersection one movement before the yellow and grey floors intersect </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-1">
	<nl lang="en"> face and move to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-3">
	<nl lang="en"> the right side alley should have blue flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-4">
	<nl lang="en"> move to it and down the alley </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-5">
	<nl lang="en"> move one alley past the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_3_Dirs_1.txt" id="185-6">
	<nl lang="en"> in front of you is a hatrack and to your left is grey flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_5_Dirs_1.txt" id="187-1">
	<nl lang="en"> take the pink path to the red brick juncture </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_5_Dirs_1.txt" id="187-2">
	<nl lang="en"> go left onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_5_Dirs_1.txt" id="187-3">
	<nl lang="en"> postition 5 is one section past the lampl </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_7_Dirs_1.txt" id="189-1">
	<nl lang="en"> turn so that the wall is on your right side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_7_Dirs_1.txt" id="189-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_7_Dirs_1.txt" id="189-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_7_Dirs_1.txt" id="189-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-1">
	<nl lang="en"> turn so that the wall is on your left and to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-10">
	<nl lang="en"> walk forward five times, or until you reach the yellow walkway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_2.txt" id="190-11">
	<nl lang="en"> turn left and continue 2 steps to the end of the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_4_Dirs_1.txt" id="191-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_4_Dirs_1.txt" id="191-2">
	<nl lang="en"> go to the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_4_Dirs_1.txt" id="191-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_4_Dirs_1.txt" id="191-4">
	<nl lang="en"> go to the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_4_Dirs_1.txt" id="191-5">
	<nl lang="en"> you should end up at the intersection of yellow and green </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-1">
	<nl lang="en"> place your back against the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-2">
	<nl lang="en"> turn to your left along the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-3">
	<nl lang="en"> your back should be toward the bench </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-4">
	<nl lang="en"> go forward two segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_6_Dirs_1.txt" id="193-6">
	<nl lang="en"> go forward two segments to the intersection with the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_1_3_Dirs_1.txt" id="195-1">
	<nl lang="en"> three is at the intersection of the long blue floored buterfly walled and the hallway with no furniture </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-1">
	<nl lang="en"> go straight towards the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-2">
	<nl lang="en"> take a left onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-3">
	<nl lang="en"> at the next intersection, take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-4">
	<nl lang="en"> at the end of the hall, go left towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-5">
	<nl lang="en"> at the easel, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-6">
	<nl lang="en"> follow this to the end of the hall and at the corner, go left towards the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_2_Dirs_1.txt" id="197-7">
	<nl lang="en"> at the lamp, take another right and follow it to the end of the hall at the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_3_Dirs_1.txt" id="198-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_3_Dirs_1.txt" id="198-2">
	<nl lang="en"> move forward to the next block and turn right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_3_Dirs_1.txt" id="198-3">
	<nl lang="en"> move forward along the brick floor until you get to </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-1">
	<nl lang="en"> orient yourself along the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-2">
	<nl lang="en"> the bare concrete hall should be to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-3">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-4">
	<nl lang="en"> turn right into the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-5">
	<nl lang="en"> go forward until you reach the intersection with the stone floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-6">
	<nl lang="en"> you will pass a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-7">
	<nl lang="en"> i believe it is six segments forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 6  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-8">
	<nl lang="en"> at the stone-floored hall, turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-9">
	<nl lang="en"> go forward about two segments to the intersection of the stone floor and the yellow-tiled floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_2_Dirs_1.txt" id="199-10">
	<nl lang="en"> you should be facing an easel one segment away </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_7_Dirs_1.txt" id="201-1">
	<nl lang="en"> take the black path towars the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_7_Dirs_1.txt" id="201-2">
	<nl lang="en"> go left onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_7_Dirs_1.txt" id="201-3">
	<nl lang="en"> then, take another left at the pink flowered intersection onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_7_Dirs_1.txt" id="201-4">
	<nl lang="en"> go until there are fish on the wall and you can either only go left or towards a dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_1_Dirs_1.txt" id="204-1">
	<nl lang="en"> turn to face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_1_Dirs_1.txt" id="204-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_1_Dirs_1.txt" id="204-3">
	<nl lang="en"> turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_1_Dirs_1.txt" id="204-4">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_1_Dirs_1.txt" id="206-1">
	<nl lang="en"> with your back to the wall move to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_1_Dirs_1.txt" id="206-2">
	<nl lang="en"> turn right and move along the brick floor two alleys past the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_1_Dirs_1.txt" id="206-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_1_Dirs_1.txt" id="206-4">
	<nl lang="en"> you should be facing a chair and an alley with wooden flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_1_Dirs_1.txt" id="206-5">
	<nl lang="en"> move to the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_7_Dirs_1.txt" id="207-1">
	<nl lang="en"> position 7 is in the middle of the grey tiled floor hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_6_Dirs_1.txt" id="209-1">
	<nl lang="en"> follow the red brick path away from the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_6_Dirs_1.txt" id="209-2">
	<nl lang="en"> at the corner, go right towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_6_Dirs_1.txt" id="209-3">
	<nl lang="en"> past the easel, and at the next corner, take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_6_Dirs_1.txt" id="209-4">
	<nl lang="en"> at the first intersection, take a left onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_6_Dirs_1.txt" id="209-5">
	<nl lang="en"> again, take a right at the first intersection and go to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_2.txt" id="210-1">
	<nl lang="en"> face and move past the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_2.txt" id="210-2">
	<nl lang="en"> at the end of the blue flooring turn left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_2.txt" id="210-3">
	<nl lang="en"> move to the easel and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_2.txt" id="210-4">
	<nl lang="en"> you should be facing the longer wooden floored alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_2.txt" id="210-6">
	<nl lang="en"> from the easel, move one block and place yourself between butterfly pictures </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_2_Dirs_1.txt" id="212-1">
	<nl lang="en"> orient yourself along the stone hall facing the end of the hall containing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_2_Dirs_1.txt" id="212-2">
	<nl lang="en"> the bench in the bare concrete hall should be to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_2_Dirs_1.txt" id="212-3">
	<nl lang="en"> go forward one segment to the intersection with the yellow-tiled floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_4_Dirs_1.txt" id="218-1">
	<nl lang="en"> dead end of the fish area </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-1">
	<nl lang="en"> position 6 is at the end of a bare concrete hall one segment along the pink-flowered carpet hall away from the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-2">
	<nl lang="en"> in the opposite direction from the intersection of the blue-tiled hall with the pink-flowered carpet hall the hall contains some furniture </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-3">
	<nl lang="en"> if you start with your back toward the wall, you should not go forward toward the grassy hall </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-4">
	<nl lang="en"> the blue-tiled hall is behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-5">
	<nl lang="en"> to your right you will follow a couple turns to reach a wooden hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-6">
	<nl lang="en"> you may be able to reach the blue tiled hall by finding the intersection in the wooden hall that contains the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_6_Dirs_1.txt" id="220-8">
	<nl lang="en"> if you enter it immediately, having simply walked forward, go forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-1">
	<nl lang="en"> fave and move past the chair to the end of the blue flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-2">
	<nl lang="en"> turn left and move to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-3">
	<nl lang="en"> at the easel turn right and walk down the longer alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-5">
	<nl lang="en"> move past the lamp into the corner </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_2_Dirs_1.txt" id="224-6">
	<nl lang="en"> from 2 you should be able to look left and see a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_2_Dirs_1.txt" id="225-1">
	<nl lang="en"> two is on an aesal, not in the pink floored area, the other one </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-10">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-11">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-12">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-13">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_2_Dirs_1.txt" id="226-14">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_6_Dirs_1.txt" id="228-1">
	<nl lang="en"> face away from the shorter end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_6_Dirs_1.txt" id="228-2">
	<nl lang="en"> the blue-tiled hallway should be visible to your right </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_6_Dirs_1.txt" id="228-3">
	<nl lang="en"> follow the brown brick floored hallway to the wooden floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_6_Dirs_1.txt" id="228-4">
	<nl lang="en"> turn left toward the yellow hexagonal tiled hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_6_Dirs_1.txt" id="228-5">
	<nl lang="en"> follow the wooden floored hallway to the 't' intersection where the top of the 't' is two sections of wooden floor and the stem of the 't' is a yellow hexagonally tiled section </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_4_Dirs_2.txt" id="233-1">
	<nl lang="en"> with your back to the wall turn right and move to the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_4_Dirs_2.txt" id="233-2">
	<nl lang="en"> here turn left and move past the hatrack to the end of the green octagon floored alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-1">
	<nl lang="en"> only one way to travel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-2">
	<nl lang="en"> go forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-3">
	<nl lang="en"> turn right onto the blue hallway and travel all the way down to the far end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-4">
	<nl lang="en"> turn left and go forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-5">
	<nl lang="en"> turn right and go forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-6">
	<nl lang="en"> turn left again and go forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_2_Dirs_1.txt" id="234-7">
	<nl lang="en"> and right again and go forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-1">
	<nl lang="en"> face and move to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-2">
	<nl lang="en"> turn left and move down the aisle with blue flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-3">
	<nl lang="en"> turn left at the first alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-4">
	<nl lang="en"> it has flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-5">
	<nl lang="en"> turn right from the flowered carpet to face a dead end w/ grey floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_2.txt" id="238-6">
	<nl lang="en"> move to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_6_2_Dirs_1.txt" id="242-1">
	<nl lang="en"> find the aesal in the fish area with black floors near it </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_4_Dirs_1.txt" id="243-1">
	<nl lang="en"> take the red brick road away from the lamp to the green path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_4_Dirs_1.txt" id="243-2">
	<nl lang="en"> take a right onto the green path all the way to the end of the hall where the green and yellow paths meet in a corner </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_7_Dirs_1.txt" id="244-1">
	<nl lang="en"> with your back to the wall move forward past the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_7_Dirs_1.txt" id="244-2">
	<nl lang="en"> stop at the alley where there is green octagon floor to your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_7_Dirs_1.txt" id="245-1">
	<nl lang="en"> follow this hallway till you get to the pink floored area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_7_Dirs_1.txt" id="245-2">
	<nl lang="en"> stop here </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-1">
	<nl lang="en"> orient yourself along the bare concrete hall,facing the blue-tiled hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-2">
	<nl lang="en"> you should see butterflies on the walls ahead of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-3">
	<nl lang="en"> there should be a chair in the interection to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-4">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-6">
	<nl lang="en"> go forward two segments, passing the bench </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-7">
	<nl lang="en"> turn left at the hatrack into the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_5_Dirs_1.txt" id="247-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-1">
	<nl lang="en"> face and move to the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-3">
	<nl lang="en"> move forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-5">
	<nl lang="en"> move to the easel and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-6">
	<nl lang="en"> move forward and turn right </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-7">
	<nl lang="en"> move along the blue and turn left at the first alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-8">
	<nl lang="en"> move towards the easel and turn right at the first alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_2.txt" id="250-9">
	<nl lang="en"> the end of this alley is 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_7_Dirs_1.txt" id="251-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_7_Dirs_1.txt" id="251-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_7_Dirs_1.txt" id="251-3">
	<nl lang="en"> go forward one segment to the intersection containing the chair </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_7_Dirs_1.txt" id="251-4">
	<nl lang="en"> at one end, the left probably, of the intersecting hall there will be a stool and the bare concrete hall will intersect with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_7_Dirs_1.txt" id="251-5">
	<nl lang="en"> turn toward that end and go forward one segment to that intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_1_Dirs_1.txt" id="253-1">
	<nl lang="en"> take the wood path towards the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_1_Dirs_1.txt" id="253-2">
	<nl lang="en"> once here, take a right onto the red brick and follow it until the intersection with red brick and plain cement </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_5_Dirs_1.txt" id="255-1">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_5_Dirs_1.txt" id="255-2">
	<nl lang="en"> then go straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_5_Dirs_1.txt" id="255-3">
	<nl lang="en"> then take another left at the red floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-1">
	<nl lang="en"> face and move to the wooden chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-3">
	<nl lang="en"> you see a long alley with grass </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-4">
	<nl lang="en"> move down this to the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-5">
	<nl lang="en"> turn right and move into the corner </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_2_Dirs_1.txt" id="258-6">
	<nl lang="en"> turning right you see a lamp and right again the hatrack you just came from </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_2_Dirs_1.txt" id="259-1">
	<nl lang="en"> go straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_2_Dirs_1.txt" id="259-2">
	<nl lang="en"> then right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_2_Dirs_1.txt" id="259-3">
	<nl lang="en"> then all the way down until you get to where the yellow and grey halls intersect, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-2">
	<nl lang="en"> walk forward to the end of the hallway, four spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_5_Dirs_1.txt" id="265-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-1">
	<nl lang="en"> go down 1 block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-3">
	<nl lang="en"> keep going, looking down each of the streets on the right, until you see the street with no furniture do not go down it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-4">
	<nl lang="en"> stay on the butterfly street </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-5">
	<nl lang="en"> the t intersection is the position 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_3_Dirs_1.txt" id="269-6">
	<nl lang="en"> you should see blue on the floors perpendicular to the street w/ no furniture </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-3">
	<nl lang="en"> turn so that you are facing the butterflys, and the towers are on the walls behind you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-5">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-6">
	<nl lang="en"> you should be looking at the blue hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-7">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-8">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_5_Dirs_1.txt" id="274-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_7_Dirs_1.txt" id="278-1">
	<nl lang="en"> follow the pink flowered path all the way until you see fish on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_7_Dirs_1.txt" id="278-2">
	<nl lang="en"> when you reach an intersection in which you can only turn left and see a dead end in front of you, you are at position 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_2_Dirs_1.txt" id="280-1">
	<nl lang="en"> go until hall ends </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_2_Dirs_1.txt" id="280-2">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_2_Dirs_1.txt" id="280-3">
	<nl lang="en"> go until hall ends </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_2_Dirs_1.txt" id="280-4">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_2_Dirs_1.txt" id="280-5">
	<nl lang="en"> the next intersection of yellow and black paths is 2 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_7_Dirs_1.txt" id="282-1">
	<nl lang="en"> face and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_7_Dirs_1.txt" id="282-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_7_Dirs_1.txt" id="282-3">
	<nl lang="en"> the side alley has stone flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_7_Dirs_1.txt" id="282-4">
	<nl lang="en"> turn down this alley and move to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_4_Dirs_1.txt" id="283-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_4_Dirs_1.txt" id="283-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_4_Dirs_1.txt" id="286-1">
	<nl lang="en"> face the shorter portion of the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_4_Dirs_1.txt" id="286-2">
	<nl lang="en"> there should be a hatrack in the intersection you are facing and a lamp in the intersection behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_4_Dirs_1.txt" id="286-3">
	<nl lang="en"> go forward one segment to the grassy hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_4_Dirs_1.txt" id="286-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_4_Dirs_1.txt" id="286-5">
	<nl lang="en"> go forward two segments to the intersection of the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_6_Dirs_1.txt" id="289-1">
	<nl lang="en"> position 6 is a dead end of a branch of the rose colored hall, with two pictures of the eiffel tower on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_6_Dirs_1.txt" id="290-1">
	<nl lang="en"> go down the grassy hallway one segment to the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_6_Dirs_1.txt" id="290-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_6_Dirs_1.txt" id="290-3">
	<nl lang="en"> go forward three segements to the 't' intersection with the stone floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_3_Dirs_1.txt" id="292-1">
	<nl lang="en"> turn so that the walls are on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_3_Dirs_1.txt" id="292-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_3_Dirs_1.txt" id="292-3">
	<nl lang="en"> turn right and walk forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-1">
	<nl lang="en"> take the red brick path towards the butterflies </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-2">
	<nl lang="en"> at the corner, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-3">
	<nl lang="en"> at the next corner, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-4">
	<nl lang="en"> follow the path until the blue path intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-5">
	<nl lang="en"> here, take a right onto the blue path and follow it towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-6">
	<nl lang="en"> at the intersection of plain cement, you will go right towards the black stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_7_Dirs_1.txt" id="293-7">
	<nl lang="en"> once you reach the black stool, you are at 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_6_Dirs_1.txt" id="294-1">
	<nl lang="en"> turn around and go straight until you get to the intersection of the rose floor and the yellow floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_4_Dirs_1.txt" id="296-1">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_4_Dirs_1.txt" id="296-2">
	<nl lang="en"> take the blue hall to the grassy hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_4_Dirs_1.txt" id="296-3">
	<nl lang="en"> then the grassy hall to the yellow hall until they intersect </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_5_Dirs_1.txt" id="297-1">
	<nl lang="en"> position 5 is in the middle of the wood-floored room </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_1_Dirs_1.txt" id="298-1">
	<nl lang="en"> take the yellow path to the pink path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_1_Dirs_1.txt" id="298-2">
	<nl lang="en"> go right onto the pink path all the way to the black easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_1_Dirs_1.txt" id="298-3">
	<nl lang="en"> at this intersection of pink path and red brick, you are at position 1 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-3">
	<nl lang="en"> go forward along the brick hall five segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-5">
	<nl lang="en"> go forward along the stone hall to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-7">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-9">
	<nl lang="en"> go forward two segments, passing the chair, to the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-10">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_3_Dirs_1.txt" id="300-11">
	<nl lang="en"> go forward one segment to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-2">
	<nl lang="en"> go forward one segment to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-4">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-6">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_6_Dirs_1.txt" id="301-10">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_7_Dirs_1.txt" id="305-1">
	<nl lang="en"> take the wood path towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_7_Dirs_1.txt" id="305-2">
	<nl lang="en"> at the easel, go left and then take a right onto the blue path at the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_7_Dirs_1.txt" id="305-3">
	<nl lang="en"> follow the blue path towards the chair and at the chair, take a right towards the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_7_Dirs_1.txt" id="305-4">
	<nl lang="en"> when you reach the stool, you are at 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_4_Dirs_1.txt" id="306-1">
	<nl lang="en"> go toward the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_4_Dirs_1.txt" id="306-2">
	<nl lang="en"> make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_4_Dirs_1.txt" id="306-3">
	<nl lang="en"> go down make a rt in to the blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_4_Dirs_1.txt" id="306-4">
	<nl lang="en"> keep going until the pink floord area to your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-1">
	<nl lang="en"> move to the end of the octagon alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-2">
	<nl lang="en"> to your right is stone flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-3">
	<nl lang="en"> move to the end of this alley and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-4">
	<nl lang="en"> standing next to a chair and looking at a chair move to the next chair and turn to face the red brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-5">
	<nl lang="en"> move one alley and turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-6">
	<nl lang="en"> you are facing a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-7">
	<nl lang="en"> move right along the grass to the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-8">
	<nl lang="en"> turn left at the hatrack and move to the corner </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_2_Dirs_1.txt" id="307-9">
	<nl lang="en"> from here you can turn left and see a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_2_Dirs_1.txt" id="308-1">
	<nl lang="en"> go towards the chair on the green path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_2_Dirs_1.txt" id="308-2">
	<nl lang="en"> at the chair, go right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_2_Dirs_1.txt" id="308-3">
	<nl lang="en"> follow this green path to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_2_Dirs_1.txt" id="308-4">
	<nl lang="en"> once here, go right onto the plain cement path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_2_Dirs_1.txt" id="308-5">
	<nl lang="en"> the next corner you come to is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_4_Dirs_1.txt" id="309-1">
	<nl lang="en"> take the yellow path all the way to the end of the hall where the corner brings the yellow and green path together </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_4_Dirs_1.txt" id="311-1">
	<nl lang="en"> turn to face the short black hallway witht he easel at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_4_Dirs_1.txt" id="311-2">
	<nl lang="en"> from here, turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_4_Dirs_1.txt" id="311-3">
	<nl lang="en"> walk down the yellow hallway twice </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_4_Dirs_1.txt" id="311-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_4_Dirs_1.txt" id="311-5">
	<nl lang="en"> walk down the pink hallway three times </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_2_Dirs_1.txt" id="314-1">
	<nl lang="en"> go toward the bench at the end of the hall with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_2_Dirs_1.txt" id="314-2">
	<nl lang="en"> turn right at the bench into the yellow tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_2_Dirs_1.txt" id="314-3">
	<nl lang="en"> go two segments to the intesection with the stone-floored hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_2_Dirs_1.txt" id="314-4">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_5_Dirs_1.txt" id="318-1">
	<nl lang="en"> orient yourself along the stone hall with your back to the end of the hall containing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_5_Dirs_1.txt" id="318-2">
	<nl lang="en"> there should be a bench to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_5_Dirs_1.txt" id="318-3">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_5_Dirs_1.txt" id="318-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_5_Dirs_1.txt" id="318-5">
	<nl lang="en"> go forward five segments to the empty intersection with a bare concrete hall, passing a hatrack and a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_7_Dirs_1.txt" id="322-1">
	<nl lang="en"> go to the end of the hall and take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_7_Dirs_1.txt" id="322-2">
	<nl lang="en"> whe it dead ends again, take another left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_7_Dirs_1.txt" id="322-4">
	<nl lang="en"> go until you see a pink flowered path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_7_Dirs_1.txt" id="322-6">
	<nl lang="en"> there should be fish on the wall and you should be at position 7 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-2">
	<nl lang="en"> follow the stone hall to your left three segments to the blue-tiled hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-3">
	<nl lang="en"> turn left at the stool in the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-4">
	<nl lang="en"> follow this hall past the bench to the hatrack, about four segments </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-5">
	<nl lang="en"> turn left into the bare concrete floored hall whose intersection with the blue-tiled hall contains the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_5_Dirs_1.txt" id="323-6">
	<nl lang="en"> go forward one segment to the corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_7_Dirs_1.txt" id="327-1">
	<nl lang="en"> with your back to the wall move forward until the brick alley is to your left and right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_7_Dirs_1.txt" id="327-2">
	<nl lang="en"> turn right and move one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_4_Dirs_1.txt" id="333-1">
	<nl lang="en"> down the grey hall until you reach the blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_4_Dirs_1.txt" id="333-2">
	<nl lang="en"> at the intersection of the blue hall and the rose floored hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_4_Dirs_1.txt" id="336-1">
	<nl lang="en"> at two place your back to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_4_Dirs_1.txt" id="336-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_4_Dirs_1.txt" id="336-3">
	<nl lang="en"> walk to the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_4_Dirs_1.txt" id="336-4">
	<nl lang="en"> at your left you should see grass </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_6_Dirs_1.txt" id="337-1">
	<nl lang="en"> position 6 is a dead end branch off the rose floor, with two eiffel towers on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_5_Dirs_1.txt" id="340-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_5_Dirs_1.txt" id="340-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_5_Dirs_1.txt" id="340-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_5_Dirs_1.txt" id="340-4">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_2_Dirs_1.txt" id="341-1">
	<nl lang="en"> down blue hall till you hit the grassy hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_2_Dirs_1.txt" id="341-2">
	<nl lang="en"> down the grassy hall till you hit the yellow hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_2_Dirs_1.txt" id="341-3">
	<nl lang="en"> down the yellow hall until it intersects with the grey hall and has an easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-1">
	<nl lang="en"> face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-2">
	<nl lang="en"> step forward and follow the alley around </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-3">
	<nl lang="en"> you are placed where you can see an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-4">
	<nl lang="en"> move to this easel and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-5">
	<nl lang="en"> the carpet should be blue </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-6">
	<nl lang="en"> walk until there is an opening on you right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-7">
	<nl lang="en"> upon turning right you should see an alley with rose carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_6_Dirs_1.txt" id="343-8">
	<nl lang="en"> p-6 is at the end of this alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_3_Dirs_1.txt" id="347-1">
	<nl lang="en"> at seven face the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_3_Dirs_1.txt" id="347-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_3_Dirs_1.txt" id="347-3">
	<nl lang="en"> move to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_3_Dirs_1.txt" id="347-4">
	<nl lang="en"> you should see a sofa to your left and a stool two alleys to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_4_Dirs_1.txt" id="349-1">
	<nl lang="en"> with your back to the wall move forward to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_4_Dirs_1.txt" id="349-2">
	<nl lang="en"> turn right and you see grass carpet in front of you and green octagon carpet down the next alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_4_Dirs_1.txt" id="349-3">
	<nl lang="en"> move to this spot </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_4_Dirs_1.txt" id="351-1">
	<nl lang="en"> end of the fish area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_4_Dirs_1.txt" id="351-2">
	<nl lang="en"> amek a left into dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_3_Dirs_1.txt" id="352-1">
	<nl lang="en"> face so the aesal is to your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_3_Dirs_1.txt" id="352-2">
	<nl lang="en"> keep going down this hallways for as long as it will go </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_6_Dirs_1.txt" id="353-1">
	<nl lang="en"> take the yellow path all the way down to the wood path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_6_Dirs_1.txt" id="353-2">
	<nl lang="en"> here, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_6_Dirs_1.txt" id="353-3">
	<nl lang="en"> go to the intersection of plain cement and wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_2_Dirs_1.txt" id="356-1">
	<nl lang="en"> face teh fish walled area with no pnk floors </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_2_Dirs_1.txt" id="356-2">
	<nl lang="en"> go down two spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_3_Dirs_1.txt" id="358-1">
	<nl lang="en"> go down the red hall until you see the blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_3_Dirs_1.txt" id="358-2">
	<nl lang="en"> at that intersection stop </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_4_Dirs_1.txt" id="361-1">
	<nl lang="en"> take the black path and turn left on the red path at that intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_4_Dirs_1.txt" id="361-2">
	<nl lang="en"> next when you come to a pink flowered path intersection, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_4_Dirs_1.txt" id="361-3">
	<nl lang="en"> the next intersection and last of that hall is 4 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_4_Dirs_1.txt" id="363-1">
	<nl lang="en"> go to the longer end of the pink floored area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_4_Dirs_1.txt" id="363-2">
	<nl lang="en"> go to the end of this hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_4_Dirs_1.txt" id="363-3">
	<nl lang="en"> tilll you get tot blue floored area </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_2_Dirs_1.txt" id="366-1">
	<nl lang="en"> position 2 is at the corner of two halls with no tiles on the floor but with butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_1_Dirs_1.txt" id="369-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_1_Dirs_1.txt" id="369-2">
	<nl lang="en"> go forward one segment to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_1_Dirs_1.txt" id="369-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_1_Dirs_1.txt" id="369-4">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_1_Dirs_1.txt" id="369-5">
	<nl lang="en"> go forward one segment to the intersection which has eiffel tower pictures ahead and butterfly pictures behind </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-6">
	<nl lang="en"> walk forward to the end of the hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-8">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-9">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_1_Dirs_1.txt" id="371-10">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_2_Dirs_1.txt" id="372-1">
	<nl lang="en"> position two is at the aesal in the area between two black floors and one green floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-1">
	<nl lang="en"> orient yourself along the wooden hall with your back to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-2">
	<nl lang="en"> go forward one segment to the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-4">
	<nl lang="en"> go forward six segments to the intersection with the stone hall, passing a lamp and a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 6  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-6">
	<nl lang="en"> go forward two segments to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-8">
	<nl lang="en"> go forward one segment to the intersection with the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-10">
	<nl lang="en"> go forward two segments, passing the chair, to the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-11">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_3_Dirs_1.txt" id="374-12">
	<nl lang="en"> go foward one segment to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_7_5_Dirs_1.txt" id="377-1">
	<nl lang="en"> position 5 is in the middle of the wooden floor with butterflies on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_2_Dirs_2.txt" id="378-1">
	<nl lang="en"> turn so the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_2_Dirs_2.txt" id="378-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_2_Dirs_2.txt" id="378-3">
	<nl lang="en"> turn right onto the green hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_2_Dirs_2.txt" id="378-4">
	<nl lang="en"> walk to the end, maybe four spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_2_Dirs_2.txt" id="378-5">
	<nl lang="en"> turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-2">
	<nl lang="en"> go forward one segment to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-4">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-6">
	<nl lang="en"> go forward, passing the pink-flowered carpet hall on your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_3_Dirs_1.txt" id="381-7">
	<nl lang="en"> position 3 is the empty intersection between two which contain objects </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-3">
	<nl lang="en"> follow the blue-tiled hall two segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-4">
	<nl lang="en"> there is a lamp in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-6">
	<nl lang="en"> go forward three segments to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_2_Dirs_1.txt" id="383-7">
	<nl lang="en"> there is an easel one segment farther down the hall ahead of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-1">
	<nl lang="en"> face the shorter portion of the pink-flowered carpet hall, where it interesects the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-2">
	<nl lang="en"> your back should be away from the bench at the opposite end, where the pink-flowered carpet hall meets the yellow-tiled hall two segments away </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-3">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-4">
	<nl lang="en"> turn left into the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-5">
	<nl lang="en"> go forward three segments, past the stool, to the intersection of the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_3_Dirs_1.txt" id="390-6">
	<nl lang="en"> there should be a bench and a hatrack ahead of you in the blue-tiled hall and no objects in either of the intersections to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-1">
	<nl lang="en"> turn to face the walls with the immediate tower pictures </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_2_Dirs_1.txt" id="391-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_5_Dirs_1.txt" id="393-1">
	<nl lang="en"> take the path towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_5_Dirs_1.txt" id="393-2">
	<nl lang="en"> at the chair, go left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_5_Dirs_1.txt" id="393-3">
	<nl lang="en"> at the end of the hall, take a left towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_5_Dirs_1.txt" id="393-4">
	<nl lang="en"> at the easel, go right onto the wood path and the very first section will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-1">
	<nl lang="en"> turn so that the wall is on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_1_Dirs_1.txt" id="397-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_6_Dirs_1.txt" id="403-1">
	<nl lang="en"> take the pink path towards the wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_6_Dirs_1.txt" id="403-2">
	<nl lang="en"> at the wood path intersection, take the wood path towards the eiffel towers on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_6_Dirs_1.txt" id="403-3">
	<nl lang="en"> at the intersection with the plain cement, you'll be at 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_5_Dirs_1.txt" id="406-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_5_Dirs_1.txt" id="406-2">
	<nl lang="en"> move to the corner and turn right again </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_5_Dirs_1.txt" id="406-3">
	<nl lang="en"> move to the easel and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_5_Dirs_1.txt" id="406-4">
	<nl lang="en"> you should be facing the longer alley of wooden flooring and butterfly pictures on the side </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_5_Dirs_1.txt" id="406-5">
	<nl lang="en"> move one block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_6_Dirs_1.txt" id="407-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_6_Dirs_1.txt" id="409-1">
	<nl lang="en"> look for the rose floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_6_Dirs_1.txt" id="409-2">
	<nl lang="en"> position 6 is at a dead end, a branch off from the rose floors </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_6_Dirs_1.txt" id="409-3">
	<nl lang="en"> there are two pictures of the eiffel tower on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_3_Dirs_1.txt" id="410-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_3_Dirs_1.txt" id="410-2">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_3_Dirs_1.txt" id="410-3">
	<nl lang="en"> this contains a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_3_Dirs_1.txt" id="410-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_3_Dirs_1.txt" id="410-5">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-1">
	<nl lang="en"> face the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-2">
	<nl lang="en"> go forward one segment to the intersection with the grassy hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-4">
	<nl lang="en"> go forward down the hall until a hall opens to your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-5">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_1_Dirs_1.txt" id="411-6">
	<nl lang="en"> there will be butterfly pictures to your left and eiffel tower pictures to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_7_Dirs_1.txt" id="414-1">
	<nl lang="en"> first go straight until you get to the first intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_7_Dirs_1.txt" id="414-2">
	<nl lang="en"> take a left here </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_7_Dirs_1.txt" id="414-3">
	<nl lang="en"> you will then be looking for a pink flowered path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_7_Dirs_1.txt" id="414-4">
	<nl lang="en"> follow this path up until the last possible intersection </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_7_Dirs_1.txt" id="414-5">
	<nl lang="en"> whe you reach this intersection and there are fish pictures on the wall, you have reached position 7 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-1">
	<nl lang="en"> face and move to the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-2">
	<nl lang="en"> turn left and move to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-4">
	<nl lang="en"> you should see a side alley to the right with blue flooring </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-5">
	<nl lang="en"> move to it and turn right </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-6">
	<nl lang="en"> walk to the chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-7">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_7_Dirs_1.txt" id="415-8">
	<nl lang="en"> the side alleys have stone flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_7_Dirs_1.txt" id="417-1">
	<nl lang="en"> take the yellow path all the way to the other end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_7_Dirs_1.txt" id="417-2">
	<nl lang="en"> here, take a right onto the black path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_7_Dirs_1.txt" id="417-3">
	<nl lang="en"> follow the black path all the way until you reach a black stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_5_Dirs_1.txt" id="419-1">
	<nl lang="en"> go down the butterfly walled/blue floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_5_Dirs_1.txt" id="419-2">
	<nl lang="en"> make a left at the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_3_Dirs_1.txt" id="422-1">
	<nl lang="en"> go to the blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_3_Dirs_1.txt" id="422-2">
	<nl lang="en"> pos 3 is in between the two pieces of furnitute in this hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-1">
	<nl lang="en"> turn so that the wall is on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-4">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-5">
	<nl lang="en"> turn right to face the black hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_2_Dirs_1.txt" id="424-7">
	<nl lang="en"> if you are in the right place you should be at the intersection of black and yellow </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_3_Dirs_1.txt" id="426-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_3_Dirs_1.txt" id="426-2">
	<nl lang="en"> walk forward until you reach the blue floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_3_Dirs_1.txt" id="426-3">
	<nl lang="en"> probably twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_3_Dirs_1.txt" id="426-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_3_Dirs_1.txt" id="426-5">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_2_Dirs_1.txt" id="428-1">
	<nl lang="en"> go straight one movement </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_6_Dirs_1.txt" id="429-1">
	<nl lang="en"> go to blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_6_Dirs_1.txt" id="429-2">
	<nl lang="en"> then pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_6_Dirs_1.txt" id="429-3">
	<nl lang="en"> make the 1st right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-2">
	<nl lang="en"> walk forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-3">
	<nl lang="en"> this intersection contains a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-5">
	<nl lang="en"> go forward until you reach the intersection with the pink-flowered carpet hall to your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-7">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_6_Dirs_1.txt" id="430-9">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-3">
	<nl lang="en"> follow the pink-flowered carpet hall two segments to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-4">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-6">
	<nl lang="en"> go forward four segments, passing a lamp, to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-8">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_1_Dirs_1.txt" id="431-9">
	<nl lang="en"> this intersection contains a bench </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-1">
	<nl lang="en"> with your back to the wall at 3 turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-2">
	<nl lang="en"> go all the way to end of the blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-4">
	<nl lang="en"> walk until you see an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-5">
	<nl lang="en"> the left alley at the easel has the eiffel tower and the right has butterflies </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-6">
	<nl lang="en"> take the alley w/ butterflies on the wall and stop when the butterflies are not on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_5_Dirs_1.txt" id="432-7">
	<nl lang="en"> you should be two blocks in front of the corner </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_6_Dirs_1.txt" id="434-1">
	<nl lang="en"> it's at the corner of the yellow floor and the grass floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-1">
	<nl lang="en"> face the hall toward the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-2">
	<nl lang="en"> go forward one segment to the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-4">
	<nl lang="en"> go forward two segmentsm passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-6">
	<nl lang="en"> you are now facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-7">
	<nl lang="en"> go forward three segments to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-9">
	<nl lang="en"> go forward two segments to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-10">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-11">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-12">
	<nl lang="en"> go forward along the brick hall four segments to the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-13">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-14">
	<nl lang="en"> go forward one segment to the interesection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_1_Dirs_1.txt" id="435-15">
	<nl lang="en"> this intersection contains a bench </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_3_Dirs_1.txt" id="437-1">
	<nl lang="en"> position 3 is in the middle of the blue hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_6_Dirs_1.txt" id="440-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_6_Dirs_1.txt" id="440-2">
	<nl lang="en"> move past the chair to the side alley with flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_6_Dirs_1.txt" id="440-3">
	<nl lang="en"> turn right down this alley and then right again at the first alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_6_Dirs_1.txt" id="440-4">
	<nl lang="en"> facing the grey floored deadend, move to it </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_6_Dirs_1.txt" id="441-1">
	<nl lang="en"> with your back to the wall move along the green octagon carpet two alleys to the grey stone carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_6_Dirs_1.txt" id="441-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_6_Dirs_1.txt" id="441-3">
	<nl lang="en"> there should be an easel behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_6_Dirs_1.txt" id="441-4">
	<nl lang="en"> move forward one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_6_Dirs_1.txt" id="441-5">
	<nl lang="en"> the side alleys have grey floor and to your right is a sofa </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_4_Dirs_1.txt" id="449-1">
	<nl lang="en"> move to the hat rack and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_4_Dirs_1.txt" id="449-2">
	<nl lang="en"> walk down to the end of the blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_4_Dirs_1.txt" id="449-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_4_Dirs_1.txt" id="449-4">
	<nl lang="en"> walk along the grass carpet to the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_4_Dirs_1.txt" id="449-5">
	<nl lang="en"> to your right should be green octagon flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-1">
	<nl lang="en"> face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-2">
	<nl lang="en"> go forward one segment to the intersection with the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-4">
	<nl lang="en"> go forward one segment to the wooden-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-6">
	<nl lang="en"> go forward two segments to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-8">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-9">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-10">
	<nl lang="en"> go forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-11">
	<nl lang="en"> pass the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-12">
	<nl lang="en"> pass the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_3_Dirs_1.txt" id="450-13">
	<nl lang="en"> one segment past the chair is position 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_4_Dirs_1.txt" id="454-1">
	<nl lang="en"> position 4 is at the dead end of a yellow tiled hall with fish on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_2_Dirs_1.txt" id="457-1">
	<nl lang="en"> turn to face the honeycomb yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_2_Dirs_1.txt" id="457-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_1_Dirs_1.txt" id="458-1">
	<nl lang="en"> take the yellow path away from the end of the hall and at the blue path intersection, go right onto the blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_1_Dirs_1.txt" id="458-2">
	<nl lang="en"> follow it all the way to the other end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_1_Dirs_1.txt" id="458-3">
	<nl lang="en"> here, take a left towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_1_Dirs_1.txt" id="458-4">
	<nl lang="en"> go past the easel to the end of this hall and take a left onto the red brick at the corner </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_1_Dirs_1.txt" id="458-5">
	<nl lang="en"> the very next intersection is 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_2_Dirs_1.txt" id="459-1">
	<nl lang="en"> it's at the intersection of the yellow and grey halls, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_7_Dirs_1.txt" id="460-1">
	<nl lang="en"> one space forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_7_Dirs_1.txt" id="460-2">
	<nl lang="en"> a left at the blue hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_7_Dirs_1.txt" id="460-3">
	<nl lang="en"> then two spaces forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_7_Dirs_1.txt" id="460-4">
	<nl lang="en"> and a right when you see the red hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_7_Dirs_1.txt" id="460-5">
	<nl lang="en"> then stop </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-1">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-3">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-5">
	<nl lang="en"> go to the intersection with the yellow-tiled hall, passing a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-6">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_4_Dirs_1.txt" id="468-8">
	<nl lang="en"> go forward two segments </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-1">
	<nl lang="en"> orient yourself along the stone hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-2">
	<nl lang="en"> there should be a bare concrete hall to each side of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-3">
	<nl lang="en"> the end containing the bench should be to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-4">
	<nl lang="en"> go forward one segment to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_7_Dirs_1.txt" id="471-6">
	<nl lang="en"> go forward two segments to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-1">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-2">
	<nl lang="en"> turn and move past the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-3">
	<nl lang="en"> turn left and move to the end of the alley with green octagon floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-4">
	<nl lang="en"> turn right and move to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-6">
	<nl lang="en"> move along the flowered carpet two alleys past the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-8">
	<nl lang="en"> you are facing a chair and wooden flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_1_Dirs_1.txt" id="472-9">
	<nl lang="en"> move to the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_4_Dirs_1.txt" id="473-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_4_Dirs_1.txt" id="473-2">
	<nl lang="en"> you are facing flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_4_Dirs_1.txt" id="473-3">
	<nl lang="en"> move along it to the end till you reach the blue carpet alley, which should be to your left and right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_1_Dirs_1.txt" id="478-1">
	<nl lang="en"> go down the rose hall until you reach the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_1_Dirs_1.txt" id="478-2">
	<nl lang="en"> then take a left onto the wood hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_1_Dirs_1.txt" id="478-3">
	<nl lang="en"> position 1 has a bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-1">
	<nl lang="en"> face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-2">
	<nl lang="en"> go forward one segment to the intersection with the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-4">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_5_Dirs_1.txt" id="482-6">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_5_Dirs_1.txt" id="483-1">
	<nl lang="en"> go to the longetr end of the hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_5_Dirs_1.txt" id="483-2">
	<nl lang="en"> make the first right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_5_Dirs_1.txt" id="483-3">
	<nl lang="en"> move foward one spce </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_1_Dirs_1.txt" id="484-1">
	<nl lang="en"> go straight </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_1_Dirs_1.txt" id="484-2">
	<nl lang="en"> turn right at the rose hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_1_Dirs_1.txt" id="484-3">
	<nl lang="en"> keep going until it intersects with the red hallway and has an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_2_Dirs_1.txt" id="485-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_2_Dirs_1.txt" id="485-2">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_2_Dirs_1.txt" id="485-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_2_Dirs_1.txt" id="485-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_3_Dirs_1.txt" id="487-1">
	<nl lang="en"> face the intersection containing the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_3_Dirs_1.txt" id="487-2">
	<nl lang="en"> go forward one segment, to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_3_Dirs_1.txt" id="487-3">
	<nl lang="en"> turn right at the hatrack, go forward two segments, passing the bench, to the empty intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-3">
	<nl lang="en"> you should be at the intersection of blue and brown </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_6_Dirs_1.txt" id="490-6">
	<nl lang="en"> if there is a solid wall on your right then you are at position 6 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_5_Dirs_1.txt" id="492-1">
	<nl lang="en"> follow the yellow path towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_5_Dirs_1.txt" id="492-2">
	<nl lang="en"> at the coat rack take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_5_Dirs_1.txt" id="492-3">
	<nl lang="en"> take the blue path all the way to the end of the hall and at the corner, go left towards the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_5_Dirs_1.txt" id="492-4">
	<nl lang="en"> at the easel, take a right onto the wood path and the very next section will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-1">
	<nl lang="en"> turn so the wall is on your left and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-9">
	<nl lang="en"> turn right onto the blue hallway and walk forward four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_3_Dirs_1.txt" id="498-10">
	<nl lang="en"> if you are standing at the intersection of the blue and yellow floors, back up once </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-1">
	<nl lang="en"> take the path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-2">
	<nl lang="en"> at the lamp, follow the path to the left, and then right at the next corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-3">
	<nl lang="en"> when you come to a red brick path, go left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-4">
	<nl lang="en"> when you reach the blue path, take a right onto it </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-5">
	<nl lang="en"> follow it until you can take a left onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_6_Dirs_1.txt" id="499-6">
	<nl lang="en"> once on the pink path, take a right at the first intersection and go all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Sides ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_2_Dirs_1.txt" id="500-1">
	<nl lang="en"> take the wood path away from the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_2_Dirs_1.txt" id="500-2">
	<nl lang="en"> at the corner, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_2_Dirs_1.txt" id="500-3">
	<nl lang="en"> follow the path to the next corner and take a right at the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_2_Dirs_1.txt" id="500-4">
	<nl lang="en"> go straight to the very next corner and this is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_7_Dirs_1.txt" id="501-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_7_Dirs_1.txt" id="501-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_7_Dirs_1.txt" id="501-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_7_Dirs_1.txt" id="501-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_1_Dirs_1.txt" id="504-1">
	<nl lang="en"> go down the hall with yellow stone floors until you come to a hall to your left with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_1_Dirs_1.txt" id="504-2">
	<nl lang="en"> turn left into this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_1_Dirs_1.txt" id="504-3">
	<nl lang="en"> position one is the intersection containing an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-1">
	<nl lang="en"> go towards the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-2">
	<nl lang="en"> at the pink path intersection, go left onto the pink path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-3">
	<nl lang="en"> take a right onto the blue path at the next intersection </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-4">
	<nl lang="en"> at the end of the hall, go left towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-5">
	<nl lang="en"> go past the easel until you come to the corner with the red brick intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_1_Dirs_1.txt" id="505-6">
	<nl lang="en"> go left onto the red brick and the first intersection is 1 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_6_Dirs_1.txt" id="506-1">
	<nl lang="en"> with your back to the wall turn left and move one block </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_6_Dirs_1.txt" id="506-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_7_6_Dirs_1.txt" id="509-1">
	<nl lang="en"> position 6 is a dead end branching off from the rose hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_7_6_Dirs_1.txt" id="509-2">
	<nl lang="en"> it was two pictures of the eiffel tower on it </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_1_Dirs_1.txt" id="512-1">
	<nl lang="en"> go until the hall dead ends, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_1_Dirs_1.txt" id="512-2">
	<nl lang="en"> go until it dead ends again and take another left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_1_Dirs_1.txt" id="512-3">
	<nl lang="en"> take a right at the first intersection and go straight unti you reach the intersection with red brick crossing over </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_1_Dirs_1.txt" id="512-4">
	<nl lang="en"> go left a long way until you reach where there are butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_1_Dirs_1.txt" id="512-5">
	<nl lang="en"> take a left at the intersection with a wood path and position one will be at the point that there is a bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-1">
	<nl lang="en"> at six place your back to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-2">
	<nl lang="en"> the next side alley should be flowered carpet </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-3">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-4">
	<nl lang="en"> turn left or right to locate the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-5">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_1_Dirs_1.txt" id="516-6">
	<nl lang="en"> the side alleys are red brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_2_Dirs_1.txt" id="517-1">
	<nl lang="en"> go towards the easel on the red brick road </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_2_Dirs_1.txt" id="517-2">
	<nl lang="en"> take a right at the black road intersection and follow it until you come to a black easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_6_Dirs_1.txt" id="518-1">
	<nl lang="en"> face toward the longer portion of the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_6_Dirs_1.txt" id="518-2">
	<nl lang="en"> the intersection with the blue-tiled hall should be to your left; the section containing the chair behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_6_Dirs_1.txt" id="518-3">
	<nl lang="en"> go forward two segments to the wooden hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_6_Dirs_1.txt" id="518-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_6_Dirs_1.txt" id="518-5">
	<nl lang="en"> go forward one segment to the 't' intersection with the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_5_Dirs_1.txt" id="520-1">
	<nl lang="en"> position 5 is in a hall with wood floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_5_Dirs_1.txt" id="520-2">
	<nl lang="en"> it's in the middle </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_1_Dirs_1.txt" id="523-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_1_Dirs_1.txt" id="523-2">
	<nl lang="en"> walk forward to the end of the hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_1_Dirs_1.txt" id="523-3">
	<nl lang="en"> turn left walk forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_1_Dirs_1.txt" id="523-4">
	<nl lang="en"> turn left walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_1_Dirs_1.txt" id="524-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_1_Dirs_1.txt" id="524-2">
	<nl lang="en"> you should be able to see a painting easel in the far distance </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_1_Dirs_1.txt" id="524-3">
	<nl lang="en"> walk forward three times and stop </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_1_Dirs_1.txt" id="525-1">
	<nl lang="en"> turn so the walls are on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_1_Dirs_1.txt" id="525-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_1_Dirs_1.txt" id="525-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_1_Dirs_1.txt" id="525-4">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_1_Dirs_1.txt" id="525-5">
	<nl lang="en"> turn onto the pink hallway and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_4_Dirs_1.txt" id="526-1">
	<nl lang="en"> go towards the coat rack and take a left at the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_4_Dirs_1.txt" id="526-2">
	<nl lang="en"> go all the way to the end of the hall and this is 4 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_3_Dirs_1.txt" id="531-1">
	<nl lang="en"> you will follow the regular concrete path toward the blue tiled flooring one segment </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_3_Dirs_1.txt" id="531-2">
	<nl lang="en"> this 't' intersection is position 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_2_Dirs_1.txt" id="532-1">
	<nl lang="en"> go towards the chair at the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_2_Dirs_1.txt" id="532-2">
	<nl lang="en"> next, take a right and follow the path until you reach a black easel, this is position 2 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-3">
	<nl lang="en"> go forward one segment to the intersection containing the chair </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-5">
	<nl lang="en"> go forward two segments to the intersection with the brick hall, passing the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_1_Dirs_1.txt" id="533-7">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_5_Dirs_1.txt" id="534-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_5_Dirs_1.txt" id="534-2">
	<nl lang="en"> you see a sofa and then a hat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_5_Dirs_1.txt" id="534-3">
	<nl lang="en"> move to the hat rack and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_5_Dirs_1.txt" id="534-4">
	<nl lang="en"> move to the corner you see in front of you </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_4_Dirs_1.txt" id="536-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_4_Dirs_1.txt" id="536-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_4_Dirs_1.txt" id="536-3">
	<nl lang="en"> go forward two segments to the intersection of the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_4_Dirs_1.txt" id="536-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_4_Dirs_1.txt" id="536-5">
	<nl lang="en"> go forward three segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-2">
	<nl lang="en"> walk to the end of the yellow hall, 3 steps </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-4">
	<nl lang="en"> walk to the end of the black hall, 3 steps </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_1_Dirs_1.txt" id="539-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-1">
	<nl lang="en"> go straight towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-2">
	<nl lang="en"> at the chair, go left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-3">
	<nl lang="en"> follow this until the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-4">
	<nl lang="en"> here, go left towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-5">
	<nl lang="en"> go past the easel to the end of the hall and go left onto the red brick path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_1_Dirs_1.txt" id="541-6">
	<nl lang="en"> the next intersection will be 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_2.txt" id="542-1">
	<nl lang="en"> move to the end of green octagon flooring to the stone floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_2.txt" id="542-2">
	<nl lang="en"> turn right and move to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_2.txt" id="542-3">
	<nl lang="en"> turning right you see a chair and in front of you a sofa chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-1">
	<nl lang="en"> go toward the intersection containing the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-2">
	<nl lang="en"> after moving the one segment to reach this spot, turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-3">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-5">
	<nl lang="en"> go forward two segments along the wooden-floored hall to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-7">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-8">
	<nl lang="en"> turn toward the end of the hall that intersects the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-9">
	<nl lang="en"> i believe this is a right turn an dthat the intersection is two segments down </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-10">
	<nl lang="en"> when you reach the yellow-tiled hall, you wil turn away from the end which intersects the stone hall and follow the yellow-tiled hall to that end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_4_Dirs_1.txt" id="544-12">
	<nl lang="en"> if these directions fail, position 4 is at end of the yellow-tiled hall farthest from the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_7_1_Dirs_1.txt" id="546-1">
	<nl lang="en"> position 1 is in the red brick hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-1">
	<nl lang="en"> face away from the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-2">
	<nl lang="en"> go forward one segment to the interesection containing the stool </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-4">
	<nl lang="en"> go forward two segments, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-6">
	<nl lang="en"> you are now facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-7">
	<nl lang="en"> go foward one segment to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_2_Dirs_1.txt" id="550-8">
	<nl lang="en"> there is an easel to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_4_Dirs_1.txt" id="554-1">
	<nl lang="en"> follow the red brick path away from the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_4_Dirs_1.txt" id="554-2">
	<nl lang="en"> at the corner, go right towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_4_Dirs_1.txt" id="554-3">
	<nl lang="en"> go past the easel to the next corner, and go right again onto the blue path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_4_Dirs_1.txt" id="554-4">
	<nl lang="en"> follow the blue path all the way to the coat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_4_Dirs_1.txt" id="554-5">
	<nl lang="en"> at the coat rack, go left onto the yellow path and at the end of this hall is 4 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-1">
	<nl lang="en"> turn so that your back side faces the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_2_Dirs_1.txt" id="556-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-4">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-5">
	<nl lang="en"> follow this hall to its opposite end, about seven segments </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 7  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-6">
	<nl lang="en"> you will pass a chair and a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-7">
	<nl lang="en"> at the far end, you will reach the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-8">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_4_Dirs_1.txt" id="558-9">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_5_Dirs_1.txt" id="559-1">
	<nl lang="en"> at six put your back to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_5_Dirs_1.txt" id="559-2">
	<nl lang="en"> walk forward one alley and turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_5_Dirs_1.txt" id="559-3">
	<nl lang="en"> the carpet should be flowers </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_5_Dirs_1.txt" id="559-4">
	<nl lang="en"> move along the flowers past the hatrack and one alley past the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_5_Dirs_1.txt" id="559-5">
	<nl lang="en"> the alley to the right has grey floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-1">
	<nl lang="en"> there is only one direction to walk </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-2">
	<nl lang="en"> go forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-5">
	<nl lang="en"> there should be an orange floor to the left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_6_Dirs_1.txt" id="560-10">
	<nl lang="en"> if you can only see pictures of towers in front of you and butterflys on the walls behind you then you are in the right spot </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_5_Dirs_1.txt" id="564-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_5_Dirs_1.txt" id="564-2">
	<nl lang="en"> move down two blocks til you get to the alley with flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_5_Dirs_1.txt" id="564-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_5_Dirs_1.txt" id="564-4">
	<nl lang="en"> move forward three or four blocks til you get to the green octagon carpet turn left and move forward one block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_2_Dirs_1.txt" id="567-1">
	<nl lang="en"> take the blue path towards the chair all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_2_Dirs_1.txt" id="567-2">
	<nl lang="en"> here, take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_2_Dirs_1.txt" id="567-3">
	<nl lang="en"> next, at the easel, take a right to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_2_Dirs_1.txt" id="567-4">
	<nl lang="en"> at the corner, take a left and at the next corner, take a right at the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_2_Dirs_1.txt" id="567-5">
	<nl lang="en"> the end of this hall is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_7_Dirs_1.txt" id="568-1">
	<nl lang="en"> turn to face the green hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_7_Dirs_1.txt" id="568-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_7_Dirs_1.txt" id="568-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_7_Dirs_1.txt" id="568-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_7_Dirs_1.txt" id="569-1">
	<nl lang="en"> turn to face the black hallway with the easel at the end of it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_7_Dirs_1.txt" id="569-2">
	<nl lang="en"> there should be pictures of butterflys on the walls in front of you and towers in the back </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_7_Dirs_1.txt" id="569-3">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_7_Dirs_1.txt" id="569-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_7_Dirs_1.txt" id="569-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_3_Dirs_1.txt" id="573-1">
	<nl lang="en"> position 3 is in the middle of the blue tiled hall with a coat rack at one end and a chair or something at the other end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-4">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-6">
	<nl lang="en"> you will follow the blue-tiled hall past the intersection with the pink-flowered carpet hall, on your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-7">
	<nl lang="en"> to your right there will be a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_7_Dirs_1.txt" id="575-8">
	<nl lang="en"> one segment away there will be an intersection containing a stool in a stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_7_Dirs_1.txt" id="576-1">
	<nl lang="en"> position 7 is the intersection of a bare concrete hall and the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_7_Dirs_1.txt" id="576-2">
	<nl lang="en"> there is a stool in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_7_Dirs_1.txt" id="576-5">
	<nl lang="en"> the most efficient route is probably to your left, if you have your back facing the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-1">
	<nl lang="en"> go down the blue-tiled floor until you reach a hall with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-2">
	<nl lang="en"> turn right into this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-3">
	<nl lang="en"> follow this hall until you reach a hall with yellow stone flooring </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-4">
	<nl lang="en"> i believe you turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-5">
	<nl lang="en"> regardless you will turn toward the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_2_Dirs_1.txt" id="580-6">
	<nl lang="en"> the space containing the easel is position 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_4_Dirs_1.txt" id="582-1">
	<nl lang="en"> find the fish hallways </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_4_Dirs_1.txt" id="582-2">
	<nl lang="en"> then find the fish hallways with yellow floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_4_Dirs_1.txt" id="582-3">
	<nl lang="en"> position 4 is a dead end of the yellow floored fish hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-1">
	<nl lang="en"> face the green carpeting </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-2">
	<nl lang="en"> move to the wall and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-3">
	<nl lang="en"> move along the blue carpeting until you get to wooden flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-5">
	<nl lang="en"> move forward one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_6_Dirs_1.txt" id="584-6">
	<nl lang="en"> you should see gray floor to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_1_Dirs_1.txt" id="587-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_1_Dirs_1.txt" id="587-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_1_Dirs_1.txt" id="587-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_1_Dirs_1.txt" id="587-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-1">
	<nl lang="en"> turn to face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-6">
	<nl lang="en"> walk forward once turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_6_Dirs_1.txt" id="588-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_1_Dirs_1.txt" id="589-1">
	<nl lang="en"> turn so that the wall is on your left side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_1_Dirs_1.txt" id="589-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_1_Dirs_1.txt" id="589-3">
	<nl lang="en"> turn left and walk down the red hallway four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_7_1_Dirs_1.txt" id="589-4">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-1">
	<nl lang="en"> turn so that the wall is facing your left and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-10">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-11">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-12">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_6_Dirs_1.txt" id="593-13">
	<nl lang="en"> and finally turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_5_Dirs_1.txt" id="595-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_5_Dirs_1.txt" id="598-1">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_5_Dirs_1.txt" id="598-2">
	<nl lang="en"> a right at the red hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_5_Dirs_1.txt" id="598-3">
	<nl lang="en"> position 5 is in the middle, with a dead end branch to the left, and nothing on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_5_Dirs_1.txt" id="599-1">
	<nl lang="en"> go towards the intersection of red brick </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_5_Dirs_1.txt" id="599-2">
	<nl lang="en"> take a right onto red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_5_Dirs_1.txt" id="599-3">
	<nl lang="en"> the very next section is 5 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_3_Dirs_1.txt" id="600-1">
	<nl lang="en"> follow the red brick path away from the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_3_Dirs_1.txt" id="600-2">
	<nl lang="en"> at the corner take a right towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_3_Dirs_1.txt" id="600-3">
	<nl lang="en"> go past the easel to the next corner and take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_3_Dirs_1.txt" id="600-4">
	<nl lang="en"> go towards the chair and one intersection past the chair is position 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_6_Dirs_1.txt" id="605-1">
	<nl lang="en"> take the blue path towards the chair and at the pink path intersection, take a right onto the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_6_Dirs_1.txt" id="605-2">
	<nl lang="en"> at the very first intersection on this path, take a right and go to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-1">
	<nl lang="en"> face and move to the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-2">
	<nl lang="en"> turn left and move along the wooden flooring to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-4">
	<nl lang="en"> the side alley to the left has stone flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-5">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-6">
	<nl lang="en"> move one block down this alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_2.txt" id="606-7">
	<nl lang="en"> you should see a sofa chair in front of you and a wooden chair to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-1">
	<nl lang="en"> turn to face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_3_Dirs_1.txt" id="609-6">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_4_Dirs_1.txt" id="611-1">
	<nl lang="en"> 4 is at the intersection of the blue and rose hallways </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_3_Dirs_1.txt" id="614-1">
	<nl lang="en"> take the black path towards the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_3_Dirs_1.txt" id="614-2">
	<nl lang="en"> at the red brick intersection, go right towards the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_3_Dirs_1.txt" id="614-3">
	<nl lang="en"> at the first intersection after the lamp, take a right onto the plain cement path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_3_Dirs_1.txt" id="614-4">
	<nl lang="en"> the next intersection will be three where the plain cement meets the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_7_Dirs_1.txt" id="616-1">
	<nl lang="en"> take the grassy hall to the blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_7_Dirs_1.txt" id="616-2">
	<nl lang="en"> then the blue hall almost all the way down </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_7_Dirs_1.txt" id="616-3">
	<nl lang="en"> then left to the red hall oine movement </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-1">
	<nl lang="en"> with your back to the wall at 2 turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-2">
	<nl lang="en"> at the end of the aisle you should see grass carpet to your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-3">
	<nl lang="en"> walk down this </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-4">
	<nl lang="en"> at the end of the grass alley turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-5">
	<nl lang="en"> you should see blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_3_Dirs_1.txt" id="617-6">
	<nl lang="en"> walk to the fourth alley where there is gray carpet on the left alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_2_Dirs_1.txt" id="619-1">
	<nl lang="en"> move out of the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_2_Dirs_1.txt" id="619-2">
	<nl lang="en"> take a left, i think </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_2_Dirs_1.txt" id="619-3">
	<nl lang="en"> position 2 is at an intersection of two halls with no tiles on the floor but with monarch butterflies on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_1_Dirs_1.txt" id="622-1">
	<nl lang="en"> place your back to the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_1_Dirs_1.txt" id="622-2">
	<nl lang="en"> go forward along the bare concrete hal one segment ti the intersection of the hall of pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_1_Dirs_1.txt" id="622-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_1_Dirs_1.txt" id="622-4">
	<nl lang="en"> go forward one segment to the intersection of the pink-flowered carpet hall and the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_1_Dirs_1.txt" id="622-5">
	<nl lang="en"> there is an easel in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-3">
	<nl lang="en"> go to the far end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-5">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-6">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-8">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-9">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-10">
	<nl lang="en"> go forward one segment to the intersection containing the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-11">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_2_Dirs_1.txt" id="623-12">
	<nl lang="en"> go forward one segment to the empty corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-1">
	<nl lang="en"> go on the path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-2">
	<nl lang="en"> at the lamp, go left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-3">
	<nl lang="en"> at the next corner, go right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-4">
	<nl lang="en"> at the easel, go left on the plain path until it intersects with the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-5">
	<nl lang="en"> go right onto the blue path and follow it towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-6">
	<nl lang="en"> at the chair, go right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_7_Dirs_1.txt" id="624-7">
	<nl lang="en"> and the very next intersection where there is also a stool is 7 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_5_Dirs_1.txt" id="629-1">
	<nl lang="en"> left down the blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_5_Dirs_1.txt" id="629-2">
	<nl lang="en"> till you get to a grey hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_5_Dirs_1.txt" id="629-3">
	<nl lang="en"> then a left onto the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_5_Dirs_1.txt" id="629-4">
	<nl lang="en"> it's one movement after a lamp pole </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_7_Dirs_1.txt" id="630-1">
	<nl lang="en"> turn to face the pink hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_7_Dirs_1.txt" id="630-2">
	<nl lang="en"> walk forward 3 times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_7_Dirs_1.txt" id="631-1">
	<nl lang="en"> at the intersection of the rose floors and the yellow floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_7_Dirs_1.txt" id="632-1">
	<nl lang="en"> take the yellow hall until you get to the intersection of it and the rose floored hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_5_Dirs_1.txt" id="634-1">
	<nl lang="en"> take the red brick path away from the bench and at the corner, go right towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_1_5_Dirs_1.txt" id="634-2">
	<nl lang="en"> at the easel, take a left onto the wood path and the very first section you come to, you will be at 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_5_Dirs_1.txt" id="635-1">
	<nl lang="en"> orient yourself along the wooden hall with the hatrack behind you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_5_Dirs_1.txt" id="635-2">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_5_Dirs_1.txt" id="635-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_5_Dirs_1.txt" id="635-4">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_5_Dirs_1.txt" id="635-5">
	<nl lang="en"> there will be a lamp in the next segment in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_1_Dirs_1.txt" id="637-1">
	<nl lang="en"> orient yourself to face the hall with brown brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_1_Dirs_1.txt" id="637-2">
	<nl lang="en"> blue-tiled hall should be to your left, the intersection with the chair behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_1_Dirs_1.txt" id="637-3">
	<nl lang="en"> go forward in the brown brick-floored hall until you reach the intersection with the hall with the pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_1_Dirs_1.txt" id="637-4">
	<nl lang="en"> this will contain an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_4_Dirs_1.txt" id="638-1">
	<nl lang="en"> take the pink flowered path directly to the other end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_7_4_Dirs_1.txt" id="638-2">
	<nl lang="en"> at the intersection where you can only either go right or left on a blue path, this is position 4 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-1">
	<nl lang="en"> face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-2">
	<nl lang="en"> to your left is a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-3">
	<nl lang="en"> move forward one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-4">
	<nl lang="en"> turn left and move to the end of the green octagon flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-5">
	<nl lang="en"> turn right and move past the chair to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_3_Dirs_1.txt" id="644-6">
	<nl lang="en"> turn and move to the deadend </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-1">
	<nl lang="en"> face the hatrack in the blue-tiled hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-2">
	<nl lang="en"> walk the one segment toward it </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-4">
	<nl lang="en"> follow the blue-tiled hallway to the grass floored hallway at the far end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_4_Dirs_1.txt" id="645-6">
	<nl lang="en"> where this hall intersects the yellow-tiled hall, there should be an empty intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_7_Dirs_1.txt" id="649-1">
	<nl lang="en"> head away form the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_7_Dirs_1.txt" id="649-2">
	<nl lang="en"> make the first rt </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_7_Dirs_1.txt" id="649-3">
	<nl lang="en"> then first rt again </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_7_Dirs_1.txt" id="649-4">
	<nl lang="en"> keep goin till there is a hallway on the left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-1">
	<nl lang="en"> face toward the hatrack in the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-2">
	<nl lang="en"> go to it one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-4">
	<nl lang="en"> go forward two segments, or to the first empty intersection </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-6">
	<nl lang="en"> the floor should be bare concrete </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-7">
	<nl lang="en"> the walls have butterflies </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-8">
	<nl lang="en"> pass through this segment to the intersection with the hall of brown brick </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_7_Dirs_1.txt" id="650-9">
	<nl lang="en"> this intersection should be empty and is position 7 </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_3_Dirs_1.txt" id="651-1">
	<nl lang="en"> foward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_3_Dirs_1.txt" id="651-2">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_3_Dirs_1.txt" id="651-3">
	<nl lang="en"> then left on to the blue floored area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_3_Dirs_1.txt" id="651-4">
	<nl lang="en"> pos three is in between the two pieces of furniture in this hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_1_Dirs_1.txt" id="653-1">
	<nl lang="en"> position one is in the pink floored area, on the aesal </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-2">
	<nl lang="en"> turn left down the stone floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-3">
	<nl lang="en"> follow this hallway three segments to the blue-tiled hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-4">
	<nl lang="en"> turn left in this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-5">
	<nl lang="en"> you will be turning toward many pictures of butterflies </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-6">
	<nl lang="en"> there should be no visible pictures of fish </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-7">
	<nl lang="en"> follow the hallway until you reach the about second intersection with a bare concrete floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-8">
	<nl lang="en"> the intersection should be empty, though the next intersection will contain a bench and the one following will contain a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-9">
	<nl lang="en"> the intersection to your left should be empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-10">
	<nl lang="en"> the first segment of this bar concrete hall to your left should have butterfly pictures; followed by a second segment containg eiffel tower pictures </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_3_Dirs_1.txt" id="657-11">
	<nl lang="en"> the hallway should 't' after the segment of eiffel tower pics </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-2">
	<nl lang="en"> walk along the flowers to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-4">
	<nl lang="en"> walk along the brick two alleys past the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-6">
	<nl lang="en"> move along the wooden floor to the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_1_Dirs_1.txt" id="659-7">
	<nl lang="en"> in the next block is a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_4_Dirs_1.txt" id="663-1">
	<nl lang="en"> it's at the corner of the yellow floor and the grassy floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_3_Dirs_1.txt" id="668-1">
	<nl lang="en"> face the hat rack and move to it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_3_Dirs_1.txt" id="668-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_3_Dirs_1.txt" id="668-3">
	<nl lang="en"> walk one alley past the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_3_Dirs_1.txt" id="668-4">
	<nl lang="en"> you should see gray floor to your right and a stool in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_1_Dirs_1.txt" id="669-1">
	<nl lang="en"> foward one space </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_1_Dirs_1.txt" id="669-2">
	<nl lang="en"> then a left down the red hall until it intersects with the rose hall and has an easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-1">
	<nl lang="en"> go towards the chair on the path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-2">
	<nl lang="en"> at the chair, take a left onto the blue path and follow it to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-3">
	<nl lang="en"> here, take a left towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-4">
	<nl lang="en"> at the easel, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-5">
	<nl lang="en"> at the end of this hall, take a left towards the lamp and once at the lamp, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_2_Dirs_1.txt" id="670-6">
	<nl lang="en"> the end of this hall at the corner is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_6_Dirs_1.txt" id="671-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_6_Dirs_1.txt" id="671-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_6_Dirs_1.txt" id="671-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_6_Dirs_1.txt" id="671-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_3_Dirs_1.txt" id="672-1">
	<nl lang="en"> blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_3_Dirs_1.txt" id="672-2">
	<nl lang="en"> pos three is in between the two pieaces of furniture </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_6_Dirs_1.txt" id="675-1">
	<nl lang="en"> go towards the lamp on the red brick road, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_6_Dirs_1.txt" id="675-2">
	<nl lang="en"> when you come to the intersection with the plain cement path, you are at position 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_1_Dirs_1.txt" id="676-1">
	<nl lang="en"> position 1 is in the middle of the red brick floored hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_5_Dirs_1.txt" id="677-1">
	<nl lang="en"> all the way down the winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_5_Dirs_1.txt" id="677-2">
	<nl lang="en"> then a right at the intersection of the yellow and grey halls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_5_Dirs_1.txt" id="677-3">
	<nl lang="en"> then all the way down the grey hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_5_Dirs_1.txt" id="677-4">
	<nl lang="en"> then a left onto a red hall, past a lamp, until you reach an intersection with a dead end with blank floors and walls </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-1">
	<nl lang="en"> foward 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-2">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-3">
	<nl lang="en"> fwd 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-4">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-5">
	<nl lang="en"> foward till 1st right turn </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-6">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_7_Dirs_1.txt" id="680-7">
	<nl lang="en"> foward 1 space </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_1_Dirs_1.txt" id="683-1">
	<nl lang="en"> position one is at the red floors and rose floors intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_1_Dirs_1.txt" id="683-2">
	<nl lang="en"> where an easel is </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-1">
	<nl lang="en"> move to the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-2">
	<nl lang="en"> move along the blue to the chair and turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-3">
	<nl lang="en"> move to the stool and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-4">
	<nl lang="en"> turn left at the sofa chair and move to the next sofa chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-5">
	<nl lang="en"> move one alley along the brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_1_Dirs_1.txt" id="684-6">
	<nl lang="en"> to your left is grey flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_7_Dirs_1.txt" id="685-1">
	<nl lang="en"> head toward the aesal </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_7_Dirs_1.txt" id="685-2">
	<nl lang="en"> make a rt just before the aesal </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_7_Dirs_1.txt" id="685-3">
	<nl lang="en"> go down until the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_6_Dirs_1.txt" id="687-1">
	<nl lang="en"> with your back to the wall turn left and move two alleys to the side alley with stone flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_6_Dirs_1.txt" id="687-2">
	<nl lang="en"> turn right onto the stone and move to the second alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_6_Dirs_1.txt" id="687-3">
	<nl lang="en"> to your left you see a chair and grey carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_1_Dirs_1.txt" id="689-1">
	<nl lang="en"> take the black path towards the pink flowered path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_1_Dirs_1.txt" id="689-2">
	<nl lang="en"> once here, go right onto the pink path until you reach a black easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-1">
	<nl lang="en"> turn so that the wall is to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-4">
	<nl lang="en"> walk forward till the end of the hallway, maybe 3 spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-6">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-8">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-9">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-10">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-11">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_2.txt" id="691-12">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_7_Dirs_1.txt" id="695-1">
	<nl lang="en"> take the black path towards the intersection with the red brick path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_7_Dirs_1.txt" id="695-2">
	<nl lang="en"> go right onto the red brick path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_7_Dirs_1.txt" id="695-3">
	<nl lang="en"> the second intersection after the lamp will be position 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-1">
	<nl lang="en"> turn so that the wall is on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-4">
	<nl lang="en"> walk forward six times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 6  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-5">
	<nl lang="en"> you should be at the end of the hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-7">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_4_Dirs_1.txt" id="702-8">
	<nl lang="en"> you should be at the end of the hallway again </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_3_Dirs_1.txt" id="703-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_3_Dirs_1.txt" id="703-2">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_3_Dirs_1.txt" id="703-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_3_Dirs_1.txt" id="703-4">
	<nl lang="en"> the black hallway should be in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_3_Dirs_1.txt" id="703-5">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_1.txt" id="704-1">
	<nl lang="en"> from 6 walk forward and move out to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_1.txt" id="704-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_1.txt" id="704-3">
	<nl lang="en"> walk until you are in the same square as the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_1.txt" id="704-4">
	<nl lang="en"> turn left walk to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_6_Dirs_1.txt" id="705-1">
	<nl lang="en"> go straight one movement </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_6_Dirs_1.txt" id="705-2">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_6_Dirs_1.txt" id="705-3">
	<nl lang="en"> then go down the hall until the grey floor intersects with a blank floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_5_Dirs_1.txt" id="707-1">
	<nl lang="en"> take a right down the blue hall until you see a coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_5_Dirs_1.txt" id="707-2">
	<nl lang="en"> then take an immediate left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-2">
	<nl lang="en"> turn left at this sofa chair and turn right at the next one </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-3">
	<nl lang="en"> move along the brick flooring and turn right at the end of it </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-4">
	<nl lang="en"> move to the easel and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-5">
	<nl lang="en"> you should be facing the longer wooden alley </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_2.txt" id="714-6">
	<nl lang="en"> move one block to the middle of the pictures </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_3_Dirs_1.txt" id="721-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_3_Dirs_1.txt" id="721-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_3_Dirs_1.txt" id="721-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_3_Dirs_1.txt" id="721-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_7_Dirs_1.txt" id="723-1">
	<nl lang="en"> face so the aesal is to your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_7_Dirs_1.txt" id="723-2">
	<nl lang="en"> go down this way till the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-1">
	<nl lang="en"> turn to face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-6">
	<nl lang="en"> walk down the blue hallway untill you intersect the yellow hallway, about 5 steps </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_4_Dirs_1.txt" id="727-7">
	<nl lang="en"> turn left and go to the end of the yellow hallway, about 2 steps </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_3_Dirs_1.txt" id="728-1">
	<nl lang="en"> position 3 is in the middle of the blue hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_6_Dirs_1.txt" id="730-1">
	<nl lang="en"> take the yellow path away from the end of the hall to the blue path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_6_Dirs_1.txt" id="730-2">
	<nl lang="en"> at the coat rack, take a right onto the blue path and follow past the chair to the pink path intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_6_Dirs_1.txt" id="730-3">
	<nl lang="en"> at this intersection, go right onto the pink path and at the very first intersection, go right to the very end of the hall and this is 6 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-2">
	<nl lang="en"> move forward one alley and turn right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-3">
	<nl lang="en"> now walk along the brick floor past a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-4">
	<nl lang="en"> stop one alley past the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-5">
	<nl lang="en"> the carpet is flowers </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_4_Dirs_1.txt" id="731-6">
	<nl lang="en"> turn left and move forward one block to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_6_Dirs_1.txt" id="733-1">
	<nl lang="en"> with your back to the wall move forward along the octagon carpet one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_6_Dirs_1.txt" id="733-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_6_Dirs_1.txt" id="733-3">
	<nl lang="en"> you should be facing wood flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_6_Dirs_1.txt" id="733-4">
	<nl lang="en"> move one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_6_Dirs_1.txt" id="733-5">
	<nl lang="en"> to your left is gray floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_4_Dirs_1.txt" id="735-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_4_Dirs_1.txt" id="735-2">
	<nl lang="en"> turn right into the wooden hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_4_Dirs_1.txt" id="735-3">
	<nl lang="en"> go forward one segment to the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_4_Dirs_1.txt" id="735-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_4_Dirs_1.txt" id="735-5">
	<nl lang="en"> go forward two segments, past the bench, to the intersection of the yellow-tiled and grassy halls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-2">
	<nl lang="en"> walk to the chair and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-3">
	<nl lang="en"> follow the alley </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-4">
	<nl lang="en"> you should see an easel after you turn the corner </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-5">
	<nl lang="en"> walk toward the easel and stop on the block where there are no butterflies on the sides </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_5_Dirs_1.txt" id="736-6">
	<nl lang="en"> you should be two blocks in front of the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-1">
	<nl lang="en"> turn so that the wall is on your left side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_3_Dirs_1.txt" id="737-10">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_3_Dirs_1.txt" id="741-1">
	<nl lang="en"> forward one movement </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_3_Dirs_1.txt" id="741-2">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_3_Dirs_1.txt" id="741-3">
	<nl lang="en"> and go all the way down the winding hall until you reach the dead end </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-4">
	<nl lang="en"> walk forward six times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 6  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_6_Dirs_1.txt" id="743-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_2_Dirs_1.txt" id="744-1">
	<nl lang="en"> take the pink path until the intersection of the red brick path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_2_Dirs_1.txt" id="744-2">
	<nl lang="en"> go left onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_2_Dirs_1.txt" id="744-3">
	<nl lang="en"> then take a right onto the black path at that intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_2_Dirs_1.txt" id="744-4">
	<nl lang="en"> go all the way util the intersection of the black and yellow paths and this is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_6_Dirs_1.txt" id="747-1">
	<nl lang="en"> go to the pink flowered area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_6_Dirs_1.txt" id="747-2">
	<nl lang="en"> make a right then a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_6_Dirs_1.txt" id="747-3">
	<nl lang="en"> go to end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_6_Dirs_1.txt" id="750-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_6_Dirs_1.txt" id="750-2">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_6_Dirs_1.txt" id="750-3">
	<nl lang="en"> go forward two segments along the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_6_Dirs_1.txt" id="750-4">
	<nl lang="en"> turn right into the wooden hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_6_Dirs_1.txt" id="750-5">
	<nl lang="en"> go forward two segments to the intersection of the bare concrete hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-3">
	<nl lang="en"> turn right onto the blue hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-4">
	<nl lang="en"> walk to the far end, maybe 5 spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-5">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_4_5_Dirs_1.txt" id="755-6">
	<nl lang="en"> turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_1.txt" id="758-1">
	<nl lang="en"> with your back to the wall at 3 you see an alley in front and blue carpet to each side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_1.txt" id="758-2">
	<nl lang="en"> turn right and walk to the hat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_1.txt" id="758-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_1.txt" id="758-4">
	<nl lang="en"> the carpet should have green octagons </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_3_4_Dirs_1.txt" id="758-5">
	<nl lang="en"> go to the end of this alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-1">
	<nl lang="en"> take the wood path towards the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-2">
	<nl lang="en"> go left onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-3">
	<nl lang="en"> go towards the lamp to the end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-4">
	<nl lang="en"> at the chair at the end of the hall, go right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-5">
	<nl lang="en"> at the black bench, take a left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-6">
	<nl lang="en"> and then another left at the coat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_5_Dirs_1.txt" id="759-7">
	<nl lang="en"> at the end of this hall at the corner, you are at position 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-1">
	<nl lang="en"> orient yourself along the wooden hall with the hatrack behind you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-2">
	<nl lang="en"> go forward one segment to the intersection of the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-4">
	<nl lang="en"> go forward three segments to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-5">
	<nl lang="en"> this interesection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-6">
	<nl lang="en"> turn right along the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_7_Dirs_1.txt" id="762-7">
	<nl lang="en"> go forward two segments to the 't' intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_4_Dirs_1.txt" id="767-1">
	<nl lang="en"> go straight until you get to the intersection with the grey floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_1_Dirs_1.txt" id="769-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_1_Dirs_1.txt" id="771-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_1_Dirs_1.txt" id="771-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_1_Dirs_1.txt" id="771-3">
	<nl lang="en"> turn onto the pink hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_1_Dirs_1.txt" id="771-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_7_Dirs_1.txt" id="772-1">
	<nl lang="en"> go down the longer end of this hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_7_Dirs_1.txt" id="772-2">
	<nl lang="en"> make the first right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_7_Dirs_1.txt" id="772-3">
	<nl lang="en"> keep going unitl the first hallway on the left appears </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_3_Dirs_1.txt" id="774-1">
	<nl lang="en"> one movement forward until you reach the red hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_3_Dirs_1.txt" id="774-2">
	<nl lang="en"> then a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_3_Dirs_1.txt" id="774-3">
	<nl lang="en"> take the red hall until you get ot the grey hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_3_Dirs_1.txt" id="774-4">
	<nl lang="en"> then take the grey hall until it intersects with the yellow hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_3_Dirs_1.txt" id="774-5">
	<nl lang="en"> then take a left and go all the way down the winding hall till you hit a dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_3_Dirs_1.txt" id="776-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_3_Dirs_1.txt" id="776-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_3_Dirs_1.txt" id="776-3">
	<nl lang="en"> turn onto the blue hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_3_Dirs_1.txt" id="776-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-3">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-5">
	<nl lang="en"> you should have the blue hallway on your right now </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_4_Dirs_1.txt" id="779-6">
	<nl lang="en"> turn right and walk down the blue hallway twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-1">
	<nl lang="en"> face and move towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-3">
	<nl lang="en"> move forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-5">
	<nl lang="en"> move one block towards the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_5_Dirs_1.txt" id="781-6">
	<nl lang="en"> you see butterflies on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_1.txt" id="782-1">
	<nl lang="en"> from four walk as far as you can </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_1.txt" id="782-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_7_Dirs_1.txt" id="782-3">
	<nl lang="en"> the chair about halfway down is on p-7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_6_5_Dirs_1.txt" id="783-1">
	<nl lang="en"> 5 is at the end of the long butterlfy hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_6_5_Dirs_1.txt" id="783-2">
	<nl lang="en"> make a left one street before the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_6_5_Dirs_1.txt" id="783-3">
	<nl lang="en"> you should be able to face the hat rack, behind which should be a wall, not a hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_4_Dirs_1.txt" id="785-1">
	<nl lang="en"> down the grey hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_4_Dirs_1.txt" id="785-2">
	<nl lang="en"> at the intersection of the blue and rose floored halls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_2_Dirs_1.txt" id="786-1">
	<nl lang="en"> go to the intersection of the red brick path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_2_Dirs_1.txt" id="786-2">
	<nl lang="en"> take a right onto the red brick and go all the way down until the intersection of the black path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_2_Dirs_1.txt" id="786-3">
	<nl lang="en"> take a right onto the black path and go until you reach the intersection of black and yellow path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_4_Dirs_1.txt" id="790-1">
	<nl lang="en"> position 4 is a dead end of the yellow floored hall with fish on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_3_Dirs_1.txt" id="791-1">
	<nl lang="en"> follow the plain cement towards the blue path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_2_Dirs_1.txt" id="792-1">
	<nl lang="en"> go straight until you see an intersection of a black path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_2_Dirs_1.txt" id="792-2">
	<nl lang="en"> take a right onto the black path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_2_Dirs_1.txt" id="792-3">
	<nl lang="en"> go straight until you reach an intersection of the black path with a yellow path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_4_Dirs_1.txt" id="795-1">
	<nl lang="en"> go straight toward the wall hangings of the eiffel tower and take a right on the pink flowered path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_4_Dirs_1.txt" id="795-2">
	<nl lang="en"> when you can either turn only right or left onto a blue path, you are at position 4 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_7_Dirs_1.txt" id="796-1">
	<nl lang="en"> at one face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_7_Dirs_1.txt" id="796-2">
	<nl lang="en"> move one square </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_7_Dirs_1.txt" id="796-3">
	<nl lang="en"> the lamp should still be in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_5_Dirs_1.txt" id="797-1">
	<nl lang="en"> from four face the grass carpet and move to the hat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_5_Dirs_1.txt" id="797-2">
	<nl lang="en"> turn left and move onto the blue carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_5_Dirs_1.txt" id="797-3">
	<nl lang="en"> walk past two chairs and to the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_5_Dirs_1.txt" id="797-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_5_Dirs_1.txt" id="797-5">
	<nl lang="en"> move into the corner such that the lamp is behind you and to your right you see a gray carpeted alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_7_Dirs_1.txt" id="798-1">
	<nl lang="en"> go straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_7_Dirs_1.txt" id="798-2">
	<nl lang="en"> then turn when you see the red hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_7_Dirs_1.txt" id="798-3">
	<nl lang="en"> then go down the red hall until you can look to the right and see a blue corridor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_5_Dirs_1.txt" id="802-1">
	<nl lang="en"> turn so the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_5_Dirs_1.txt" id="802-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_5_Dirs_1.txt" id="802-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_5_Dirs_1.txt" id="802-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_3_Dirs_1.txt" id="804-1">
	<nl lang="en"> go straight and all the way down the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_3_Dirs_1.txt" id="804-2">
	<nl lang="en"> turn a few times and then dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-1">
	<nl lang="en"> turn so to face the short yellow floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-3">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-4">
	<nl lang="en"> there should be only once choice, to turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-5">
	<nl lang="en"> do so and walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-6">
	<nl lang="en"> again no choice but to turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_3_Dirs_1.txt" id="805-7">
	<nl lang="en"> do so and walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_1_Dirs_1.txt" id="806-1">
	<nl lang="en"> position 1 is in the middle of the hall with the red brick floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-3">
	<nl lang="en"> go forward along the pink-flowered carpet hall two segments to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-4">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_5_Dirs_1.txt" id="807-6">
	<nl lang="en"> go forward three segments to an intersection with a bare concrete hall, passing a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-1">
	<nl lang="en"> face and move to the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-2">
	<nl lang="en"> turn left and move to the end of the aisle </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-3">
	<nl lang="en"> you will pass an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-4">
	<nl lang="en"> turn right to face the blue floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-5">
	<nl lang="en"> walk past the flowered carpet side alley </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-6">
	<nl lang="en"> and stop one alley past the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_3_Dirs_2.txt" id="808-7">
	<nl lang="en"> you are looking at an object and to your right is gray floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_4_Dirs_1.txt" id="809-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_4_Dirs_1.txt" id="809-2">
	<nl lang="en"> move along the brick past the lamp to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_4_Dirs_1.txt" id="809-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_4_Dirs_1.txt" id="809-4">
	<nl lang="en"> move along the flowers to the blue carpeted side alleys </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-1">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-2">
	<nl lang="en"> then go foward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-3">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-4">
	<nl lang="en"> go to the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-5">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_1_Dirs_1.txt" id="810-6">
	<nl lang="en"> go to the bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_7_Dirs_1.txt" id="812-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_7_Dirs_1.txt" id="812-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_7_Dirs_1.txt" id="812-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_7_Dirs_1.txt" id="812-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-1">
	<nl lang="en"> with your back to the wall move to the end of the rock floor alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-2">
	<nl lang="en"> to your left and right should be blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-4">
	<nl lang="en"> move past the stool to the alley before the sofa </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-5">
	<nl lang="en"> turn right you should see gray floor with the red brick on the next alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_7_Dirs_1.txt" id="813-6">
	<nl lang="en"> move to where the red brick alley is on your right and left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_3_Dirs_1.txt" id="814-1">
	<nl lang="en"> yellow hall to blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_3_Dirs_1.txt" id="814-2">
	<nl lang="en"> all the way down until one space before you see a bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_3_Dirs_1.txt" id="817-1">
	<nl lang="en"> three is in the long butterfly hallway, with blue floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_3_Dirs_1.txt" id="817-2">
	<nl lang="en"> at the intersection where the street with no furniture is at </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-1">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-2">
	<nl lang="en"> turn and move past the chair to the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-3">
	<nl lang="en"> turn and move to the end of the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-5">
	<nl lang="en"> you should see flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-6">
	<nl lang="en"> move past the hatrack to the end of this flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_4_Dirs_1.txt" id="819-7">
	<nl lang="en"> the side alleys have blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_4_Dirs_1.txt" id="822-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_4_Dirs_1.txt" id="822-2">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_4_Dirs_1.txt" id="822-3">
	<nl lang="en"> go forward four segments, passing the stool and chair, to the grassy hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_4_Dirs_1.txt" id="822-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_4_Dirs_1.txt" id="822-5">
	<nl lang="en"> go forward three segments to the intersection of the grassy and yellow-tiled hallways, passing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_1_Dirs_1.txt" id="824-1">
	<nl lang="en"> go to the pink flowered floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_1_Dirs_1.txt" id="824-2">
	<nl lang="en"> it is at the aesal </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_3_Dirs_1.txt" id="828-1">
	<nl lang="en"> straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_3_Dirs_1.txt" id="828-2">
	<nl lang="en"> then a left onto a grey hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_3_Dirs_1.txt" id="828-3">
	<nl lang="en"> then a left where grey and yellow floors intersect </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_5_3_Dirs_1.txt" id="828-4">
	<nl lang="en"> then all the way down a winding hall unitl you reach a dead end </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_2_Dirs_1.txt" id="831-1">
	<nl lang="en"> go down toward the longer end of the hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_2_Dirs_1.txt" id="831-2">
	<nl lang="en"> make a right at the pink foored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_2_Dirs_1.txt" id="831-3">
	<nl lang="en"> make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_2_Dirs_1.txt" id="831-4">
	<nl lang="en"> go foward two spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_5_Dirs_1.txt" id="832-1">
	<nl lang="en"> take the blue path towards the black bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_5_Dirs_1.txt" id="832-2">
	<nl lang="en"> at the coat rack take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_5_Dirs_1.txt" id="832-3">
	<nl lang="en"> the end of this hall is 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_4_Dirs_1.txt" id="835-1">
	<nl lang="en"> place your back to the easel and the sofa to your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_4_Dirs_1.txt" id="835-2">
	<nl lang="en"> move forward two alleys to the wall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_4_Dirs_1.txt" id="835-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_4_Dirs_1.txt" id="835-4">
	<nl lang="en"> you should see blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_4_Dirs_1.txt" id="835-5">
	<nl lang="en"> walk along the blue til you get to the alley with flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-2">
	<nl lang="en"> go forward one segment to the intersection with the grassy hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-4">
	<nl lang="en"> go forward to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_2_Dirs_1.txt" id="836-6">
	<nl lang="en"> go forward one segment to the empty corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_5_Dirs_1.txt" id="839-1">
	<nl lang="en"> go all the way down the blue floor until you see a coat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_5_Dirs_1.txt" id="839-2">
	<nl lang="en"> then take an immediate left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-2">
	<nl lang="en"> wlak forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-3">
	<nl lang="en"> turn right onto the pink hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_6_Dirs_1.txt" id="845-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-2">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-3">
	<nl lang="en"> go forward five segements to the intersection with the stone hall, passing a lamp and a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-5">
	<nl lang="en"> go forward two segments to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_2_Dirs_1.txt" id="848-6">
	<nl lang="en"> there is an easel one segment farther down this hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_5_Dirs_1.txt" id="849-1">
	<nl lang="en"> take the path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_5_Dirs_1.txt" id="849-2">
	<nl lang="en"> at the lamp, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_5_Dirs_1.txt" id="849-3">
	<nl lang="en"> at the next corner, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_5_Dirs_1.txt" id="849-4">
	<nl lang="en"> the very next intersection will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-1">
	<nl lang="en"> turn to face the short black hallway with the easel at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-2">
	<nl lang="en"> from this point, turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-3">
	<nl lang="en"> walk down the yellow floored hallway twice </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-4">
	<nl lang="en"> turn to the right and walk forward three times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-5">
	<nl lang="en"> you should be at the interection of the pink and red floors </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-6">
	<nl lang="en"> turn left and walk forward four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_1_Dirs_1.txt" id="854-7">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_1_Dirs_1.txt" id="856-1">
	<nl lang="en"> go to the aesal in the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-1">
	<nl lang="en"> move onto the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-2">
	<nl lang="en"> move to the blue carpet and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-3">
	<nl lang="en"> move to the corner and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-4">
	<nl lang="en"> move to the easel and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-5">
	<nl lang="en"> move along the wooden flooring and turn left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-6">
	<nl lang="en"> move to the lamp and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-7">
	<nl lang="en"> move to the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_2.txt" id="857-9">
	<nl lang="en"> turning left, you see a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_2_Dirs_1.txt" id="858-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_2_Dirs_1.txt" id="858-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_2_Dirs_1.txt" id="858-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_2_Dirs_1.txt" id="858-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-1">
	<nl lang="en"> turn to face the pink hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-4">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-5">
	<nl lang="en"> you should be at the end of this hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-7">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_3_Dirs_1.txt" id="859-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_7_Dirs_1.txt" id="862-1">
	<nl lang="en"> go forward one movement in the direction of the red floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_6_Dirs_1.txt" id="863-1">
	<nl lang="en"> with your back to the wall move forward to the chair and turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_6_Dirs_1.txt" id="863-2">
	<nl lang="en"> move to the right side alley with flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_6_Dirs_1.txt" id="863-3">
	<nl lang="en"> move down this and stop at the first alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_6_Dirs_1.txt" id="863-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_6_Dirs_1.txt" id="863-5">
	<nl lang="en"> move into the deadend </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_5_Dirs_1.txt" id="864-1">
	<nl lang="en"> go on the blue path towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_5_Dirs_1.txt" id="864-2">
	<nl lang="en"> at the very end of the hall, you will turn left towards the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_5_Dirs_1.txt" id="864-3">
	<nl lang="en"> at the easel, go right onto the wood path and the next intersection will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_2_Dirs_1.txt" id="866-1">
	<nl lang="en"> position 2 is at a corner between two halls with no tiles on the floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_2_Dirs_1.txt" id="866-2">
	<nl lang="en"> but butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-1">
	<nl lang="en"> turn so that the wall is on your left and to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-5">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-8">
	<nl lang="en"> you should be facing down a brown hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-9">
	<nl lang="en"> walk to the blue interseciton </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-10">
	<nl lang="en"> one space </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-11">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-12">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_4_Dirs_1.txt" id="868-13">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_7_Dirs_1.txt" id="870-1">
	<nl lang="en"> with your back to the wall at three move forward one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_7_Dirs_1.txt" id="870-2">
	<nl lang="en"> you should see red brick to your right and left and a lamp two alleys over to your left and an easel beyond that </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-8">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_5_Dirs_1.txt" id="871-9">
	<nl lang="en"> turn left walk forward three times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_6_Dirs_1.txt" id="875-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_6_Dirs_1.txt" id="875-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_6_Dirs_1.txt" id="875-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_6_Dirs_1.txt" id="875-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-1">
	<nl lang="en"> turn to face the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-5">
	<nl lang="en"> turn right walk forward three times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_5_7_Dirs_1.txt" id="876-7">
	<nl lang="en"> and walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_1_Dirs_1.txt" id="878-1">
	<nl lang="en"> go on the path towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_1_Dirs_1.txt" id="878-2">
	<nl lang="en"> at the coat rack, take a left onto the green path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_1_Dirs_1.txt" id="878-3">
	<nl lang="en"> go all the way down until you reach a chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_1_Dirs_1.txt" id="878-4">
	<nl lang="en"> at the chair, take a left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_1_Dirs_1.txt" id="878-5">
	<nl lang="en"> the very next intersection is 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-1">
	<nl lang="en"> take the green path to the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-2">
	<nl lang="en"> go left towards the lamp to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-3">
	<nl lang="en"> at the chair, take a right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-4">
	<nl lang="en"> at the blue path intersection, take a left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-5">
	<nl lang="en"> at the coat rack, take another left onto the plain cement </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_5_Dirs_1.txt" id="880-6">
	<nl lang="en"> at the end of this hall at the corner, you are at position 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_7_Dirs_1.txt" id="883-1">
	<nl lang="en"> turn to face the black floored hallway that is short and has the chair at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_7_Dirs_1.txt" id="883-2">
	<nl lang="en"> from this perspective, turn to your right and walk two spaces </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_2_Dirs_1.txt" id="885-1">
	<nl lang="en"> take the yellow path away from the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_2_Dirs_1.txt" id="885-2">
	<nl lang="en"> at the blue path intersection, take a right and follow the blue path to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_2_Dirs_1.txt" id="885-3">
	<nl lang="en"> here, take a left on the plain path towards the easel, and then a right onto the wood path at the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_2_Dirs_1.txt" id="885-4">
	<nl lang="en"> at the end of this hall, take a left towards the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_2_Dirs_1.txt" id="885-5">
	<nl lang="en"> once at the lamp, take a right to the very end of the hall and at the corner, this is 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_2_Dirs_1.txt" id="887-1">
	<nl lang="en"> stand with your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_2_Dirs_1.txt" id="887-2">
	<nl lang="en"> go to the right, toward the hall with the yellow hexagonal tile floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_2_Dirs_1.txt" id="887-3">
	<nl lang="en"> position 2 is the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_2_Dirs_1.txt" id="887-4">
	<nl lang="en"> i believe it is to your right </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-2">
	<nl lang="en"> move along the brick past the lamp to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-3">
	<nl lang="en"> turn right and walk along the flowered carpet until the left side alley is green octagon carpeting </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-4">
	<nl lang="en"> move to the end of this alley and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-5">
	<nl lang="en"> move past the chair to the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_3_Dirs_1.txt" id="889-6">
	<nl lang="en"> turn right and move into the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_6_Dirs_1.txt" id="892-1">
	<nl lang="en"> go all the way down the blue hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_6_Dirs_1.txt" id="892-2">
	<nl lang="en"> then find where the wooden floor and the yellow floor doesn't quite intersect </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_6_Dirs_1.txt" id="892-3">
	<nl lang="en"> but one movement forward and it will </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_4_Dirs_1.txt" id="904-1">
	<nl lang="en"> go on the path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_4_Dirs_1.txt" id="904-2">
	<nl lang="en"> at the lamp, take a left and at the next corner, go right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_4_Dirs_1.txt" id="904-3">
	<nl lang="en"> follow it towards the easel and at the easel take a left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_4_Dirs_1.txt" id="904-4">
	<nl lang="en"> at the intersection with the blue path, take a right onto the blue path and follow it towards the chair and past the coat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_4_Dirs_1.txt" id="904-5">
	<nl lang="en"> at the intersection with the yellow path, take a right onto the yellow path and go all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-1">
	<nl lang="en"> turn to face the brown floored hallway so that the chair is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-4">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_2_Dirs_1.txt" id="905-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_7_Dirs_1.txt" id="908-1">
	<nl lang="en"> go left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_7_Dirs_1.txt" id="908-2">
	<nl lang="en"> then stop when you look to the right and see a blue corridor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_4_Dirs_1.txt" id="910-1">
	<nl lang="en"> turn so that the wall is on your right side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_4_Dirs_1.txt" id="910-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_4_Dirs_1.txt" id="910-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_4_Dirs_1.txt" id="910-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_4_Dirs_1.txt" id="914-1">
	<nl lang="en"> face and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_4_Dirs_1.txt" id="914-2">
	<nl lang="en"> turn left and move to the next chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_4_Dirs_1.txt" id="914-3">
	<nl lang="en"> face the stone floored alley and move to the end of it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_1_4_Dirs_1.txt" id="914-4">
	<nl lang="en"> turn left and move down the octagon flooring to the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-2">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_3_2_Dirs_1.txt" id="915-10">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_6_1_Dirs_1.txt" id="919-1">
	<nl lang="en"> pos one is in the area with the pink floors, on the aesal </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-1">
	<nl lang="en"> go forward two segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-3">
	<nl lang="en"> go to the far end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-5">
	<nl lang="en"> go forward one segment to the intersection wth the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-6">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_5_Dirs_1.txt" id="923-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_7_Dirs_1.txt" id="925-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_7_Dirs_1.txt" id="925-2">
	<nl lang="en"> move along the brick floor past the lamp to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_7_Dirs_1.txt" id="925-3">
	<nl lang="en"> at the hatrack turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_7_Dirs_1.txt" id="925-4">
	<nl lang="en"> move along the flowered carpet two blocks </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_7_Dirs_1.txt" id="925-5">
	<nl lang="en"> the alley to your left should have green octagon carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-1">
	<nl lang="en"> face the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-4">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-6">
	<nl lang="en"> go forward two segments to the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-8">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-10">
	<nl lang="en"> go forward one segment to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-11">
	<nl lang="en"> turn left into this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-12">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-13">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_6_Dirs_1.txt" id="926-14">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_4_Dirs_1.txt" id="929-1">
	<nl lang="en"> go down toward the longer end of the hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_4_Dirs_1.txt" id="929-2">
	<nl lang="en"> 1st rt </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_4_Dirs_1.txt" id="929-3">
	<nl lang="en"> 1st lft </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_4_Dirs_1.txt" id="929-4">
	<nl lang="en"> 1st right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_4_Dirs_1.txt" id="929-5">
	<nl lang="en"> keep going till the pink floored area is on your right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-1">
	<nl lang="en"> position 5 is in the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-2">
	<nl lang="en"> it is a hall segment that is between pictures of butterflies </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-3">
	<nl lang="en"> at the closer end of the hall there is an intersection with a bare concrete hall </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-4">
	<nl lang="en"> in the opposite direction, one segment away, is an intersection containing an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-5">
	<nl lang="en"> possibly, place your back to the 't' intersection walk forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-6">
	<nl lang="en"> this intersection conatins an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_5_Dirs_1.txt" id="933-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_5_Dirs_1.txt" id="936-1">
	<nl lang="en"> take the red brick path towards the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_5_Dirs_1.txt" id="936-2">
	<nl lang="en"> here, at the end of the hall, take a right to the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_5_Dirs_1.txt" id="936-3">
	<nl lang="en"> at the blue path, take a left towards the coat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_5_Dirs_1.txt" id="936-4">
	<nl lang="en"> at the coat rack, take a right onto the plain cement path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_5_Dirs_1.txt" id="936-5">
	<nl lang="en"> at the end of the hall in the corner, you are at position 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_3_Dirs_1.txt" id="940-1">
	<nl lang="en"> take the wood path towards the easel and at the easel, go left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_3_Dirs_1.txt" id="940-2">
	<nl lang="en"> at the next corner, take a right onto the blue path and follow it towards the chair </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_3_Dirs_1.txt" id="940-3">
	<nl lang="en"> one intersection past the chair is position 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_4_Dirs_1.txt" id="942-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_4_Dirs_1.txt" id="942-2">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_4_Dirs_1.txt" id="942-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_4_Dirs_1.txt" id="942-4">
	<nl lang="en"> walk forward three times or until you are at the intersection of green and yellow </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-1">
	<nl lang="en"> turn to face the green halllway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-2">
	<nl lang="en"> walk three times forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-4">
	<nl lang="en"> walk forward six times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 6  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_5_Dirs_1.txt" id="944-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_3_Dirs_1.txt" id="946-1">
	<nl lang="en"> move forward to the hatrack and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_3_Dirs_1.txt" id="946-2">
	<nl lang="en"> move to the next alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_3_Dirs_1.txt" id="946-3">
	<nl lang="en"> to your right is grey flooring and in front is a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_6_Dirs_1.txt" id="948-1">
	<nl lang="en"> turn to face the long black hallway witht he lamp at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_6_Dirs_1.txt" id="948-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_1_Dirs_1.txt" id="949-1">
	<nl lang="en"> go foward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_1_Dirs_1.txt" id="949-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_1_Dirs_1.txt" id="949-3">
	<nl lang="en"> go down this ahllway until you see the fish ahllways </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_5_1_Dirs_1.txt" id="949-4">
	<nl lang="en"> find the aesal in this area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-3">
	<nl lang="en"> turn left walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-5">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-6">
	<nl lang="en"> turn left walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_5_Dirs_1.txt" id="950-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_2_Dirs_1.txt" id="951-1">
	<nl lang="en"> with your back to the wall turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_2_Dirs_1.txt" id="951-2">
	<nl lang="en"> move forward past the lamp and the hatrack until you get to the stone floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_2_Dirs_1.txt" id="951-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_2_Dirs_1.txt" id="951-4">
	<nl lang="en"> move along the stone floor until you get to the octagon side alleys </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_2_Dirs_1.txt" id="951-5">
	<nl lang="en"> you are one block away from an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_4_Dirs_1.txt" id="954-1">
	<nl lang="en"> it's at the end of the yellow fish hall, with yellow floors, dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_1_Dirs_1.txt" id="955-1">
	<nl lang="en"> go down the longer end of the pink floored area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_1_Dirs_1.txt" id="955-2">
	<nl lang="en"> make th first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_1_Dirs_1.txt" id="955-3">
	<nl lang="en"> go down first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_7_1_Dirs_1.txt" id="955-4">
	<nl lang="en"> go down till the bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_6_Dirs_1.txt" id="956-1">
	<nl lang="en"> take the pink path to the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_6_Dirs_1.txt" id="956-2">
	<nl lang="en"> go right on the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_6_Dirs_1.txt" id="956-3">
	<nl lang="en"> take a right, next, onto the black path at that juncture </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_6_Dirs_1.txt" id="956-4">
	<nl lang="en"> 6 should be one stop down </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-1">
	<nl lang="en"> move forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-3">
	<nl lang="en"> turn right onto the blue carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-4">
	<nl lang="en"> take the left alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-5">
	<nl lang="en"> follow it around until you can see a lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-6">
	<nl lang="en"> if you continue on you will see a hat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-7">
	<nl lang="en"> position yourself where you can see both the lamp and the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_2_Dirs_1.txt" id="959-8">
	<nl lang="en"> there should be butterfly images on the side at this point </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_7_Dirs_1.txt" id="961-1">
	<nl lang="en"> go straight a few movements </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_7_Dirs_1.txt" id="961-2">
	<nl lang="en"> then go to the red floor until you can look to the left and see a blue corridor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_5_Dirs_1.txt" id="966-1">
	<nl lang="en"> head down toward the futon/bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_5_Dirs_1.txt" id="966-2">
	<nl lang="en"> keep going </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_5_Dirs_1.txt" id="966-3">
	<nl lang="en"> till you are at the hat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_5_Dirs_1.txt" id="966-4">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_3_5_Dirs_1.txt" id="966-5">
	<nl lang="en"> pos 5 is in that corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_6_Dirs_1.txt" id="968-1">
	<nl lang="en"> look for the rose floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_6_Dirs_1.txt" id="968-2">
	<nl lang="en"> position 6 is at a dead end, a branch off from the rose floors, and has two pictures of the eiffel tower on it </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-1">
	<nl lang="en"> go forward one segment to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-3">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-5">
	<nl lang="en"> go to the end of the hall, one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-7">
	<nl lang="en"> follow this hall to the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-8">
	<nl lang="en"> this intersection will contain an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-10">
	<nl lang="en"> go forward two segments to a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-11">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-12">
	<nl lang="en"> go forward one segment to the intersection containing the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-13">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_6_2_Dirs_1.txt" id="971-14">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_1_Dirs_1.txt" id="972-1">
	<nl lang="en"> go left until you come to the four way intersection of the red and rose floors, with an easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Intersection ,  type= 'Struct' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_3_Dirs_1.txt" id="973-1">
	<nl lang="en"> head toward the butterfly areas </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_3_Dirs_1.txt" id="973-2">
	<nl lang="en"> find the long butterfly hallway, with perpendicular streets ending at its intersection with this ahllway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_7_3_Dirs_1.txt" id="973-3">
	<nl lang="en"> go to the intersection within which, whne you look down this street you see no furniture </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-1">
	<nl lang="en"> face and move to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-2">
	<nl lang="en"> turn left and walk along the grass to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-3">
	<nl lang="en"> turn left at the chair and turn right at the next interesection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-4">
	<nl lang="en"> turn left at the sofa chair and right at the next sofa chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-5">
	<nl lang="en"> move along the stone flooring to the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_4_Dirs_1.txt" id="976-6">
	<nl lang="en"> turn left and move along the octagons past the hatrack to the end of this alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_3_Dirs_1.txt" id="978-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_3_Dirs_1.txt" id="978-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_3_Dirs_1.txt" id="978-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_3_Dirs_1.txt" id="978-4">
	<nl lang="en"> go forward two segments, passing the easel in the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_3_Dirs_1.txt" id="978-5">
	<nl lang="en"> position 3 is the empty section between the two pieces of furniture in this hall </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-1">
	<nl lang="en"> facing the long aisle turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-2">
	<nl lang="en"> walk to the blue carpet and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-3">
	<nl lang="en"> walk down this aisle to the flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-5">
	<nl lang="en"> there is an easel in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_1_Dirs_1.txt" id="979-6">
	<nl lang="en"> walk to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_4_Dirs_1.txt" id="982-1">
	<nl lang="en"> with your back to the easel walk forward two blocks until you get to the blue carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_4_Dirs_1.txt" id="982-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_4_Dirs_1.txt" id="982-3">
	<nl lang="en"> move forward one block until you get to the flower carpeted side alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_7_Dirs_1.txt" id="984-1">
	<nl lang="en"> go towards the chair on the blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_7_Dirs_1.txt" id="984-2">
	<nl lang="en"> at the chair, go left towards teh stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_7_Dirs_1.txt" id="984-3">
	<nl lang="en"> when you reach the stool, you are at postion 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-1">
	<nl lang="en"> foward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-2">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-3">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-4">
	<nl lang="en"> all the way till almost the end </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-5">
	<nl lang="en"> make a laft into fishy area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_6_4_Dirs_1.txt" id="985-6">
	<nl lang="en"> go to end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-2">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-3">
	<nl lang="en"> go forward along the brick hall three segments to the intersection with the pink-flowered carpet hall, passing a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-4">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-6">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_4_Dirs_1.txt" id="987-7">
	<nl lang="en"> there will be a bench two segments to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_2_Dirs_1.txt" id="988-1">
	<nl lang="en"> take the red brick path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_2_Dirs_1.txt" id="988-2">
	<nl lang="en"> at the black road intersection, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_2_Dirs_1.txt" id="988-3">
	<nl lang="en"> follow the black until you meet up with a black easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-1">
	<nl lang="en"> follow this hallway out </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-2">
	<nl lang="en"> keep going till the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-3">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-4">
	<nl lang="en"> keep going </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-5">
	<nl lang="en"> make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-6">
	<nl lang="en"> keep going </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-7">
	<nl lang="en"> make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_1_Dirs_1.txt" id="989-8">
	<nl lang="en"> keep going until the bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-1">
	<nl lang="en"> face the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-2">
	<nl lang="en"> follow it to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-3">
	<nl lang="en"> turn right in to this hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-4">
	<nl lang="en"> when you get to the intersection containing the easel, the perpendicular hall will have brown brick flooring, turn to the left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-5">
	<nl lang="en"> follow the brown brick floored hall to the second to last intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-6">
	<nl lang="en"> the intersection in front of you should contain a chair and turn to the right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-7">
	<nl lang="en"> the intersection to your right should be empty, though you should see a blue-tiled hallway to either side of it </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_7_Dirs_1.txt" id="990-8">
	<nl lang="en"> there will be pictures of butterflies on the walls in the hall to your right and pictures of the eiffel tower in the hall to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_1_Dirs_1.txt" id="994-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_1_Dirs_1.txt" id="994-2">
	<nl lang="en"> move to the next alley and turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_1_Dirs_1.txt" id="994-3">
	<nl lang="en"> move along the wooden floor to the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_1_Dirs_1.txt" id="994-4">
	<nl lang="en"> in front of you is a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-3">
	<nl lang="en"> go forward along the brick hall away from the lamp one segment </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-5">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_1_Dirs_1.txt" id="996-6">
	<nl lang="en"> there is a bench in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_1_Dirs_1.txt" id="999-1">
	<nl lang="en"> take the blue path all the way down to the pink path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_1_Dirs_1.txt" id="999-2">
	<nl lang="en"> take a right onto the pink path and at the black easel, the brick path intersection, you are at 1 </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-1">
	<nl lang="en"> go towad the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-2">
	<nl lang="en"> 1st right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-3">
	<nl lang="en"> 1st left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-4">
	<nl lang="en"> two spaces foward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-5">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_6_Dirs_1.txt" id="1000-6">
	<nl lang="en"> one space foward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_6_Dirs_1.txt" id="1001-1">
	<nl lang="en"> go all the way down the winding hallway </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_6_Dirs_1.txt" id="1001-2">
	<nl lang="en"> then 2 movements to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_3_4_Dirs_1.txt" id="1003-1">
	<nl lang="en"> pos 4 is at the corner of the grass floor and yellow floor, with fish on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_3_Dirs_1.txt" id="1005-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_3_Dirs_1.txt" id="1006-1">
	<nl lang="en"> foward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_3_Dirs_1.txt" id="1006-2">
	<nl lang="en"> right into blue floored hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_3_Dirs_1.txt" id="1006-3">
	<nl lang="en"> keep going </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_3_Dirs_1.txt" id="1006-4">
	<nl lang="en"> make a rt into the pink flowered floor hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_3_Dirs_1.txt" id="1006-5">
	<nl lang="en"> make 1st rt into dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-1">
	<nl lang="en"> take the blue path towards the chair to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-2">
	<nl lang="en"> here, go left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-3">
	<nl lang="en"> at the easel, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-4">
	<nl lang="en"> go to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-5">
	<nl lang="en"> take a left, follow the path, and then take a right at the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-6">
	<nl lang="en"> again, follow the path and take a left at the corner, at the end of this hall, take a left onto the green path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-7">
	<nl lang="en"> go several intersections down to the plain cement intersection and take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_3_1_Dirs_1.txt" id="1008-8">
	<nl lang="en"> the very next intersection with the wood path is position 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_4_Dirs_1.txt" id="1011-1">
	<nl lang="en"> take the blue path all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_4_Dirs_1.txt" id="1011-2">
	<nl lang="en"> at the corner here, turn right onto the green path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_4_Dirs_1.txt" id="1011-3">
	<nl lang="en"> once again, go to the very end of the hall and at the corner of the green path and the yellow path, you are at 4 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_4_Dirs_1.txt" id="1012-1">
	<nl lang="en"> position 4 is at the intersection of the blue and rose floored halls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_2_Dirs_1.txt" id="1014-1">
	<nl lang="en"> one movement to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_2_Dirs_1.txt" id="1014-2">
	<nl lang="en"> take a left down the hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_1_2_Dirs_1.txt" id="1014-4">
	<nl lang="en"> but 2 is at the grey hallway and yellow hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_3_Dirs_1.txt" id="1015-1">
	<nl lang="en"> make a left toward the longer end of the hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_3_Dirs_1.txt" id="1015-2">
	<nl lang="en"> make a right at the pink floored are to your right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_3_Dirs_1.txt" id="1015-3">
	<nl lang="en"> go foward then make a left keep going down this hallway to you get to the end </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-1">
	<nl lang="en"> move to the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-2">
	<nl lang="en"> move to the blue carpet and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-3">
	<nl lang="en"> move to the corner and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-4">
	<nl lang="en"> move to the easel and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-5">
	<nl lang="en"> you should be facing wooden floor and butterflies on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_5_Dirs_1.txt" id="1016-6">
	<nl lang="en"> move between the butterfly pictures </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-5">
	<nl lang="en"> turn left walk forward three times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_4_Dirs_1.txt" id="1025-7">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-1">
	<nl lang="en"> at seven face, from looking at the long alley turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-2">
	<nl lang="en"> move to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-4">
	<nl lang="en"> you should see a chair and then a hat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-5">
	<nl lang="en"> move to the hat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-6">
	<nl lang="en"> turn left at the hat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-7">
	<nl lang="en"> move to the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_5_Dirs_1.txt" id="1026-8">
	<nl lang="en"> you should see gray floor to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_5_Dirs_1.txt" id="1029-1">
	<nl lang="en"> turn and face the blue floored hallway so that the pink floored hallway is on your left and the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_5_Dirs_1.txt" id="1029-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_5_Dirs_1.txt" id="1029-3">
	<nl lang="en"> turn left and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_5_Dirs_1.txt" id="1029-4">
	<nl lang="en"> you should be facing a wall with red floors on both sides </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_5_Dirs_1.txt" id="1029-5">
	<nl lang="en"> turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_5_Dirs_1.txt" id="1030-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_5_Dirs_1.txt" id="1030-2">
	<nl lang="en"> move to the brick floor and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_5_Dirs_1.txt" id="1030-3">
	<nl lang="en"> move forward one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_5_Dirs_1.txt" id="1030-4">
	<nl lang="en"> the alley to your left has grey floor and you see a lamp in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-1">
	<nl lang="en"> turn so that the wall is on your right and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-4">
	<nl lang="en"> walk forward maybe four times and you should be at the intersection of blue and brown </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_5_6_Dirs_1.txt" id="1031-7">
	<nl lang="en"> if there is a wall on your right side then you are there </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-1">
	<nl lang="en"> go towards the lamp and at the corner, take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-2">
	<nl lang="en"> go straight again, and at the next corner, take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-3">
	<nl lang="en"> go down to the easel, and take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-4">
	<nl lang="en"> follow this path straight until you see the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-5">
	<nl lang="en"> take a right onto the blue path and go straight towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_2_3_Dirs_1.txt" id="1032-6">
	<nl lang="en"> one intersection before the coat rack will be 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_5_Dirs_1.txt" id="1033-1">
	<nl lang="en"> find the blue hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_5_Dirs_1.txt" id="1033-2">
	<nl lang="en"> go all the way down until you hit a spot with a coat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_5_Dirs_1.txt" id="1033-3">
	<nl lang="en"> then tke one movement to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-3">
	<nl lang="en"> go forward along the brick hall five segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-4">
	<nl lang="en"> you will pass a lamp and a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-6">
	<nl lang="en"> go forward along the stone hall one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_6_Dirs_1.txt" id="1039-7">
	<nl lang="en"> there will be a bench to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_1_Dirs_1.txt" id="1041-1">
	<nl lang="en"> move forward to the hat rack and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_1_Dirs_1.txt" id="1041-2">
	<nl lang="en"> move along the blue carpet past the sofa stool and chair til the alley with the flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_1_Dirs_1.txt" id="1041-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_1_Dirs_1.txt" id="1041-4">
	<nl lang="en"> move forward one alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_1_Dirs_1.txt" id="1041-5">
	<nl lang="en"> you should be in the same square as an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_7_Dirs_1.txt" id="1046-1">
	<nl lang="en"> look for grey tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_7_Dirs_1.txt" id="1046-2">
	<nl lang="en"> position 7 is in the middle of the hall, with a stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-1">
	<nl lang="en"> turn so the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_2_Dirs_1.txt" id="1048-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_1_Dirs_1.txt" id="1051-1">
	<nl lang="en"> follow the blue-tiled hallway away form the bench and hatrack toward the pictures of not-butterflies </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_1_Dirs_1.txt" id="1051-2">
	<nl lang="en"> i believe they are those lovely yellow fish </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_1_Dirs_1.txt" id="1051-3">
	<nl lang="en"> turn right into the hall with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_1_Dirs_1.txt" id="1051-4">
	<nl lang="en"> position 1 is the intersection containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-1">
	<nl lang="en"> only one way to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-5">
	<nl lang="en"> turn left walk forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_7_Dirs_1.txt" id="1054-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_3_Dirs_1.txt" id="1055-1">
	<nl lang="en"> with your back to the wall move to the chair and turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_3_Dirs_1.txt" id="1055-2">
	<nl lang="en"> move to the next alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_3_Dirs_1.txt" id="1055-3">
	<nl lang="en"> in front is a hatrack and left is grey flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_1_Dirs_1.txt" id="1057-1">
	<nl lang="en"> go down toward the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_1_Dirs_1.txt" id="1057-2">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_1_Dirs_1.txt" id="1057-3">
	<nl lang="en"> then go down </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_1_Dirs_1.txt" id="1057-4">
	<nl lang="en"> make a right go one space foward </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_5_Dirs_1.txt" id="1065-1">
	<nl lang="en"> place your back to the easel and move forward two alleys along the stone floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_5_Dirs_1.txt" id="1065-2">
	<nl lang="en"> turn left and move along the brick floor past the hatrack and one alley past the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_5_Dirs_1.txt" id="1065-3">
	<nl lang="en"> to your right is a short alley with grey carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_3_Dirs_1.txt" id="1066-1">
	<nl lang="en"> move to the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_3_Dirs_1.txt" id="1066-2">
	<nl lang="en"> move to the blue carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_3_Dirs_1.txt" id="1066-3">
	<nl lang="en"> move along the blue one alley past the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_3_Dirs_1.txt" id="1066-4">
	<nl lang="en"> in front is a hatrack and left is grey flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_1_Dirs_1.txt" id="1067-1">
	<nl lang="en"> take the black path until you come to an intersection with red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_1_Dirs_1.txt" id="1067-2">
	<nl lang="en"> go left onto the red brick path and go all the way down to where the butterflies are on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_1_Dirs_1.txt" id="1067-3">
	<nl lang="en"> at the intersection of the red brick and wood path, go left onto the wood path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_1_Dirs_1.txt" id="1067-4">
	<nl lang="en"> 2 sections down, you will see a bench </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-1">
	<nl lang="en"> orient yourself in the stone hall facing the end of the hall containing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-2">
	<nl lang="en"> the bench in the bare concrete hall should be to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-3">
	<nl lang="en"> go forward one segment to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-5">
	<nl lang="en"> go forward one segment to the intersection with the bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-7">
	<nl lang="en"> go forward two sections, passing the chair, to the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_3_Dirs_1.txt" id="1068-9">
	<nl lang="en"> go forward one segment to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_1_Dirs_1.txt" id="1069-1">
	<nl lang="en"> go straight on the pink flowered path to the intersection of the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_1_Dirs_1.txt" id="1069-2">
	<nl lang="en"> take a left onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_1_Dirs_1.txt" id="1069-3">
	<nl lang="en"> go all the way down until two sections past the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_1_Dirs_1.txt" id="1069-4">
	<nl lang="en"> take a left here at the intersection of the wood </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_1_Dirs_1.txt" id="1069-5">
	<nl lang="en"> go one section down to the bench and you are at position 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_5_Dirs_1.txt" id="1072-1">
	<nl lang="en"> follow the grassy hall three segments to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_5_Dirs_1.txt" id="1072-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_5_Dirs_1.txt" id="1072-3">
	<nl lang="en"> follow the blue-tiled hall six segments, passing the chair, stool and bench, to the intersection containing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 6  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_5_Dirs_1.txt" id="1072-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_5_Dirs_1.txt" id="1072-5">
	<nl lang="en"> go one segment forward to the corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_2_Dirs_1.txt" id="1073-1">
	<nl lang="en"> at four face the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_2_Dirs_1.txt" id="1073-2">
	<nl lang="en"> move to the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_2_Dirs_1.txt" id="1073-3">
	<nl lang="en"> you should be in the same square as an easel and rock flooring to your right and left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_6_Dirs_1.txt" id="1076-1">
	<nl lang="en"> take the yellow path to the wood path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_6_Dirs_1.txt" id="1076-2">
	<nl lang="en"> here, go left onto the wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_2_6_Dirs_1.txt" id="1076-3">
	<nl lang="en"> when you reach an intersection with plain cement and their are eiffel towers on the walls of the wood path and fish on the walls of the plain path, you are at 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_3_Dirs_1.txt" id="1078-1">
	<nl lang="en"> go three segments down the grassy hall to the blue-tiled hall, passing the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_3_Dirs_1.txt" id="1078-2">
	<nl lang="en"> turn left into the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_3_Dirs_1.txt" id="1078-3">
	<nl lang="en"> follow it four segments to the intersection with the bare concrete hall, passing the chair and stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-2">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-3">
	<nl lang="en"> this contains a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-5">
	<nl lang="en"> go forward three segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-7">
	<nl lang="en"> go forward one segment to the blue-tiled hall intersection </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-8">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-9">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-10">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-12">
	<nl lang="en"> position 5 is in the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_5_Dirs_1.txt" id="1079-13">
	<nl lang="en"> it is a hall section between the two sections of butterfly pictures </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-1">
	<nl lang="en"> with your back to the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-3">
	<nl lang="en"> move forward one block and turn right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-4">
	<nl lang="en"> move past the lamp and one block past the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_1_7_Dirs_1.txt" id="1080-6">
	<nl lang="en"> move forward two blocks </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_7_Dirs_1.txt" id="1082-1">
	<nl lang="en"> turn so the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_7_Dirs_1.txt" id="1082-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_1_Dirs_1.txt" id="1086-1">
	<nl lang="en"> from four face the octagon carpet and move forward one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_1_Dirs_1.txt" id="1086-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_1_Dirs_1.txt" id="1086-3">
	<nl lang="en"> you should be facing flowered carpet and an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_1_Dirs_1.txt" id="1086-4">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_4_Dirs_1.txt" id="1087-1">
	<nl lang="en"> take the path straight with the fish on the walls </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_4_Dirs_1.txt" id="1087-2">
	<nl lang="en"> go all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_4_Dirs_1.txt" id="1087-3">
	<nl lang="en"> you should meet here with the green path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_6_4_Dirs_1.txt" id="1087-4">
	<nl lang="en"> go right onto the green path to the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_5_Dirs_1.txt" id="1088-1">
	<nl lang="en"> turn around </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_5_Dirs_1.txt" id="1088-2">
	<nl lang="en"> go one space foward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_5_Dirs_1.txt" id="1088-3">
	<nl lang="en"> make a right tinto butterfly walled area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_5_Dirs_1.txt" id="1088-4">
	<nl lang="en"> go down three spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-1">
	<nl lang="en"> go forward into the pink-flowered carpet hall one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-2">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-4">
	<nl lang="en"> go forward four segments </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-5">
	<nl lang="en"> you will pass the bare concrete hall whose intersection contains the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_5_Dirs_1.txt" id="1097-6">
	<nl lang="en"> the following 't' intersection will be empty as will the intersecting bare concrete hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_3_Dirs_1.txt" id="1099-1">
	<nl lang="en"> blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_3_Dirs_1.txt" id="1099-2">
	<nl lang="en"> pos 3 in between 2 furniture </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_6_Dirs_1.txt" id="1100-1">
	<nl lang="en"> blue hall to grassy hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_6_Dirs_1.txt" id="1100-2">
	<nl lang="en"> grassy hall to yellow hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_6_Dirs_1.txt" id="1100-3">
	<nl lang="en"> yellow hall to wooden hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_7_6_Dirs_1.txt" id="1100-4">
	<nl lang="en"> then one space forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_1_Dirs_1.txt" id="1101-1">
	<nl lang="en"> position 1 is in the middle of a red brick floored room </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-3">
	<nl lang="en"> turn left walk forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-4">
	<nl lang="en"> turn left walk forward three times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-7">
	<nl lang="en"> turn left walk forward four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-8">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_1_Dirs_1.txt" id="1104-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_3_Dirs_1.txt" id="1107-1">
	<nl lang="en"> position three is located in the butterfly area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_6_Dirs_1.txt" id="1108-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_6_Dirs_1.txt" id="1108-2">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_6_Dirs_1.txt" id="1108-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_5_6_Dirs_1.txt" id="1108-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_1_Dirs_1.txt" id="1112-1">
	<nl lang="en"> turn so that the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_1_Dirs_1.txt" id="1112-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_1_Dirs_1.txt" id="1112-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_1_Dirs_1.txt" id="1112-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_1_Dirs_1.txt" id="1112-5">
	<nl lang="en"> if you are at the intersection of red and pink and there is a painting thing, you are there </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_4_Dirs_1.txt" id="1114-1">
	<nl lang="en"> turn to face the short red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_4_Dirs_1.txt" id="1114-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_4_Dirs_1.txt" id="1114-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_4_Dirs_1.txt" id="1114-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_5_Dirs_1.txt" id="1116-1">
	<nl lang="en"> go up the hall </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_5_Dirs_1.txt" id="1116-2">
	<nl lang="en"> turn right into the wood floored hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_5_Dirs_1.txt" id="1116-3">
	<nl lang="en"> position 5 is in the middle </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_2_Dirs_1.txt" id="1117-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_2_Dirs_1.txt" id="1117-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_2_Dirs_1.txt" id="1117-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_2_Dirs_1.txt" id="1117-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_2_Dirs_1.txt" id="1117-5">
	<nl lang="en"> turn left walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_6_Dirs_1.txt" id="1118-1">
	<nl lang="en"> yellow hall down to the wooden floor intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_6_Dirs_1.txt" id="1118-2">
	<nl lang="en"> then one movement forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_7_Dirs_1.txt" id="1119-1">
	<nl lang="en"> go forward one movement </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_7_Dirs_1.txt" id="1119-2">
	<nl lang="en"> then take a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_7_Dirs_1.txt" id="1119-3">
	<nl lang="en"> then go all the way down until you get to the yellow and rose floor intersection </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_3_Dirs_1.txt" id="1120-1">
	<nl lang="en"> position 3 is in the middle of the blue tiled floor, in between the coat rack and a chair of some sort </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-1">
	<nl lang="en"> face away from the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-2">
	<nl lang="en"> go forward one segment to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-4">
	<nl lang="en"> go forward one segment to the intersection with the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_5_2_Dirs_1.txt" id="1123-6">
	<nl lang="en"> go forward one segment to the empty corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_1_Dirs_1.txt" id="1125-1">
	<nl lang="en"> move to the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_1_Dirs_1.txt" id="1125-2">
	<nl lang="en"> make a rt </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_1_Dirs_1.txt" id="1125-3">
	<nl lang="en"> go down make a left go down make left stop at the bench </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-1">
	<nl lang="en"> go toward the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-2">
	<nl lang="en"> having covered that one segment, turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-3">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-5">
	<nl lang="en"> go forward two segments to the intersection with the easel </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-9">
	<nl lang="en"> turn right into the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-10">
	<nl lang="en"> pass the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-12">
	<nl lang="en"> the stool is key </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-13">
	<nl lang="en"> position 7 is the intersection of the stone hall with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-14">
	<nl lang="en"> it contains a stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_2_7_Dirs_1.txt" id="1126-15">
	<nl lang="en"> at the other end of the bare concrete hall is the blue-tiled hall </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_3_Dirs_1.txt" id="1127-1">
	<nl lang="en"> with your back to the wall, turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_3_Dirs_1.txt" id="1127-2">
	<nl lang="en"> move to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_3_Dirs_1.txt" id="1127-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_3_Dirs_1.txt" id="1127-4">
	<nl lang="en"> move past the stool until you get to the intersection where gray floor is to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_3_Dirs_1.txt" id="1127-5">
	<nl lang="en"> there should be a sofa in front of you and a hat rack beyond that </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-1">
	<nl lang="en"> orient yourself along the stone hall with your back away from the end of the hall containing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-2">
	<nl lang="en"> go forward three segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-3">
	<nl lang="en"> there is a lamp in this interesection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-5">
	<nl lang="en"> go forward two segments, passing the chair, to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_4_Dirs_1.txt" id="1129-6">
	<nl lang="en"> there is a bench two segments farther down the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_1_Dirs_1.txt" id="1132-1">
	<nl lang="en"> go down the rose hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_1_Dirs_1.txt" id="1132-2">
	<nl lang="en"> then down the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_1_Dirs_1.txt" id="1132-3">
	<nl lang="en"> then take a left onto the wood hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_4_1_Dirs_1.txt" id="1132-4">
	<nl lang="en"> there is also a bench there </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_5_1_Dirs_1.txt" id="1141-1">
	<nl lang="en"> go to the shorter end of the hallway make a left go till the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_6_Dirs_1.txt" id="1142-1">
	<nl lang="en"> follow the blue path until you come to an intersection with a wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_6_Dirs_1.txt" id="1142-2">
	<nl lang="en"> take the wood path to the right and follow it until you see pictures of the eiffel tower on the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_6_Dirs_1.txt" id="1142-3">
	<nl lang="en"> when you get to the intersection with fish on the wall to your right, and eiffel towers on your path, this is position 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-1">
	<nl lang="en"> turn to face the pink hallway so that the painting easel is on your back left side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-4">
	<nl lang="en"> you should be facing the blue hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-5">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_5_Dirs_1.txt" id="1143-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_7_Dirs_1.txt" id="1145-1">
	<nl lang="en"> go all the way down the winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_7_Dirs_1.txt" id="1145-4">
	<nl lang="en"> it's at the intersection of the rose hall and the yellow hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-1">
	<nl lang="en"> start facing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-2">
	<nl lang="en"> walk forward and turn left at the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-3">
	<nl lang="en"> there should be blue carpet on the first alley </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-4">
	<nl lang="en"> walk to that and turn right </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-5">
	<nl lang="en"> you should see an alley to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-6">
	<nl lang="en"> take it </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-7">
	<nl lang="en"> the carpet has roses </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_6_Dirs_1.txt" id="1146-8">
	<nl lang="en"> go down the first alley to your right and stop at the end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-1">
	<nl lang="en"> go towards the pink path intersection </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-2">
	<nl lang="en"> once here, take a left onto the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-3">
	<nl lang="en"> at the next intersection, take a left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-4">
	<nl lang="en"> take the blue path towards teh chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-5">
	<nl lang="en"> at the chair, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_7_Dirs_1.txt" id="1147-6">
	<nl lang="en"> the next intersection is 7 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_5_Dirs_1.txt" id="1149-1">
	<nl lang="en"> down the long butterfly hallway, with blue walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_5_Dirs_1.txt" id="1149-2">
	<nl lang="en"> make a left at the hat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_2_5_Dirs_1.txt" id="1149-3">
	<nl lang="en"> pos 5 is in this corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-2">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_3_7_Dirs_1.txt" id="1150-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-1">
	<nl lang="en"> face the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-4">
	<nl lang="en"> go forward two segments, passing a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-6">
	<nl lang="en"> you are now facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-7">
	<nl lang="en"> go forward one segment to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-9">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_6_Dirs_1.txt" id="1153-10">
	<nl lang="en"> there is a bench to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_6_Dirs_1.txt" id="1155-1">
	<nl lang="en"> face the lamp and move to it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_6_Dirs_1.txt" id="1155-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_6_Dirs_1.txt" id="1155-3">
	<nl lang="en"> move to the alley with the brown wooden floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_6_Dirs_1.txt" id="1155-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_6_Dirs_1.txt" id="1155-5">
	<nl lang="en"> move forward one block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-1">
	<nl lang="en"> face and move to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-3">
	<nl lang="en"> move to the next chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-4">
	<nl lang="en"> move to the next alley and turn left </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-5">
	<nl lang="en"> you see a chair and grass side alleys </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-6">
	<nl lang="en"> move to the chair and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-7">
	<nl lang="en"> walk along the grass to the hatrack and turn right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-8">
	<nl lang="en"> move to the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_2_Dirs_1.txt" id="1160-9">
	<nl lang="en"> from this corner you can view a lamp to your right and the hatrack you just came from </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_4_Dirs_1.txt" id="1162-1">
	<nl lang="en"> with your back to the wall, turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_4_Dirs_1.txt" id="1162-2">
	<nl lang="en"> you see green carpet w/ octagons </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_4_Dirs_1.txt" id="1162-3">
	<nl lang="en"> turn onto this carpet and move forward as far as you can </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_2_Dirs_1.txt" id="1163-1">
	<nl lang="en"> follow the pnk floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_2_Dirs_1.txt" id="1163-2">
	<nl lang="en"> go down till the fish hallway on your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_2_Dirs_1.txt" id="1163-3">
	<nl lang="en"> go down two spaces </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_1_Dirs_1.txt" id="1164-1">
	<nl lang="en"> look for a spot where the red and rose floors intersect four ways, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Intersection ,  type= 'Struct' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_1_Dirs_1.txt" id="1166-1">
	<nl lang="en"> go up the hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_5_1_Dirs_1.txt" id="1166-2">
	<nl lang="en"> position 1 is in the middle of the red brick floored room </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_6_Dirs_1.txt" id="1167-1">
	<nl lang="en"> take the red brick path towards the lamp all the way down to the intersectino of the black path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_5_6_Dirs_1.txt" id="1167-2">
	<nl lang="en"> take this black path until you reach the intersection with the white cement </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_3_Dirs_1.txt" id="1169-1">
	<nl lang="en"> grassy hall to blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_3_Dirs_1.txt" id="1169-2">
	<nl lang="en"> left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_3_Dirs_1.txt" id="1169-3">
	<nl lang="en"> then all the way down until you get between the bench and coat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-1">
	<nl lang="en"> orient yourself along the stone hallway with the end containing the easel to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-2">
	<nl lang="en"> the bench in the bare concrete hall should be to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-3">
	<nl lang="en"> go forward along the stone hall one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-5">
	<nl lang="en"> go forward along the brick hall six segments to the intersection with the wooden-floored hall, passing a hatrack and a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 6  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-7">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_1_Dirs_1.txt" id="1174-8">
	<nl lang="en"> there is a bench in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-1">
	<nl lang="en"> go forward and turn left at the rose carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-2">
	<nl lang="en"> move forward to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-3">
	<nl lang="en"> walk forward on the blue carpet till you get to a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-5">
	<nl lang="en"> there should be another chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_1.txt" id="1176-6">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_3_Dirs_1.txt" id="1177-1">
	<nl lang="en"> go to the fish walled area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_3_Dirs_1.txt" id="1177-2">
	<nl lang="en"> follow the long corridor till it makes a right then follow the series of turns to the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-1">
	<nl lang="en"> turn so that the wall is to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-4">
	<nl lang="en"> walk forward until you come to the intersection of the brown hallways </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-5">
	<nl lang="en"> turn left and walk forward twice </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-8">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-9">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-10">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_2_Dirs_1.txt" id="1179-11">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_3_Dirs_1.txt" id="1180-1">
	<nl lang="en"> go forward two segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_3_Dirs_1.txt" id="1180-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_3_Dirs_1.txt" id="1180-3">
	<nl lang="en"> go forward to the bare concrete intersection between two intersections containing furniture </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-1">
	<nl lang="en"> turn to face the black hallway with the pictures of towers on either side and a lamp down in the distance </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-3">
	<nl lang="en"> turn left to face the red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-4">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_1_Dirs_1.txt" id="1181-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-1">
	<nl lang="en"> with your back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-2">
	<nl lang="en"> move forward along the rock floor to the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-3">
	<nl lang="en"> turn left at the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-4">
	<nl lang="en"> move along the blue carpet past the sofa to the hat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_2_5_Dirs_1.txt" id="1183-6">
	<nl lang="en"> move into the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-1">
	<nl lang="en"> turn so that the chair is on the right and you are facing the brown floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_4_Dirs_1.txt" id="1184-8">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_4_Dirs_1.txt" id="1186-1">
	<nl lang="en"> take the black path towards the fish until you reach the pink flowered path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_4_Dirs_1.txt" id="1186-2">
	<nl lang="en"> here, turn right, and go all the way until the end where you can only turn right or left onto a blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-1">
	<nl lang="en"> turn so that the wall is on your left and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-4">
	<nl lang="en"> walk forward once turn right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-7">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-9">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-10">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_7_Dirs_1.txt" id="1187-11">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-1">
	<nl lang="en"> turn so that the wall is to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-4">
	<nl lang="en"> walk forward once, or until the pink hallway is on your right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_6_Dirs_1.txt" id="1190-7">
	<nl lang="en"> turn right and walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-1">
	<nl lang="en"> go down toward the longer end of the hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-2">
	<nl lang="en"> make the first right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-3">
	<nl lang="en"> go down </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-4">
	<nl lang="en"> make the first right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-5">
	<nl lang="en"> go down </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-6">
	<nl lang="en"> make the first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-7">
	<nl lang="en"> go down till the easel is on the right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_1_6_Dirs_1.txt" id="1192-8">
	<nl lang="en"> move one space away form the aesal </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-6">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_4_Dirs_1.txt" id="1193-8">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-1">
	<nl lang="en"> go straight towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-2">
	<nl lang="en"> take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-3">
	<nl lang="en"> take the blue path all the way to the end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-4">
	<nl lang="en"> once here, take a right on the green path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-5">
	<nl lang="en"> follow the green path all the way to the end of the hall as well </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_4_Dirs_1.txt" id="1201-6">
	<nl lang="en"> here, the green meets the yellow path and you are at position 4 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_4_Dirs_1.txt" id="1205-1">
	<nl lang="en"> with you back to the wall turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_4_Dirs_1.txt" id="1205-2">
	<nl lang="en"> walk down the blue carpet, past a stool and a chair to the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_4_Dirs_1.txt" id="1205-3">
	<nl lang="en"> to your right should be grass </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_4_Dirs_1.txt" id="1205-4">
	<nl lang="en"> walk down the grass </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_4_Dirs_1.txt" id="1205-5">
	<nl lang="en"> at the end of the grass there should be green octagon carpet to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-4">
	<nl lang="en"> walk forward four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_5_Dirs_1.txt" id="1206-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-1">
	<nl lang="en"> face the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-2">
	<nl lang="en"> go forward three segment along this hall to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-4">
	<nl lang="en"> go forward two segments to the intersection containing the stool, passing a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_3_Dirs_1.txt" id="1207-6">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-1">
	<nl lang="en"> face toward the blue-tiled hall containing the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-2">
	<nl lang="en"> go forward one segment to the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-4">
	<nl lang="en"> follow the blue-tiled hall five segments to the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-6">
	<nl lang="en"> follow this hall one segment forward to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_1_Dirs_1.txt" id="1209-7">
	<nl lang="en"> this intersection should contain an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_5_Dirs_1.txt" id="1212-1">
	<nl lang="en"> take the red brick path towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_5_Dirs_1.txt" id="1212-2">
	<nl lang="en"> at the end of the hall at the chair, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_5_Dirs_1.txt" id="1212-3">
	<nl lang="en"> go straight to the black bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_5_Dirs_1.txt" id="1212-4">
	<nl lang="en"> here, take a left onto the blue path and another left at the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_5_Dirs_1.txt" id="1212-5">
	<nl lang="en"> the end of this hall will be 5 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_2_Dirs_1.txt" id="1213-1">
	<nl lang="en"> at three put your back to the sofa and move forward towards the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_2_Dirs_1.txt" id="1213-2">
	<nl lang="en"> when you get to the alley with the roack floor stop and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_2_Dirs_1.txt" id="1213-3">
	<nl lang="en"> move forward to the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_6_Dirs_1.txt" id="1214-1">
	<nl lang="en"> follow the hallway out </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_6_Dirs_1.txt" id="1214-2">
	<nl lang="en"> keep going till the aesal is to your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_6_Dirs_1.txt" id="1214-3">
	<nl lang="en"> move one space wawya from teh aesal </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_4_Dirs_1.txt" id="1218-1">
	<nl lang="en"> take the blue hall until you get to the grassy hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_4_Dirs_1.txt" id="1218-2">
	<nl lang="en"> then follow the grassy hall to the end where it intersects with the yellow hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_1_Dirs_1.txt" id="1219-1">
	<nl lang="en"> go two segments down the grassy hall to the hat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_1_Dirs_1.txt" id="1219-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_1_Dirs_1.txt" id="1219-3">
	<nl lang="en"> go one segment forward to the intersection with the hall with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_1_Dirs_1.txt" id="1219-4">
	<nl lang="en"> in this intersection is an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-1">
	<nl lang="en"> take the pink path to the red brick path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-2">
	<nl lang="en"> take a left on red brick, and then a right on the black path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-3">
	<nl lang="en"> at the intersection of the black and yellow path, take a left onto the yellow path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-4">
	<nl lang="en"> when road ends, go right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-5">
	<nl lang="en"> at the end of the hall, go right again </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_4_3_Dirs_1.txt" id="1222-6">
	<nl lang="en"> the end of this hall is 3 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_7_Dirs_1.txt" id="1225-1">
	<nl lang="en"> face the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_7_Dirs_1.txt" id="1225-2">
	<nl lang="en"> go forward three segments to the intersection with the stone hall, passing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-1">
	<nl lang="en"> go foward till the blue hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-2">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-3">
	<nl lang="en"> keep goin till the pink flowerd floor hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-4">
	<nl lang="en"> make a right into it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-5">
	<nl lang="en"> make the first right into a dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_6_Dirs_1.txt" id="1226-6">
	<nl lang="en"> pos 6 is at the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_5_Dirs_1.txt" id="1227-1">
	<nl lang="en"> turn so that the chair is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_5_Dirs_1.txt" id="1227-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_5_Dirs_1.txt" id="1227-3">
	<nl lang="en"> turn right walk forward once </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-1">
	<nl lang="en"> go forward two segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-3">
	<nl lang="en"> go forward to the far end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-5">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-6">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-8">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-9">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-10">
	<nl lang="en"> go forward one segment to the intersection containing the lamp </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-11">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_2_Dirs_1.txt" id="1229-12">
	<nl lang="en"> go forward one segment to the empty corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_2_Dirs_1.txt" id="1231-1">
	<nl lang="en"> go all the way down the winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_2_Dirs_1.txt" id="1231-2">
	<nl lang="en"> then stop at the first intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Intersection ,  type= 'Struct' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_2_Dirs_1.txt" id="1235-1">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_2_Dirs_1.txt" id="1235-2">
	<nl lang="en"> turn and move to the corner past the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_2_Dirs_1.txt" id="1235-3">
	<nl lang="en"> turn right and move along the green octagon carpet to the grey stone carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_2_Dirs_1.txt" id="1235-4">
	<nl lang="en"> there should be an easel to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_6_Dirs_1.txt" id="1237-1">
	<nl lang="en"> face the long brick alley and move past the lamp and one alley past the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_6_Dirs_1.txt" id="1237-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_6_Dirs_1.txt" id="1237-3">
	<nl lang="en"> move one alley along the stone floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_5_6_Dirs_1.txt" id="1237-4">
	<nl lang="en"> two blocks in front of you is an easel and to your left is a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_3_Dirs_1.txt" id="1238-1">
	<nl lang="en"> make a right toward the pink floored area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_3_Dirs_1.txt" id="1238-2">
	<nl lang="en"> go down till the fish are on teh walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_3_Dirs_1.txt" id="1238-3">
	<nl lang="en"> make the first left in to the fish hallwyas </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_3_Dirs_1.txt" id="1238-4">
	<nl lang="en"> follow this for as far as it will go </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_4_Dirs_1.txt" id="1239-1">
	<nl lang="en"> take the black path away from the bench to the very end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_4_Dirs_1.txt" id="1239-2">
	<nl lang="en"> here, take a left onto the yellow path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_4_Dirs_1.txt" id="1239-3">
	<nl lang="en"> follow the path to the opposite end of the hall and here is 4 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_2_Dirs_1.txt" id="1240-1">
	<nl lang="en"> go on the black road towards the end with the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_2_Dirs_1.txt" id="1240-2">
	<nl lang="en"> the next junction is position 2 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_5_Dirs_1.txt" id="1242-1">
	<nl lang="en"> foward till the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_5_Dirs_1.txt" id="1242-2">
	<nl lang="en"> right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_5_Dirs_1.txt" id="1242-3">
	<nl lang="en"> foward till the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_4_5_Dirs_1.txt" id="1242-4">
	<nl lang="en"> look for a blue aesal </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-1">
	<nl lang="en"> all the way down the winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-2">
	<nl lang="en"> then a right at the grey hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-3">
	<nl lang="en"> continuing until you reach the red hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-4">
	<nl lang="en"> a left at the red hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-5">
	<nl lang="en"> then another left onto a wood hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_1_Dirs_1.txt" id="1246-6">
	<nl lang="en"> position 1 has a bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-1">
	<nl lang="en"> go until hall ends </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-2">
	<nl lang="en"> take left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-3">
	<nl lang="en"> take left again when hall ends </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-4">
	<nl lang="en"> take a right at the first intersection </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Sides ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-5">
	<nl lang="en"> follow the black path until you come to an intersection of the red brick path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-6">
	<nl lang="en"> take a left onto the red brick and go a ways down until you come to the section with the butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_3_5_Dirs_1.txt" id="1248-7">
	<nl lang="en"> position five is the first section after you pass the lamp </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-2">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-4">
	<nl lang="en"> go forward to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-6">
	<nl lang="en"> go forward two segments, passing the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_7_1_Dirs_1.txt" id="1253-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-1">
	<nl lang="en"> face the hall containing the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-2">
	<nl lang="en"> go forward one segment to the intersection with the stool </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-4">
	<nl lang="en"> go forward down the bare concrete hall two segments, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-6">
	<nl lang="en"> you are now facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-7">
	<nl lang="en"> go forward three segments to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-8">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_4_Dirs_1.txt" id="1255-9">
	<nl lang="en"> go forward three segments, passing the hatrack, to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_3_Dirs_1.txt" id="1260-1">
	<nl lang="en"> go straight towards teh black chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_3_Dirs_1.txt" id="1260-2">
	<nl lang="en"> at the chair, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_7_3_Dirs_1.txt" id="1260-3">
	<nl lang="en"> the second intersection down on the blue path is 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_2_Dirs_1.txt" id="1268-1">
	<nl lang="en"> you will walk on the brick flooring away from the shorter expanse of hallway containing the single chair toward longer expanse of hallway containing the lamp and the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_7_2_Dirs_1.txt" id="1268-2">
	<nl lang="en"> the square containing the easel is position 2 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-1">
	<nl lang="en"> face the pink-flowered carpet hall with your back to the bench at the intersection of it and the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-2">
	<nl lang="en"> the longer side of the wooden hall should be to your left, the shorter to the right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-3">
	<nl lang="en"> go forward one segment to the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-4">
	<nl lang="en"> turn left in the blue-tiled hall, away from the intersection with the grassy hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-5">
	<nl lang="en"> follow the blue-tiled hall five segments, past the stool and bench, to the intersection conataining the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Barstool ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Barstool ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-6">
	<nl lang="en"> turn left at this intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_5_Dirs_1.txt" id="1269-7">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_5_Dirs_1.txt" id="1272-1">
	<nl lang="en"> go all the way down the grassy hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_5_Dirs_1.txt" id="1272-2">
	<nl lang="en"> take a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_5_Dirs_1.txt" id="1272-3">
	<nl lang="en"> go all the way down the blue hall until you see a coat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_5_Dirs_1.txt" id="1272-4">
	<nl lang="en"> take another immediate left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_5_Dirs_1.txt" id="1275-1">
	<nl lang="en"> orient yourself along the stone hall with your back facing the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_5_Dirs_1.txt" id="1275-2">
	<nl lang="en"> go forward two segments to intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_5_Dirs_1.txt" id="1275-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_5_Dirs_1.txt" id="1275-4">
	<nl lang="en"> go forward five segments to the second intersection with a bare concrete floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_5_Dirs_1.txt" id="1275-5">
	<nl lang="en"> you will pass a hatrack and a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_4_Dirs_1.txt" id="1276-1">
	<nl lang="en"> go towards the intersection of the red brick path </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_4_Dirs_1.txt" id="1276-2">
	<nl lang="en"> take a right onto the red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_4_Dirs_1.txt" id="1276-3">
	<nl lang="en"> follow it until the intersection of the pink flowered path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_4_Dirs_1.txt" id="1276-4">
	<nl lang="en"> take a left onto it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_4_Dirs_1.txt" id="1276-5">
	<nl lang="en"> go all the way until you can either go right or left on a blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_4_Dirs_1.txt" id="1277-1">
	<nl lang="en"> go all the way down the winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_4_Dirs_1.txt" id="1277-2">
	<nl lang="en"> take a right maybe </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_4_Dirs_1.txt" id="1277-3">
	<nl lang="en"> goi down that hall until you get to the blue hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_3_4_Dirs_1.txt" id="1277-4">
	<nl lang="en"> then postion 4 is at the intersection of the blue and rose floored halls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_4_Dirs_1.txt" id="1278-1">
	<nl lang="en"> turn so that the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_4_Dirs_1.txt" id="1278-2">
	<nl lang="en"> walk forward three times or until you reach the corner of yellow and green </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_5_Dirs_1.txt" id="1279-1">
	<nl lang="en"> turn to face the black hallway with the pictures of towers on the walls </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_5_Dirs_1.txt" id="1279-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_5_Dirs_1.txt" id="1279-3">
	<nl lang="en"> turn left and walk forward four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_6_Dirs_1.txt" id="1280-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_6_Dirs_1.txt" id="1280-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_6_Dirs_1.txt" id="1280-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_6_Dirs_1.txt" id="1280-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-1">
	<nl lang="en"> orient yourself along the stone hall with the end of the hall containing the easel at your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-2">
	<nl lang="en"> the bench in the bare concrete hall should be to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-3">
	<nl lang="en"> go forward two segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-5">
	<nl lang="en"> go forward two segments along the blue-tiled hall to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_6_4_Dirs_1.txt" id="1281-6">
	<nl lang="en"> there is a bench two segments farther down the hall in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_6_Dirs_1.txt" id="1284-1">
	<nl lang="en"> face the long alley </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_6_Dirs_1.txt" id="1284-2">
	<nl lang="en"> move down it until you get to the wood flooring </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_6_Dirs_1.txt" id="1284-3">
	<nl lang="en"> turn right and move one block </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-1">
	<nl lang="en"> from two face towards the hat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-2">
	<nl lang="en"> turn onto the green carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-3">
	<nl lang="en"> walk until there is an exit on the left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-4">
	<nl lang="en"> you should be standing next to a stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-5">
	<nl lang="en"> walk forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-6">
	<nl lang="en"> turn around when you hit the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_2_1_Dirs_1.txt" id="1286-7">
	<nl lang="en"> to your left and right should be brick and in front of you the stool where you just came from </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_2_Dirs_1.txt" id="1287-1">
	<nl lang="en"> follow this hallway out </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_2_Dirs_1.txt" id="1287-2">
	<nl lang="en"> keep going until you see a aesal on the left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_5_Dirs_1.txt" id="1290-1">
	<nl lang="en"> go down grey hall until you get to the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_6_5_Dirs_1.txt" id="1290-2">
	<nl lang="en"> spot is near the end of the red hall, with a branch to the side with a blank walled dead end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Sides ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_5_Dirs_1.txt" id="1292-1">
	<nl lang="en"> go straight down thre grey hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_5_Dirs_1.txt" id="1292-2">
	<nl lang="en"> a left at the red hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_5_Dirs_1.txt" id="1292-3">
	<nl lang="en"> continue one movement past a lamp pole </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-1">
	<nl lang="en"> move to the easel and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-2">
	<nl lang="en"> the side alley has blue floor </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-3">
	<nl lang="en"> move onto this and stop at the chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-5">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_7_Dirs_1.txt" id="1294-6">
	<nl lang="en"> the side alley has stone flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-1">
	<nl lang="en"> turn to where the wall is on your left side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_1_7_Dirs_1.txt" id="1295-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_2_Dirs_1.txt" id="1302-1">
	<nl lang="en"> at one face the long brick alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_2_Dirs_1.txt" id="1302-2">
	<nl lang="en"> walk until you see an almost black carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_2_Dirs_1.txt" id="1302-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_2_Dirs_1.txt" id="1302-4">
	<nl lang="en"> you should see an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_2_Dirs_1.txt" id="1302-5">
	<nl lang="en"> move to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-1">
	<nl lang="en"> with your back to the wall move forward to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-3">
	<nl lang="en"> move along the brick alley til you reach the alley with the stone floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-5">
	<nl lang="en"> move along the stone floor till you reach the alley with green octagon carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_4_2_Dirs_1.txt" id="1303-6">
	<nl lang="en"> there should be an easel one block in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-1">
	<nl lang="en"> only one direction to go </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-6">
	<nl lang="en"> walk forward about four times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-7">
	<nl lang="en"> until you reach the yellow floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_6_4_Dirs_1.txt" id="1305-8">
	<nl lang="en"> turn left at the yellow floors and walk to the end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_4_5_Dirs_1.txt" id="1310-1">
	<nl lang="en"> position 5 is in the middle of the red brick floored room </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_2_4_Dirs_1.txt" id="1313-1">
	<nl lang="en"> go straight down the yellow hall until you hit a corner that intersects with the grass hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_1_Dirs_1.txt" id="1314-1">
	<nl lang="en"> go forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_1_Dirs_1.txt" id="1314-2">
	<nl lang="en"> then left all the way down the blue hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_1_Dirs_1.txt" id="1314-3">
	<nl lang="en"> then a right at teh red hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_1_Dirs_1.txt" id="1314-4">
	<nl lang="en"> then pos 1 is at the four way intersection of the red hall and the rose hall, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Intersection ,  type= 'Struct' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_6_Dirs_1.txt" id="1315-1">
	<nl lang="en"> with your back to the wall, move forward one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_6_Dirs_1.txt" id="1315-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_6_Dirs_1.txt" id="1315-3">
	<nl lang="en"> you should see wood flooring </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_6_Dirs_1.txt" id="1315-4">
	<nl lang="en"> move one block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_3_6_Dirs_1.txt" id="1315-5">
	<nl lang="en"> p 6 should have two alleys of wood floor and one of gray </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-1">
	<nl lang="en"> turn so that there is a wall to your left, blue floor to the front, and pink floor to your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-2">
	<nl lang="en"> go foward twice or until you come upon a charred black floor to your right </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-3">
	<nl lang="en"> turn to face the black floor </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-4">
	<nl lang="en"> you will see pictures on the wall up ahead of towers then butterflys </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-6">
	<nl lang="en"> you should now have butterfly pictures in front of you, and tower pictures behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_2_Dirs_1.txt" id="1317-7">
	<nl lang="en"> resume your forward course along the black floor for one more click </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_4_Dirs_1.txt" id="1318-1">
	<nl lang="en"> follow the yellow-tiled hall forward three segments, passing the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_2_4_Dirs_1.txt" id="1318-2">
	<nl lang="en"> this corner, where the yellow-tiled hall intersects the grassy hall, is position 4 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_2_Dirs_1.txt" id="1320-1">
	<nl lang="en"> face and move forward to the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_2_Dirs_1.txt" id="1320-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_2_Dirs_1.txt" id="1320-3">
	<nl lang="en"> move far down the blue carpet to the flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_2_Dirs_1.txt" id="1320-4">
	<nl lang="en"> turn right you should see an easel in front of you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_5_2_Dirs_1.txt" id="1320-5">
	<nl lang="en"> move there </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_2_Dirs_1.txt" id="1322-1">
	<nl lang="en"> move forward one alley along the stone floor in the direction of the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_6_2_Dirs_1.txt" id="1322-2">
	<nl lang="en"> the side alleys have green octagon carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_7_Dirs_1.txt" id="1325-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_7_Dirs_1.txt" id="1325-2">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_7_Dirs_1.txt" id="1325-3">
	<nl lang="en"> there should be a brick floor in the hall to either side of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-1">
	<nl lang="en"> go forward two segments to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-3">
	<nl lang="en"> go to the opposite end of the blue-tiled hall, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-5">
	<nl lang="en"> go forward two segments, passing the easel in the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-7">
	<nl lang="en"> go forward to the empty intersection that has eiffel tower pictures ahead of you and butterfly pictures behind you </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_1_Dirs_1.txt" id="1326-8">
	<nl lang="en"> you should be able to see the grassy hall to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_1_Dirs_1.txt" id="1328-1">
	<nl lang="en"> go towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_1_Dirs_1.txt" id="1328-2">
	<nl lang="en"> at the rack, go right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_1_Dirs_1.txt" id="1328-3">
	<nl lang="en"> take the blue path all the way down to the pink path intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_1_Dirs_1.txt" id="1328-4">
	<nl lang="en"> go right onto the pink path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_1_Dirs_1.txt" id="1328-5">
	<nl lang="en"> when you reach the black easel, you are at position 1 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-1">
	<nl lang="en"> place your back to the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-2">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-3">
	<nl lang="en"> go forward two segments down the wooden hall to the chair in the blue-tiled hall, passing the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-5">
	<nl lang="en"> go forward four segments, passing the bench to the intersection containing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_5_Dirs_1.txt" id="1332-7">
	<nl lang="en"> go forward one segment to the corner </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-1">
	<nl lang="en"> orient yourself along the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-2">
	<nl lang="en"> the easel in the stone hall should be to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-3">
	<nl lang="en"> go forward along the yellow-tiled hall one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-5">
	<nl lang="en"> go forward two segments, passing a chair, to the intersection containing the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_3_Dirs_1.txt" id="1333-7">
	<nl lang="en"> go forward one segment to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_6_Dirs_1.txt" id="1334-1">
	<nl lang="en"> with your back to the easel walk along the stone flooring to the next alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_6_Dirs_1.txt" id="1334-2">
	<nl lang="en"> the alley to your left has grey floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-1">
	<nl lang="en"> turn so that the wall is facing your left and back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_2_5_Dirs_1.txt" id="1336-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_6_Dirs_1.txt" id="1342-1">
	<nl lang="en"> turn so that the wall is on your left and the pink hallway is to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_6_Dirs_1.txt" id="1342-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_6_Dirs_1.txt" id="1342-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_6_Dirs_1.txt" id="1342-4">
	<nl lang="en"> you should be facing a black hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_4_6_Dirs_1.txt" id="1342-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-1">
	<nl lang="en"> orient yourself along the wooden hall with the end of the hall containing the hatrack at your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-2">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-4">
	<nl lang="en"> go forward six segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 6  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-6">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_6_Dirs_1.txt" id="1346-7">
	<nl lang="en"> there is bench one segment down the hall to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_3_Dirs_1.txt" id="1348-1">
	<nl lang="en"> go to the blue flooored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_3_Dirs_1.txt" id="1348-2">
	<nl lang="en"> pos three is in between the two pieces of furniture in this hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_4_Dirs_1.txt" id="1349-1">
	<nl lang="en"> head toward the blue floored hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_4_Dirs_1.txt" id="1349-2">
	<nl lang="en"> make a right on it </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_4_Dirs_1.txt" id="1349-3">
	<nl lang="en"> go down till you see the fish walled areas </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_7_4_Dirs_1.txt" id="1349-4">
	<nl lang="en"> make a left in the fish walled hallway and go to the very end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_3_Dirs_1.txt" id="1350-1">
	<nl lang="en"> take the yellow path towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_3_Dirs_1.txt" id="1350-2">
	<nl lang="en"> at the coat rack, take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_4_3_Dirs_1.txt" id="1350-3">
	<nl lang="en"> go 2 intersections down and you'll be at 3 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_4_Dirs_1.txt" id="1351-1">
	<nl lang="en"> take the wood path towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_4_Dirs_1.txt" id="1351-2">
	<nl lang="en"> at the easel, take a left to the next corner </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_4_Dirs_1.txt" id="1351-3">
	<nl lang="en"> at the corner, take a right onto the blue path and go all the way down until you reach a coat rack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_4_Dirs_1.txt" id="1351-4">
	<nl lang="en"> at the coat rack, take a left onto the yellow path and go to the end of the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_5_Dirs_1.txt" id="1352-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_5_Dirs_1.txt" id="1352-2">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_5_Dirs_1.txt" id="1352-3">
	<nl lang="en"> go forward two segments, past the bench, to the intersection containing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_5_Dirs_1.txt" id="1352-4">
	<nl lang="en"> turn left into the bare concrete hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_3_5_Dirs_1.txt" id="1352-5">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_7_4_Dirs_1.txt" id="1356-1">
	<nl lang="en"> position 4 is at the dead end of the yellow fish hall with yellow floors </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_4_Dirs_1.txt" id="1357-1">
	<nl lang="en"> turn so that the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_4_Dirs_1.txt" id="1357-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_4_Dirs_1.txt" id="1357-3">
	<nl lang="en"> turn left to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_4_Dirs_1.txt" id="1357-4">
	<nl lang="en"> walk forward to the far end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_3_Dirs_1.txt" id="1359-1">
	<nl lang="en"> turn so the wall is to your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_3_Dirs_1.txt" id="1359-2">
	<nl lang="en"> wlak forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_3_Dirs_1.txt" id="1359-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Jelly0_7_3_Dirs_1.txt" id="1359-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_3_Dirs_1.txt" id="1361-1">
	<nl lang="en"> go on the black road towards the end with the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_3_Dirs_1.txt" id="1361-2">
	<nl lang="en"> at the next junction of yellow and black, take a left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_3_Dirs_1.txt" id="1361-3">
	<nl lang="en"> when the hall ends, take a right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_3_Dirs_1.txt" id="1361-4">
	<nl lang="en"> when the hall ends again, take antoher right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_6_3_Dirs_1.txt" id="1361-5">
	<nl lang="en"> 3 is at the end of this hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_7_Dirs_1.txt" id="1363-1">
	<nl lang="en"> look for grey tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_7_Dirs_1.txt" id="1363-2">
	<nl lang="en"> position 7 is in the middle of the grey hall and has i think a chair or coat rack or some sort of object </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_2_Dirs_1.txt" id="1365-1">
	<nl lang="en"> with your back to the easel move into the corner and turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_2_Dirs_1.txt" id="1365-2">
	<nl lang="en"> at the lamp turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_2_Dirs_1.txt" id="1365-3">
	<nl lang="en"> move into the corner and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_2_Dirs_1.txt" id="1365-4">
	<nl lang="en"> you see a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_1_Dirs_1.txt" id="1367-1">
	<nl lang="en"> face and move to the sofa chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_1_Dirs_1.txt" id="1367-2">
	<nl lang="en"> turn left and move to this sofa chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_1_Dirs_1.txt" id="1367-3">
	<nl lang="en"> turn left again and move along the brick one alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_7_1_Dirs_1.txt" id="1367-4">
	<nl lang="en"> to your left is grey flooring with a wooden chair in the distance </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_2_Dirs_1.txt" id="1368-1">
	<nl lang="en"> take the blue path away from the black bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_2_Dirs_1.txt" id="1368-2">
	<nl lang="en"> you will come to an intersection with a black path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_3_2_Dirs_1.txt" id="1368-3">
	<nl lang="en"> take a right onto the black path all the way down until you reach the black easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-2">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-3">
	<nl lang="en"> go forward one segment to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-5">
	<nl lang="en"> go forward one segment to the intersection with the wooden-floored hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-6">
	<nl lang="en"> this intersection contains an easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-7">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_1_5_Dirs_1.txt" id="1369-8">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-1">
	<nl lang="en"> at 4 face the grass carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-2">
	<nl lang="en"> walk to the corner and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-3">
	<nl lang="en"> you should see blue carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-4">
	<nl lang="en"> walk along the blue carpet and you pass two objects </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-5">
	<nl lang="en"> move to the alley where there is only gray floor to your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_4_3_Dirs_1.txt" id="1371-6">
	<nl lang="en"> in front of you is a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-1">
	<nl lang="en"> orient yourself along the wooden-floored hall with your back to the end containing the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-2">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-3">
	<nl lang="en"> tunr right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-4">
	<nl lang="en"> go forward four segments to the intersection with the pink-carpeted hall, passing a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-5">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-7">
	<nl lang="en"> go forward one segment to the intersection with the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_1_4_Dirs_1.txt" id="1376-8">
	<nl lang="en"> there is a bench two segments to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_2.txt" id="1379-1">
	<nl lang="en"> move to the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_2.txt" id="1379-2">
	<nl lang="en"> again move forward to the blue carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_2.txt" id="1379-3">
	<nl lang="en"> move forward past the chair to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_4_Dirs_2.txt" id="1379-4">
	<nl lang="en"> turn left and move straight to the end of the green octagon alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_5_Dirs_1.txt" id="1380-1">
	<nl lang="en"> look for the blue hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_5_Dirs_1.txt" id="1380-2">
	<nl lang="en"> go all the way down until you hit a spot with a coat rack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_5_Dirs_1.txt" id="1380-3">
	<nl lang="en"> then one movement left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-1">
	<nl lang="en"> follow the yellow-tiled hall to the hall with pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-2">
	<nl lang="en"> i 90% sure that you will turn left, although i am certain that you will turn in the direction in which more hallways are visible </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-3">
	<nl lang="en"> this hall will end in the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-4">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-5">
	<nl lang="en"> position three will be an empty segment on this hallway </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-6">
	<nl lang="en"> the flooring of the hall intersecting it will be bare concrete </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_6_3_Dirs_1.txt" id="1381-7">
	<nl lang="en"> position 3 is previous to the hatrack, but after any other objects in the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_1_Dirs_1.txt" id="1382-1">
	<nl lang="en"> move to the easel and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_1_Dirs_1.txt" id="1382-2">
	<nl lang="en"> the left side alley should be stone </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_1_Dirs_1.txt" id="1382-5">
	<nl lang="en"> one alley past this chair </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-1">
	<nl lang="en"> from one turn until you can see a corner of blue carpet on the side alleys </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-2">
	<nl lang="en"> move to this </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-4">
	<nl lang="en"> you should see a chair and a hatrack in front of you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-5">
	<nl lang="en"> move to the hatrack </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_5_Dirs_1.txt" id="1383-7">
	<nl lang="en"> go to the corner </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_1_Dirs_1.txt" id="1388-1">
	<nl lang="en"> go to the butterfly walled area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_1_Dirs_1.txt" id="1388-2">
	<nl lang="en"> follow this hallway tward the lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_1_Dirs_1.txt" id="1388-3">
	<nl lang="en"> go doen this hallway </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_1_Dirs_1.txt" id="1388-4">
	<nl lang="en"> make a right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_1_Dirs_1.txt" id="1388-5">
	<nl lang="en"> go till the bench </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-1">
	<nl lang="en"> at seven put your back to the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-2">
	<nl lang="en"> move along the red brick past the lamp to the easel </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-4">
	<nl lang="en"> move forward to the octagon flooring </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-6">
	<nl lang="en"> move to the wall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_4_Dirs_1.txt" id="1396-7">
	<nl lang="en"> to your left should be grass </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_6_2_Dirs_1.txt" id="1397-1">
	<nl lang="en"> move one space toward the aesal </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_5_Dirs_1.txt" id="1399-1">
	<nl lang="en"> position 5 is in the middle of the wood floored hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_6_Dirs_1.txt" id="1403-1">
	<nl lang="en"> go towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_6_Dirs_1.txt" id="1403-2">
	<nl lang="en"> take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_6_Dirs_1.txt" id="1403-3">
	<nl lang="en"> go past the black bench and all of the way down until you reach the wood path intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_6_Dirs_1.txt" id="1403-4">
	<nl lang="en"> take a right onto the wood path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_6_Dirs_1.txt" id="1403-5">
	<nl lang="en"> at the intersection with plain cement, you are at 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_7_Dirs_1.txt" id="1406-1">
	<nl lang="en"> go to blue floor area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_2_7_Dirs_1.txt" id="1406-2">
	<nl lang="en"> make 1st right go tward black floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_2_Dirs_1.txt" id="1407-1">
	<nl lang="en"> position 2 is located where the yellow floors and the grey floors intersect </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_1_2_Dirs_1.txt" id="1407-2">
	<nl lang="en"> there is an easel there </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_6_3_Dirs_1.txt" id="1410-1">
	<nl lang="en"> it's in the middle of the blue hall with two objects at either side </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-1">
	<nl lang="en"> face and move to the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-3">
	<nl lang="en"> the side alley to your right should be blue </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-5">
	<nl lang="en"> move along the blue floored alley past the chair to the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_5_4_Dirs_1.txt" id="1414-7">
	<nl lang="en"> p 4 is at the end of the alley with the green octagon floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_6_Dirs_1.txt" id="1415-1">
	<nl lang="en"> go to blue </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_6_Dirs_1.txt" id="1415-2">
	<nl lang="en"> then pink area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_6_Dirs_1.txt" id="1415-3">
	<nl lang="en"> make 1st rt </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_3_Dirs_1.txt" id="1416-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_3_Dirs_1.txt" id="1416-2">
	<nl lang="en"> walk forward three tiems </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_3_Dirs_1.txt" id="1416-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_3_Dirs_1.txt" id="1416-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_7_Dirs_1.txt" id="1417-1">
	<nl lang="en"> move to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_7_Dirs_1.txt" id="1417-2">
	<nl lang="en"> turn and move past the chair to the octagon carpet </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_7_Dirs_1.txt" id="1417-3">
	<nl lang="en"> move along the octagon carpet to the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_7_Dirs_1.txt" id="1417-4">
	<nl lang="en"> to your left and right is flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_2_7_Dirs_1.txt" id="1431-1">
	<nl lang="en"> position 7 is in the middle of the grey floored hall with a coat rack or something </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_4_Dirs_1.txt" id="1432-1">
	<nl lang="en"> take the red brick path straight towards the lamp and all the way until the end of the hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_4_Dirs_1.txt" id="1432-2">
	<nl lang="en"> at the intersection with the green path, take a right and again, go to the end of the hall where the corner meets with the yellow path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_2_Dirs_1.txt" id="1433-1">
	<nl lang="en"> go forward three segments down the yellow-tiled hall, passing the bench </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_4_2_Dirs_1.txt" id="1433-2">
	<nl lang="en"> there is an easel in this intersection </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-1">
	<nl lang="en"> move to hatrack and turn right </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-2">
	<nl lang="en"> go down this blue floored alley past the chair to the end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-4">
	<nl lang="en"> move to the easel with the wooden floored side alleys </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-6">
	<nl lang="en"> you should see a longer alley than the one behind you </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_4_5_Dirs_1.txt" id="1437-7">
	<nl lang="en"> move one block to between the wall hanging butterflies </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_3_Dirs_1.txt" id="1440-1">
	<nl lang="en"> go straight </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_3_Dirs_1.txt" id="1440-2">
	<nl lang="en"> all the way down to a winding hall </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_3_Dirs_1.txt" id="1440-3">
	<nl lang="en"> until you get to a dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_2_Dirs_1.txt" id="1443-1">
	<nl lang="en"> turn to face the yellow hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_4_2_Dirs_1.txt" id="1443-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-1">
	<nl lang="en"> face the pink-flowered carpet hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-2">
	<nl lang="en"> go forward three segments to the intersection with the yellow-tiled hallway, passing the hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-4">
	<nl lang="en"> go forward three segments along the yellow-tiled hall to the intersection with a bare concrete floor </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-6">
	<nl lang="en"> go forward two segments to the intersection containing the stool, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_3_Dirs_1.txt" id="1444-8">
	<nl lang="en"> go forward one segment to the dead end </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_7_Dirs_1.txt" id="1446-1">
	<nl lang="en"> go straight on black path to red brick junction </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_7_Dirs_1.txt" id="1446-2">
	<nl lang="en"> go left on red brick </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_7_Dirs_1.txt" id="1446-3">
	<nl lang="en"> go left on pink flowered path at that juncture </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_2_7_Dirs_1.txt" id="1446-4">
	<nl lang="en"> go straight until you can either go left or towards a dead end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_2_Dirs_1.txt" id="1448-1">
	<nl lang="en"> go towards the coat rack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_2_Dirs_1.txt" id="1448-2">
	<nl lang="en"> at the coat rack, take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_2_Dirs_1.txt" id="1448-3">
	<nl lang="en"> follow the blue path to the black path intersection and go right onto the black path </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_2_Dirs_1.txt" id="1448-4">
	<nl lang="en"> go all the way down until you get to a black easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_4_Dirs_1.txt" id="1451-1">
	<nl lang="en"> from 1 face the flowered carpet with the grass carpet in the next side alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_4_Dirs_1.txt" id="1451-2">
	<nl lang="en"> move to the grass carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_4_Dirs_1.txt" id="1451-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_4_Dirs_1.txt" id="1451-4">
	<nl lang="en"> walk to the end of this aisle </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_4_Dirs_1.txt" id="1451-5">
	<nl lang="en"> you should then see olive green octagon carpet to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Right ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_4_2_Dirs_1.txt" id="1452-1">
	<nl lang="en"> go all the way down the hall until you get to the end, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_4_Dirs_1.txt" id="1456-1">
	<nl lang="en"> go to the fish area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_5_4_Dirs_1.txt" id="1456-2">
	<nl lang="en"> pos 4 is at the dead end of one of the fish walled hallways </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_2_6_Dirs_1.txt" id="1459-1">
	<nl lang="en"> go one space away from the aesal </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_3_Dirs_1.txt" id="1460-1">
	<nl lang="en"> turn so that the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_3_Dirs_1.txt" id="1460-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_3_Dirs_1.txt" id="1460-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_3_Dirs_1.txt" id="1460-4">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_7_Dirs_1.txt" id="1467-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_1_7_Dirs_1.txt" id="1467-2">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_4_Dirs_1.txt" id="1468-1">
	<nl lang="en"> foward to the fish </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_4_Dirs_1.txt" id="1468-2">
	<nl lang="en"> first left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_3_4_Dirs_1.txt" id="1468-3">
	<nl lang="en"> go tot the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_4_Dirs_1.txt" id="1470-1">
	<nl lang="en"> go straight towards the pink path and at this intersection take a left onto th epink path </nl>
	<mrl lang="marco">
			[
		Travel(   )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_4_Dirs_1.txt" id="1470-2">
	<nl lang="en"> at the next intersection, take a left onto the blue path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_4_Dirs_1.txt" id="1470-3">
	<nl lang="en"> follow it all the way to the coat rack and take a left onto the yellow path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_6_4_Dirs_1.txt" id="1470-4">
	<nl lang="en"> the end of this hall is 4 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-2">
	<nl lang="en"> walk forward twice or until you reach the blue hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-4">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_2_5_Dirs_1.txt" id="1475-6">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_7_Dirs_1.txt" id="1478-1">
	<nl lang="en"> go straight towards the coat rack and take a right at this junction </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_7_Dirs_1.txt" id="1478-2">
	<nl lang="en"> stay on the blue patch for about two sections </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_7_Dirs_1.txt" id="1478-3">
	<nl lang="en"> at the third, take a right onto the white cement path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_5_7_Dirs_1.txt" id="1478-4">
	<nl lang="en"> the very next intersection will be position 7 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_6_2_Dirs_1.txt" id="1481-1">
	<nl lang="en"> it's at a spot between the yellow floor and the grey floor, with an easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_6_Dirs_1.txt" id="1482-1">
	<nl lang="en"> go to the blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_6_Dirs_1.txt" id="1482-2">
	<nl lang="en"> go to the pink floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_6_Dirs_1.txt" id="1482-3">
	<nl lang="en"> make the first left into a dead ended street </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Jelly0_1_6_Dirs_1.txt" id="1482-4">
	<nl lang="en"> pos 6 is at the end </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_7_Dirs_1.txt" id="1486-1">
	<nl lang="en"> orient yourself along the yellow-tiled hallway with the easel in the stone hall to your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_7_Dirs_1.txt" id="1486-2">
	<nl lang="en"> go forward two segments to the intersection with the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_7_Dirs_1.txt" id="1486-3">
	<nl lang="en"> there is a hatrack two segments to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_2_Dirs_1.txt" id="1487-1">
	<nl lang="en"> find the butterfly halls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_2_Dirs_1.txt" id="1487-2">
	<nl lang="en"> pass a lampshade in the middle of a hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_2_Dirs_1.txt" id="1487-3">
	<nl lang="en"> make a turn </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_1_2_Dirs_1.txt" id="1487-4">
	<nl lang="en"> position 2 is at the corner of two halls with no tiles on the floor but butterflies on the walls </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_7_Dirs_1.txt" id="1488-1">
	<nl lang="en"> follow the pink path to the red brick path intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_7_Dirs_1.txt" id="1488-2">
	<nl lang="en"> take the red brick towards the butterflies on the wall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_1_7_Dirs_1.txt" id="1488-3">
	<nl lang="en"> at the intersection of plain cement and red brick path, this is position 7 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_4_Dirs_1.txt" id="1489-1">
	<nl lang="en"> go down till you can make a right in to another hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_4_Dirs_1.txt" id="1489-2">
	<nl lang="en"> go to the end of this, till you reach the blue floored area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_4_Dirs_1.txt" id="1489-3">
	<nl lang="en"> make a left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_3_4_Dirs_1.txt" id="1489-4">
	<nl lang="en"> keep going till the pink flor id on your left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Left ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_3_Dirs_1.txt" id="1490-1">
	<nl lang="en"> go forward </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_3_Dirs_1.txt" id="1490-2">
	<nl lang="en"> then left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_3_Dirs_1.txt" id="1490-3">
	<nl lang="en"> then straight down the bvlue hall until you get to a place in between a bench and a chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Sofa ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_4_Dirs_1.txt" id="1492-1">
	<nl lang="en"> go all the way down the blue hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_4_Dirs_1.txt" id="1492-2">
	<nl lang="en"> then take a right at the grassy hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Grid0_5_4_Dirs_1.txt" id="1492-3">
	<nl lang="en"> then go all the way down the grassy hall until it intersects with the yellow hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_6_Dirs_1.txt" id="1495-1">
	<nl lang="en"> position 6 is in the hall with the rose floors </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_Jelly0_3_6_Dirs_1.txt" id="1495-2">
	<nl lang="en"> it is a dead end which branches off and has two pictures of the eiffel tower on the walls </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_1_Dirs_1.txt" id="1496-1">
	<nl lang="en"> take the red brick patch towards the lamp </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_7_1_Dirs_1.txt" id="1496-2">
	<nl lang="en"> once at the black easel, you are at 1 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-1">
	<nl lang="en"> turn so that the chair is on your right side </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-4">
	<nl lang="en"> you should be facing a long red floored hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-5">
	<nl lang="en"> walk forward five times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 5  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-6">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-7">
	<nl lang="en"> you should now be facing a black floored hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_3_Dirs_1.txt" id="1497-8">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_6_Dirs_1.txt" id="1501-1">
	<nl lang="en"> one movement forward </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_7_6_Dirs_1.txt" id="1501-2">
	<nl lang="en"> then one movement to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_7_Dirs_1.txt" id="1504-1">
	<nl lang="en"> follow the pink floored area toward the fish walled area </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_L0_4_7_Dirs_1.txt" id="1504-2">
	<nl lang="en"> stop when the first fish hallway to your left appears </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Fish ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_6_Dirs_1.txt" id="1505-1">
	<nl lang="en"> go right one move </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_6_Dirs_1.txt" id="1505-2">
	<nl lang="en"> intersection of the gray hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-1">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-2">
	<nl lang="en"> there is a piece of furniture here </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-4">
	<nl lang="en"> go forward two segments, passing another piece of furniture </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-6">
	<nl lang="en"> you should now be facing the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_3_7_Dirs_1.txt" id="1510-7">
	<nl lang="en"> go forward three segments to the 't' interesection with the pink-flowered carpet hallway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_3_Dirs_1.txt" id="1512-1">
	<nl lang="en"> take the green path to the red brick intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Grass ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_3_Dirs_1.txt" id="1512-2">
	<nl lang="en"> go left onto the red brick path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Grid0_4_3_Dirs_1.txt" id="1512-3">
	<nl lang="en"> go towards the lamp and two intersections after the lamp, turn right and when you can only go right or left, you are at 3 </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Lamp ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_1_Dirs_1.txt" id="1516-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_1_Dirs_1.txt" id="1516-2">
	<nl lang="en"> walk forward three times or until you reach the pink walkway </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_1_Dirs_1.txt" id="1516-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_1_Dirs_1.txt" id="1516-4">
	<nl lang="en"> walk forward until you rech the red walkway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_3_1_Dirs_1.txt" id="1516-5">
	<nl lang="en"> there should be a painting easel there too </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_4_Dirs_1.txt" id="1519-1">
	<nl lang="en"> turn so the wall is on your back </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_4_Dirs_1.txt" id="1519-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_4_Dirs_1.txt" id="1519-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_4_Dirs_1.txt" id="1519-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_5_Dirs_1.txt" id="1522-1">
	<nl lang="en"> head all the way toward the butterfly hallway </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify(   )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_5_Dirs_1.txt" id="1522-2">
	<nl lang="en"> keep going down it until you reach a dead end square area </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KXP_Grid0_4_5_Dirs_1.txt" id="1522-3">
	<nl lang="en"> pos 5 is in the corner to the left as you enter the square block </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-1">
	<nl lang="en"> face toward the hatrack </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-2">
	<nl lang="en"> walk the one segment to it </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-3">
	<nl lang="en"> turn right in the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-4">
	<nl lang="en"> go forward until you reach a hall with pink flowered carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-6">
	<nl lang="en"> follow this hall until it 't's with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ At ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_5_2_Dirs_1.txt" id="1523-8">
	<nl lang="en"> postion 2 is the intersection at the end of the hall containing the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-1">
	<nl lang="en"> face the pink-flowered carpet hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-2">
	<nl lang="en"> go forward one segment to the intersection with the brick hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-3">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-5">
	<nl lang="en"> go forward four segments, passing a lamp, to the intersection with the wood hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-7">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete floor </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-8">
	<nl lang="en"> this intersection contains a bench </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_4_1_Dirs_1.txt" id="1525-9">
	<nl lang="en"> you will be facing a hatrack farther down the hall </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_2_Dirs_1.txt" id="1527-1">
	<nl lang="en"> face the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_2_Dirs_1.txt" id="1527-2">
	<nl lang="en"> go forward two segments to the intersection with the stone hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_2_Dirs_1.txt" id="1527-3">
	<nl lang="en"> there is an easel to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_1_Dirs_1.txt" id="1529-1">
	<nl lang="en"> go all the way down to the grey hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_1_Dirs_1.txt" id="1529-2">
	<nl lang="en"> then turn onto the red hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_1_Dirs_1.txt" id="1529-3">
	<nl lang="en"> then turn onto the wood hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-TJS_L0_2_1_Dirs_1.txt" id="1529-4">
	<nl lang="en"> there is a bench there </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Sofa ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_3_Dirs_1.txt" id="1535-1">
	<nl lang="en"> with your back to the wall move forward along the octagon flooring to the end of the alley </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_3_Dirs_1.txt" id="1535-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_3_Dirs_1.txt" id="1535-3">
	<nl lang="en"> move past the chair to the stool </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_7_3_Dirs_1.txt" id="1535-4">
	<nl lang="en"> turn and walk to the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-3">
	<nl lang="en"> go forward one segment to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-4">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-5">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_4_Dirs_1.txt" id="1536-6">
	<nl lang="en"> go forward two segments to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-1">
	<nl lang="en"> go forward two segments to the intersection of the blue-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-3">
	<nl lang="en"> go forward, passing the chair, to the intersection with the pink-flowered carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-5">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_4_6_Dirs_1.txt" id="1538-7">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_4_Dirs_1.txt" id="1539-1">
	<nl lang="en"> place your back to the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_4_Dirs_1.txt" id="1539-2">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_4_Dirs_1.txt" id="1539-3">
	<nl lang="en"> go forward along the pink-flowered carpet hall three segments to the blue-tiled hall, passing a hatrack maybe </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_7_4_Dirs_1.txt" id="1539-4">
	<nl lang="en"> the intersection is empty </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-1">
	<nl lang="en"> walk to the stool </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-2">
	<nl lang="en"> turn and walk one block pst the chair </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-4">
	<nl lang="en"> you are facing gray stone carpet and an easel is behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-5">
	<nl lang="en"> walk forward to the end of the aisle to the blue carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_3_6_Dirs_1.txt" id="1540-6">
	<nl lang="en"> turn left and move one block </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_7_Dirs_1.txt" id="1542-1">
	<nl lang="en"> go towards the intersection wiht red brick </nl>
	<mrl lang="marco">
	[ ]
      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_7_Dirs_1.txt" id="1542-2">
	<nl lang="en"> take a right onto the red brick path and go straight until you see a pink flowered path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_L0_1_7_Dirs_1.txt" id="1542-3">
	<nl lang="en"> go left on the pink path until you either have to turn left or go towards a dead end </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Path ,  type= 'Path' ,  side= [ Left ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-1">
	<nl lang="en"> turn to face the black corridor with the fish on either sides of the walls and an easel at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Fish ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-3">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-6">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-7">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_6_3_Dirs_1.txt" id="1543-8">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-1">
	<nl lang="en"> go on the wood path towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-2">
	<nl lang="en"> at the easel, take a left and go to the corner where you will meet the blue path </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-3">
	<nl lang="en"> take a right onto the blue path </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-4">
	<nl lang="en"> at the very first intersection, you will be at the pink path </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-5">
	<nl lang="en"> take a left onto the pink path and at the first intersection, go right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 1  ) ]  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_6_Dirs_1.txt" id="1546-6">
	<nl lang="en"> the very end of this hall is 6 </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_7_Dirs_1.txt" id="1547-1">
	<nl lang="en"> turn so the wall is on your left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_7_Dirs_1.txt" id="1547-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_7_Dirs_1.txt" id="1547-3">
	<nl lang="en"> turn right walk forward four times </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( distance= [ Distance( count= 4  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_7_Dirs_1.txt" id="1547-4">
	<nl lang="en"> turn right on the pink hallway </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_1_7_Dirs_1.txt" id="1547-5">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_2_Dirs_1.txt" id="1548-1">
	<nl lang="en"> at seven face the long alley with a lamp and an easel in front of you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_2_Dirs_1.txt" id="1548-2">
	<nl lang="en"> walk to the easel </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_7_2_Dirs_1.txt" id="1548-3">
	<nl lang="en"> you should see flowered carpet to the sides </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection ,  Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-2">
	<nl lang="en"> turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-3">
	<nl lang="en"> go forward three segments along the brick hall to the intersection with the pink-flowered carpet hall, passing a lamp </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Lamp ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 3  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Lamp ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-4">
	<nl lang="en"> this intersection contains a hatrack </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Hatrack ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-5">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_5_7_Dirs_1.txt" id="1549-6">
	<nl lang="en"> go forward two segments to the intersection with the yellow-tiled hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_1_Dirs_1.txt" id="1550-1">
	<nl lang="en"> take the wood path towards the easel </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_1_Dirs_1.txt" id="1550-2">
	<nl lang="en"> at the easel, go right and follow the path to the end of the hall </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Easel ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_1_Dirs_1.txt" id="1550-3">
	<nl lang="en"> at this corner, turn left onto the red brick </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-KLS_Jelly0_5_1_Dirs_1.txt" id="1550-4">
	<nl lang="en"> the next intersection is 1 </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_6_Dirs_1.txt" id="1551-1">
	<nl lang="en"> turn to face the long red hallway </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_6_Dirs_1.txt" id="1551-2">
	<nl lang="en"> walk forward twice </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_6_Dirs_1.txt" id="1551-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_7_6_Dirs_1.txt" id="1551-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_7_Dirs_1.txt" id="1557-1">
	<nl lang="en"> orient yourself to face the longer portion of the brick hall </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_7_Dirs_1.txt" id="1557-2">
	<nl lang="en"> the hatrack in the brick hall should be one segment behind you </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Hatrack ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_7_Dirs_1.txt" id="1557-3">
	<nl lang="en"> the bench at the intersection of the pink-flowered carpet hall and the yellow-tiled hall at your left; the intersection of the blue-tiled hall the the pink-flowered carpet hall to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_7_Dirs_1.txt" id="1557-4">
	<nl lang="en"> go forward three segments </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Grid0_1_7_Dirs_1.txt" id="1557-6">
	<nl lang="en"> there should be a bare concrete floored hall at the this intersection; pictures of butterflies in the hall to the right, leading to an empty 't' intersection with the blue-tiled hall and pictures of the eiffel tower leading to an empty 't' intersection to your left </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ,  Thing( value= Butterfly ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( value= Eiffel ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-1">
	<nl lang="en"> turn to face the short black hallway with the easel at the end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-2">
	<nl lang="en"> from here turn to the right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-3">
	<nl lang="en"> walk down the yellow corridor twice </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-5">
	<nl lang="en"> walk down the pink corridor to the intersection of the red one, 2 steps </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( distance= [ Distance( count= 2  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-6">
	<nl lang="en"> turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_L0_2_5_Dirs_1.txt" id="1560-7">
	<nl lang="en"> walk forward three times </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 3  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_3_Dirs_1.txt" id="1564-1">
	<nl lang="en"> with your back to the easel turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_3_Dirs_1.txt" id="1564-2">
	<nl lang="en"> walk to the corner of the green octagon carpet </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ,  Thing( dist= '0' ,  Appear= [ Honeycomb ] ,  type= 'Path' ,  side= [ Back ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_3_Dirs_1.txt" id="1564-3">
	<nl lang="en"> turn and move past the chair to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_L0_2_3_Dirs_1.txt" id="1564-4">
	<nl lang="en"> turn right and move to the dead end </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ,  Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Left ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_6_Dirs_1.txt" id="1566-1">
	<nl lang="en"> orient yourself along the stone hall with the end of the hall containing the easel behind you </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ,  Thing( value= Easel ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_6_Dirs_1.txt" id="1566-2">
	<nl lang="en"> go forward one segment to the intersection with a bare concrete hall </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ] ,  until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Cement ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_L0_2_6_Dirs_1.txt" id="1566-3">
	<nl lang="en"> there should be a bench in this hall to your right </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Sofa ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_2_Dirs_1.txt" id="1567-1">
	<nl lang="en"> with your back to the wall at 6 turn left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_2_Dirs_1.txt" id="1567-2">
	<nl lang="en"> walk to the second alley </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 2  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_2_Dirs_1.txt" id="1567-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_2_Dirs_1.txt" id="1567-4">
	<nl lang="en"> you should see an easel on dark gray carpet </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= Easel ,  type= 'Obj' ,  side= [ Front ]  ) ,  Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_6_2_Dirs_1.txt" id="1567-5">
	<nl lang="en"> walk to it </nl>
	<mrl lang="marco">
			[
		Travel(   )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_6_Dirs_1.txt" id="1570-1">
	<nl lang="en"> face the long red-bricked alley and move along it to the wooden flooring </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Brick ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Wood ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_6_Dirs_1.txt" id="1570-2">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Grid0_1_6_Dirs_1.txt" id="1570-3">
	<nl lang="en"> move one block </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )                 
		]                 
      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-1">
	<nl lang="en"> place your back against the wall of the 't' intersection </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Back ]  ) ,  Thing( dist= '0' ,  type= 'Struct' ,  side= [ Front ] ,  value= Intersection , Structural= [ T_Int ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-2">
	<nl lang="en"> turn to the left </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-3">
	<nl lang="en"> go forward to the intersection with the pink-flowered carpet hall, passing the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Front ]  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Face( faced= Verify( desc= [ Thing( value= GenChair ,  type= 'Obj' ,  side= [ Back ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-4">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-5">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-6">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EMWC_Jelly0_3_6_Dirs_1.txt" id="1571-7">
	<nl lang="en"> go forward one segment </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_2_Dirs_1.txt" id="1572-1">
	<nl lang="en"> turn so the wall is on your right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   )  )  )
		,
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  value= Wall ,  type= 'Obj' ,  side= [ Right ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_2_Dirs_1.txt" id="1572-2">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_2_Dirs_1.txt" id="1572-3">
	<nl lang="en"> turn right </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-EDA_Grid0_6_2_Dirs_1.txt" id="1572-4">
	<nl lang="en"> walk forward once </nl>
	<mrl lang="marco">
			[
		Travel( distance= [ Distance( count= 1  ) ]  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_2.txt" id="1573-1">
	<nl lang="en"> move to the flowered carpet and turn left </nl>
	<mrl lang="marco">
			[
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Rose ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		,
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Left ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_2.txt" id="1573-2">
	<nl lang="en"> move along the blue carpet to the chair </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ BlueTile ] ,  type= 'Path' ,  side= [ Front ] ,  value= Path  ) ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= GenChair ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_2.txt" id="1573-3">
	<nl lang="en"> turn right and move forward to the stool </nl>
	<mrl lang="marco">
			[
		Turn( face= Face( faced= Verify(   ) ,  direction= [ Right ]  )  )
		,
		Travel( until= Verify( desc= [ Thing( dist= '0' ,  value= Barstool ,  type= 'Obj' ,  side= [ At ]  ) ]  )  )
		]

      </mrl>
</example>

    <example file="Cleaned-WLH_Jelly0_6_7_Dirs_2.txt" id="1573-4">
	<nl lang="en"> the side alleys are stone </nl>
	<mrl lang="marco">
			[
		Face( faced= Verify( desc= [ Thing( dist= '0' ,  Appear= [ Stone ] ,  type= 'Path' ,  side= [ Sides ] ,  value= Path  ) ]  )  )
		]

      </mrl>
</example>

</examples>
